{"version":3,"file":"js/decidim_meetings-21a48e1d97993e2c8eac.js","mappings":"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","sources":["webpack://decidim-development-app/../decidim-meetings/app/packs/images/ sync ^\\.\\/.*$","webpack://decidim-development-app/webpack/bootstrap","webpack://decidim-development-app/webpack/runtime/hasOwnProperty shorthand","webpack://decidim-development-app/webpack/runtime/publicPath","webpack://decidim-development-app/../decidim-core/app/packs/src/decidim/geocoding/coordinate_input.js","webpack://decidim-development-app/../decidim-core/app/packs/src/decidim/geocoding/attach_input.js","webpack://decidim-development-app/../decidim-admin/app/packs/src/decidim/admin/field_dependent_inputs.component.js","webpack://decidim-development-app/../decidim-meetings/app/packs/src/decidim/meetings/meetings_form.js","webpack://decidim-development-app/../decidim-meetings/app/packs/src/decidim/meetings/poll.component.js","webpack://decidim-development-app/../decidim-meetings/app/packs/src/decidim/meetings/meetings_polls.js","webpack://decidim-development-app/../decidim-forms/app/packs/src/decidim/forms/option_attached_inputs.component.js","webpack://decidim-development-app/../decidim-forms/app/packs/src/decidim/forms/autosortable_checkboxes.component.js","webpack://decidim-development-app/../decidim-forms/app/packs/src/decidim/forms/display_conditions.component.js","webpack://decidim-development-app/../decidim-forms/app/packs/src/decidim/forms/max_choices_alert.component.js","webpack://decidim-development-app/../decidim-forms/app/packs/src/decidim/forms/forms.js","webpack://decidim-development-app/../decidim-meetings/app/packs/entrypoints/decidim_meetings.js"],"sourcesContent":["var map = {\n\t\"./decidim/gamification/badges/decidim_gamification_badges_attended_meetings.svg\": 49346,\n\t\"./decidim/meetings/decidim_meetings.svg\": 5123\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 41173;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/decidim-packs/\";","/**\n * Get coordinate input name from a given $input\n * @param {string} coordinate - Allows to find 'latitude' or 'longitude' field.\n * @param {jQuery} $input - Address input field\n * @param {Object} options (optional) - Extra options\n * @returns {string} - Returns input name\n */\nexport default function getCoordinateInputName(coordinate, $input, options) {\n  const key = `${coordinate}Name`;\n  if (options[key]) {\n    return options[key];\n  }\n\n  const inputName = $input.attr(\"name\");\n  const subNameMatch = /\\[[^\\]]+\\]$/;\n  if (inputName.match(subNameMatch)) {\n    return inputName.replace(subNameMatch, `[${coordinate}]`);\n  }\n\n  return coordinate;\n}\n","/* eslint-disable require-jsdoc */\nimport getCoordinateInputName from \"./coordinate_input\"\n\n/**\n * You can use this method to \"attach\" front-end geocoding to any forms in the\n * front-end which have address fields with geocoding autocompletion\n * functionality already applied to them.\n *\n * To learn more about the front-end geocoding autocompletion, please refer to\n * the maps documentation at: /docs/customization/maps.md.\n *\n * When the geocoding autocompletion finishes, most of the times, its results\n * will also contain the geocoordinate information for the selected address.\n * This method allows you to pass these coordinates (latitude and longitude)\n * to the same front-end form where the geocoding autocompletion address field\n * is located at (which is the $input you pass to this method). The latitude\n * and longitude coordinates will be added or \"attached\" to the form once the\n * user selects one of the suggested addresses.\n *\n * Therefore, if there was the following geocoding autocompletion field at\n * your form:\n *   <input\n *     id=\"record_address\"\n *     type=\"text\"\n *     name=\"record[address]\"\n *     data-decidim-geocoding=\"{&quot;url&quot;:&quot;https://photon.example.org/api/&quot;}\"\n *   />\n *\n * You would then \"attach\" the geocoding result coordinates to the same form\n * where this input is at as follows:\n *   $(document).ready(function() {\n *     window.Decidim.attachGeocoding($(\"#record_address\"));\n *   });\n *\n * Now, after the user selects one of the suggested geocoding autocompletion\n * addresses and the geocoding autocompletion API provides the coordinates in\n * the results, you would have the following fields automatically generated\n * to your form:\n *   <input id=\"record_address\" type=\"text\" name=\"record[address]\" value=\"Selected address, 00210, City\" ... />\n *   <input id=\"record_latitude\" type=\"hidden\" name=\"record[latitude]\" value=\"1.123\" />\n *   <input id=\"record_longitude\" type=\"hidden\" name=\"record[longitude]\" value=\"2.234\" />\n *\n * If you would not do the attachment, these hidden longitude and latitude\n * fields would not be generated and the geocoding would have to happen at the\n * server-side when the form is submitted. The problem with that approach\n * would be that the server-side address geocoding could potentially result in\n * different coordinates than what the user actually selected in the front-end\n * because the autocompletion API can return different coordinates than the\n * geocoding API. Another reason is to avoid unnecessary calls to the\n * geocoding API as the front-end geocoding suggestion already returned the\n * coordinate values we need.\n *\n * @param {jQuery} $input The input jQuery element for the geocoded address\n *   field.\n * @param {Object} options (optional) Extra options if you want to customize\n *   the latitude and longitude element IDs or names from the default.\n * @param {function} callback (optional) Callback to run when updating the coordinates values\n * @returns {void}\n */\n\nexport default function attachGeocoding($input, options, callback) {\n  const attachOptions = $.extend({}, options);\n  const inputIdParts = $input.attr(\"id\").split(\"_\");\n  inputIdParts.pop();\n\n  const idPrefix = `${inputIdParts.join(\"_\")}`;\n\n  let latitudeName = \"latitude\";\n  let longitudeName = \"longitude\";\n\n  if ($input.length > 0) {\n    latitudeName = getCoordinateInputName(\"latitude\", $input, attachOptions);\n    longitudeName = getCoordinateInputName(\"longitude\", $input, attachOptions);\n  }\n\n  const config = $.extend({\n    latitudeId: `${idPrefix}_latitude`,\n    longitudeId: `${idPrefix}_longitude`,\n    latitudeName: latitudeName,\n    longitudeName: longitudeName\n  }, options);\n  let geocoded = false;\n\n  const createCoordinateFields = () => {\n    let $latitude = $(`#${config.latitudeId}`);\n    if ($latitude.length < 1) {\n      $latitude = $(`<input type=\"hidden\" name=\"${config.latitudeName}\" id=\"${config.latitudeId}\" />`);\n      $input.after($latitude);\n    }\n\n    let $longitude = $(`#${config.longitudeId}`);\n    if ($longitude.length < 1) {\n      $longitude = $(`<input type=\"hidden\" name=\"${config.longitudeName}\" id=\"${config.longitudeId}\" />`);\n      $input.after($longitude);\n    }\n  }\n  const clearCoordinateFields = () => {\n    if (geocoded) {\n      return;\n    }\n\n    $(`#${config.latitudeId}`).val(\"\").removeAttr(\"value\");\n    $(`#${config.longitudeId}`).val(\"\").removeAttr(\"value\");\n  };\n  const setCoordinates = (coordinates) => {\n    createCoordinateFields();\n\n    $(`#${config.latitudeId}`).val(coordinates[0]).attr(\"value\", coordinates[0]);\n    $(`#${config.longitudeId}`).val(coordinates[1]).attr(\"value\", coordinates[1]);\n  }\n\n  // When the user changes the value of the coordinate field without selecting\n  // any of the geocoding autocomplete results, clear the current latitude and\n  // longitude values to let the backend do the geocoding. Once a geocoding\n  // autocomplete value has been selected, assume the user just wants to\n  // refine the address formatting without changing the location point value.\n  // If they want, they can still modify the point in the next step of the\n  // proposal creation/editing.\n  $input.on(\"change.decidim\", () => {\n    clearCoordinateFields();\n  });\n\n  // When we receive the geocoding event on the field, update the coordinate\n  // values.\n  $input.on(\"geocoder-suggest-coordinates.decidim\", (_ev, coordinates) => {\n    setCoordinates(coordinates);\n    geocoded = true;\n    callback(coordinates)\n  });\n\n  // Set the initial values if the field defines the coordinates\n  const coordinates = `${$input.data(\"coordinates\")}`.split(\",\").map(parseFloat);\n  if (Array.isArray(coordinates) && coordinates.length === 2) {\n    setCoordinates(coordinates);\n  }\n}\n","/* eslint-disable require-jsdoc */\nclass FieldDependentInputsComponent {\n  constructor(options = {}) {\n    this.controllerField = options.controllerField;\n    this.wrapperSelector = options.wrapperSelector;\n    this.dependentFieldsSelector = options.dependentFieldsSelector;\n    this.dependentInputSelector = options.dependentInputSelector;\n    this.enablingCondition = options.enablingCondition;\n    this._bindEvent();\n    this._run();\n  }\n\n  _run() {\n    const $controllerField = this.controllerField;\n    const $dependentFields = $controllerField.parents(this.wrapperSelector).find(this.dependentFieldsSelector);\n    const $dependentInputs = $dependentFields.find(this.dependentInputSelector);\n\n    if (this.enablingCondition($controllerField)) {\n      $dependentInputs.prop(\"disabled\", false);\n      $dependentFields.show();\n    } else {\n      $dependentInputs.prop(\"disabled\", true);\n      $dependentFields.hide();\n    }\n  }\n\n  _bindEvent() {\n    this.controllerField.on(\"change\", () => {\n      this._run();\n    });\n  }\n}\n\nexport default function createFieldDependentInputs(options) {\n  return new FieldDependentInputsComponent(options);\n}\n\n","import attachGeocoding from \"src/decidim/geocoding/attach_input\"\nimport createFieldDependentInputs from \"src/decidim/admin/field_dependent_inputs.component\"\n\n$(() => {\n  // Adds the latitude/longitude inputs after the geocoding is done\n  const $meetingAddress = $(\"#meeting_address\");\n  if ($meetingAddress.length > 0) {\n    attachGeocoding($meetingAddress);\n  }\n\n  const $form = $(\".meetings_form\");\n  if ($form.length > 0) {\n    const $meetingTypeOfMeeting = $form.find(\"#meeting_type_of_meeting\");\n    const $meetingOnlineFields = $form.find(\".field[data-meeting-type='online']\");\n    const $meetingInPersonFields = $form.find(\".field[data-meeting-type='in_person']\");\n    const $meetingOnlineAccessLevelFields = $form.find(\".field[data-meeting-type='online-access-level']\");\n\n    const toggleDependsOnSelect = ($target, $showDiv, type) => {\n      const value = $target.val();\n      if (value === \"hybrid\") {\n        $showDiv.show();\n      } else {\n        $showDiv.hide();\n        if (value === type) {\n          $showDiv.show();\n        }\n      }\n    };\n\n    $meetingTypeOfMeeting.on(\"change\", (ev) => {\n      const $target = $(ev.target);\n      const embedTypeValue = $(\"#meeting_iframe_embed_type\").val();\n\n      toggleDependsOnSelect($target, $meetingOnlineFields, \"online\");\n      toggleDependsOnSelect($target, $meetingInPersonFields, \"in_person\");\n      if (embedTypeValue === \"none\") {\n        $meetingOnlineAccessLevelFields.hide();\n      } else {\n        toggleDependsOnSelect($target, $meetingOnlineAccessLevelFields, \"online\");\n      }\n    });\n\n    toggleDependsOnSelect($meetingTypeOfMeeting, $meetingOnlineFields, \"online\");\n    toggleDependsOnSelect($meetingTypeOfMeeting, $meetingInPersonFields, \"in_person\");\n\n\n    const $meetingRegistrationType = $form.find(\"#meeting_registration_type\");\n    const $meetingRegistrationTerms = $form.find(\"#meeting_registration_terms\");\n    const $meetingRegistrationUrl = $form.find(\"#meeting_registration_url\");\n    const $meetingAvailableSlots = $form.find(\"#meeting_available_slots\");\n\n    $meetingRegistrationType.on(\"change\", (ev) => {\n      const $target = $(ev.target);\n      toggleDependsOnSelect($target, $meetingAvailableSlots, \"on_this_platform\");\n      toggleDependsOnSelect($target, $meetingRegistrationTerms, \"on_this_platform\");\n      toggleDependsOnSelect($target, $meetingRegistrationUrl, \"on_different_platform\");\n    });\n\n    toggleDependsOnSelect($meetingRegistrationType, $meetingAvailableSlots, \"on_this_platform\");\n    toggleDependsOnSelect($meetingRegistrationType, $meetingRegistrationTerms, \"on_this_platform\");\n    toggleDependsOnSelect($meetingRegistrationType, $meetingRegistrationUrl, \"on_different_platform\");\n\n    createFieldDependentInputs({\n      controllerField: $(\"#meeting_iframe_embed_type\"),\n      wrapperSelector: \".iframe-fields\",\n      dependentFieldsSelector: \".iframe-fields--access-level\",\n      dependentInputSelector: \"input\",\n      enablingCondition: ($field) => {\n        return $field.val() !== \"none\"\n      }\n    });\n  }\n});\n","/* eslint id-length: [\"error\", { \"exceptions\": [\"$\"] }] */\n\n/**\n * A plain Javascript component that handles questions from polls in meetings:\n *   - fetches them via Ajax\n *   - enables a polling to automatically update them\n *\n * @class\n * @augments Component\n */\n\n// This is necessary for testing purposes\nconst $ = window.$;\n\n// Default question states\nconst OPEN = \"open\";\nconst CLOSED = \"closed\";\n\nexport default class PollComponent {\n  constructor($element, config, $counter = null) {\n    this.$element = $element;\n    this.$counter = $counter;\n    this.questionsUrl = config.questionsUrl;\n    this.pollingInterval = config.pollingInterval || 5000;\n    this.mounted = false;\n    this.questions = {};\n  }\n\n  /**\n   * Returns if the component is mounted or not\n   * @public\n   * @returns {Void} - Returns nothing\n   */\n  isMounted() {\n    return this.mounted;\n  }\n\n  /**\n   * Handles the logic for mounting the component\n   * @public\n   * @returns {Void} - Returns nothing\n   */\n  mountComponent() {\n    if (this.$element.length > 0 && !this.mounted) {\n      this.mounted = true;\n      this._fetchQuestions();\n    }\n  }\n\n  unmountComponent() {\n    if (this.mounted) {\n      this.mounted = false;\n      this._stopPolling();\n      this.$element.html(\"\");\n    }\n  }\n\n  /**\n   * Performs the ajax call that updates the list of questions\n   * Before, stores the current questions states to apply them after the ajax call has\n   * been completed\n   * @private\n   * @returns {Void} - Returns nothing\n   */\n  _fetchQuestions() {\n    // Store current questions state (open / closed) before overwritting them with the Ajax call\n    // response.\n    this._storeQuestionState(this.$element);\n\n    $.ajax({\n      url: this.questionsUrl,\n      method: \"GET\",\n      contentType: \"application/javascript\"\n    }).done(() => {\n      this._updateCounter();\n      this._setQuestionsState(this.$element);\n      this._pollQuestions();\n    });\n  }\n\n  /**\n   * Iterates over all existing questions and stores the state in an internal attribute.\n   * @private\n   * @param {jQuery} $parent - The HTML content for the questionnaire.\n   * @returns {Void} - Returns nothing\n   */\n  _storeQuestionState($parent) {\n    $(\"[data-question]\", $parent).each((_i, el) => {\n      const $el = $(el);\n      const questionId = $el.data(\"question\");\n      if ($el[0].open === true) {\n        this.questions[questionId] = OPEN;\n      } else {\n        this.questions[questionId] = CLOSED;\n      }\n    });\n  }\n\n  /**\n   * Initializes the states of all the questions.\n   * @private\n   * @param {jQuery} $parent - The HTML container for the questionnaire.\n   * @returns {Void} - Returns nothing\n   */\n  _setQuestionsState($parent) {\n    $(\"[data-question]\", $parent).each((_i, el) => {\n      this._setQuestionState($(el));\n    });\n  }\n\n  /**\n   * Initializes the state of a single question with two types of modifications:\n   *   - sets the is-new class if the question is new (doesn't exist in the internal list)\n   *   - sets the state to open if it was open in the internal list\n   * @private\n   * @param {jQuery} $el - The HTML container for the questionnaire.\n   * @returns {Void} - Returns nothing\n   */\n  _setQuestionState($el) {\n    const questionId = $el.data(\"question\");\n    // Current question state\n    const state = this.questions[questionId];\n    // New questions have a special class\n    if (!state) {\n      $el.addClass(\"is-new\");\n    } else if (state === OPEN) {\n      $el.prop(OPEN, true);\n    }\n  }\n\n  /**\n   * Sets a timeout to poll new questions.\n   * @private\n   * @returns {Void} - Returns nothing\n   */\n  _pollQuestions() {\n    this._stopPolling();\n\n    this.pollTimeout = setTimeout(() => {\n      this._fetchQuestions();\n    }, this.pollingInterval);\n  }\n\n  /**\n   * Stops polling for new questions.\n   * @private\n   * @returns {Void} - Returns nothing\n   */\n  _stopPolling() {\n    if (this.pollTimeout) {\n      clearTimeout(this.pollTimeout);\n    }\n  }\n\n  /**\n   * Updates the counter with the number of questions returned in the Ajax call\n   * @private\n   * @returns {Void} - Returns nothing\n   */\n  _updateCounter() {\n    if (this.$counter) {\n      const questionsCount = this.$element.find(\"details\").length;\n      this.$counter.html(`(${questionsCount})`);\n    }\n  }\n}\n","import MeetingsPollComponent from \"src/decidim/meetings/poll.component\"\nconst OPEN_CLASS = \"is-open\";\n\n$(() => {\n  // Mount polls component for users\n  const $container = $(\"[data-decidim-meetings-poll]\");\n  const $counter = $(\"#visible-questions-count\");\n\n  if ($container.length) {\n    const poll = new MeetingsPollComponent($container, $container.data(\"decidim-meetings-poll\"), $counter);\n\n    $(\".meeting-polls__action-list\").on(\"click\", (event) => {\n      event.preventDefault();\n\n      if (poll.isMounted()) {\n        $(event.target).removeClass(OPEN_CLASS);\n        $container.removeClass(OPEN_CLASS);\n        poll.unmountComponent();\n      } else {\n        $(event.target).addClass(OPEN_CLASS);\n        $container.addClass(OPEN_CLASS);\n        poll.mountComponent();\n      }\n    });\n  }\n\n  // Mount polls component for admins\n  const $adminContainer = $(\"[data-decidim-admin-meetings-poll]\");\n\n  if ($adminContainer.length) {\n    const adminPoll = new MeetingsPollComponent($adminContainer, $adminContainer.data(\"decidim-admin-meetings-poll\"));\n    $(\".meeting-polls__action-administrate\").on(\"click\", (event) => {\n      event.preventDefault();\n\n      if (adminPoll.isMounted()) {\n        $(event.target).removeClass(OPEN_CLASS);\n        $adminContainer.removeClass(OPEN_CLASS);\n        adminPoll.unmountComponent();\n      } else {\n        $(event.target).addClass(OPEN_CLASS);\n        $adminContainer.addClass(OPEN_CLASS);\n        adminPoll.mountComponent();\n      }\n    });\n  }\n});\n","/* eslint-disable require-jsdoc */\n\nclass OptionAttachedInputsComponent {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.controllerFieldSelector = options.controllerFieldSelector;\n    this.dependentInputSelector = options.dependentInputSelector;\n    this.controllerSelector = this.wrapperField.find(this.controllerFieldSelector);\n    this._bindEvent();\n    this._run();\n  }\n\n  _run() {\n    this.controllerSelector.each((idx, el) => {\n      const $field = $(el);\n      const enabled = $field.is(\":checked\");\n\n      $field.parents(\"div.collection-input\").find(this.dependentInputSelector).prop(\"disabled\", !enabled);\n    });\n  }\n\n  _bindEvent() {\n    this.controllerSelector.on(\"change\", () => {\n      this._run();\n    });\n  }\n}\n\nexport default function createOptionAttachedInputs(options) {\n  return new OptionAttachedInputsComponent(options);\n}\n","/* eslint-disable require-jsdoc */\n/* eslint-disable no-ternary */\n\nclass AutosortableCheckboxesComponent {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this._bindEvent();\n    this._order();\n    this._normalize();\n  }\n\n  // Order by position\n  _order() {\n    const max = $(this.wrapperField).find(\".collection-input\").length;\n    $(this.wrapperField).find(\".collection-input\").each((idx, el) => {\n      const $positionField = $(el).find(\"input[name$=\\\\[position\\\\]]\");\n      const position = $positionField.val()\n        ? parseInt($positionField.val(), 10)\n        : max;\n\n      let $next = $(el).next();\n      while ($next.length > 0) {\n        const $nextPositionField = $next.find(\"input[name$=\\\\[position\\\\]]\");\n        const nextPosition = $nextPositionField.val()\n          ? parseInt($nextPositionField.val(), 10)\n          : max;\n\n        if (position > nextPosition) {\n          $next.insertBefore($(el));\n        }\n        $next = $next.next();\n      }\n    });\n  }\n\n  _findLastPosition() {\n    let lastPosition = 0;\n    $(this.wrapperField).find(\".collection-input\").each((idx, el) => {\n      const $positionField = $(el).find(\"input[name$=\\\\[position\\\\]]\");\n      const position = parseInt($positionField.val(), 10);\n      if (position > lastPosition) {\n        lastPosition = position;\n      }\n    });\n    return lastPosition;\n  }\n\n  _normalize() {\n    $(this.wrapperField).find(\".collection-input .position\").each((idx, el) => {\n      const $positionField = $(el).parent().find(\"input[name$=\\\\[position\\\\]]\");\n      if ($positionField.val()) {\n        $positionField.val(idx);\n        $positionField.prop(\"disabled\", false);\n        $(el).html(`${idx + 1}. `);\n      }\n    });\n  }\n\n  _bindEvent() {\n    $(this.wrapperField).find(\"input[type=checkbox]\").on(\"change\", (el) => {\n      const $parentLabel = $(el.target).parents(\"label\");\n      const $positionSelector = $parentLabel.find(\".position\");\n      const $positionField = $parentLabel.find(\"input[name$=\\\\[position\\\\]]\");\n      const lastPosition = this._findLastPosition();\n\n      if (el.target.checked) {\n        $positionField.val(lastPosition + 1);\n        $positionField.prop(\"disabled\", false);\n        $positionSelector.html(lastPosition + 1);\n      } else {\n        $positionField.val(\"\");\n        $positionField.prop(\"disabled\", true);\n        $positionSelector.html(\"\");\n      }\n      this._order();\n      this._normalize();\n    });\n  }\n}\n\nexport default function createAutosortableCheckboxes(options) {\n  return new AutosortableCheckboxesComponent(options);\n}\n","/* eslint-disable no-ternary, no-plusplus, require-jsdoc */\n\nclass DisplayCondition {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.type = options.type;\n    this.conditionQuestion = options.conditionQuestion;\n    this.answerOption = options.answerOption;\n    this.mandatory = options.mandatory;\n    this.value = options.value;\n    this.onFulfilled = options.onFulfilled;\n    this.bindEvent();\n  }\n\n  bindEvent() {\n    this.checkCondition();\n    this.getInputsToListen().on(\"change\", this.checkCondition.bind(this));\n  }\n\n  getInputValue() {\n    const $conditionWrapperField = $(`.question[data-question-id='${this.conditionQuestion}']`);\n    const $textInput = $conditionWrapperField.find(\"textarea, input[type='text']:not([name$=\\\\[custom_body\\\\]])\");\n\n    if ($textInput.length) {\n      return $textInput.val();\n    }\n\n    let multipleInput = [];\n\n    $conditionWrapperField.find(\".radio-button-collection, .check-box-collection\").find(\".collection-input\").each((idx, el) => {\n      const $input = $(el).find(\"input[name$=\\\\[body\\\\]]\");\n      const checked = $input.is(\":checked\");\n\n      if (checked) {\n        const text = $(el).find(\"input[name$=\\\\[custom_body\\\\]]\").val();\n        const value = $input.val();\n        const id = $(el).find(\"input[name$=\\\\[answer_option_id\\\\]]\").val();\n\n        multipleInput.push({ id, value, text });\n      }\n    });\n\n    return multipleInput;\n  }\n\n  getInputsToListen() {\n    const $conditionWrapperField = $(`.question[data-question-id='${this.conditionQuestion}']`);\n    const $textInput = $conditionWrapperField.find(\"textarea, input[type='text']:not([name$=\\\\[custom_body\\\\]])\");\n\n    if ($textInput.length) {\n      return $textInput;\n    }\n\n    return $conditionWrapperField.find(\".collection-input\").find(\"input:not([type='hidden'])\");\n  }\n\n  checkAnsweredCondition(value) {\n    if (typeof (value) !== \"object\") {\n      return Boolean(value);\n    }\n\n    return Boolean(value.some((it) => it.value));\n  }\n\n  checkNotAnsweredCondition(value) {\n    return !this.checkAnsweredCondition(value);\n  }\n\n  checkEqualCondition(value) {\n    if (value.length) {\n      return value.some((it) => it.id === this.answerOption.toString());\n    }\n    return false;\n  }\n\n  checkNotEqualCondition(value) {\n    if (value.length) {\n      return value.every((it) => it.id !== this.answerOption.toString());\n    }\n    return false;\n  }\n\n  checkMatchCondition(value) {\n    let regexp = new RegExp(this.value, \"i\");\n\n    if (typeof (value) !== \"object\") {\n      return Boolean(value.match(regexp));\n    }\n\n    return value.some(function (it) {\n      return it.text\n        ? it.text.match(regexp)\n        : it.value.match(regexp)\n    });\n  }\n\n  checkCondition() {\n    const value = this.getInputValue();\n    let fulfilled = false;\n\n    switch (this.type) {\n    case \"answered\":\n      fulfilled = this.checkAnsweredCondition(value);\n      break;\n    case \"not_answered\":\n      fulfilled = this.checkNotAnsweredCondition(value);\n      break;\n    case \"equal\":\n      fulfilled = this.checkEqualCondition(value);\n      break;\n    case \"not_equal\":\n      fulfilled = this.checkNotEqualCondition(value);\n      break;\n    case \"match\":\n      fulfilled = this.checkMatchCondition(value);\n      break;\n    default:\n      fulfilled = false;\n      break;\n    }\n\n    this.onFulfilled(fulfilled);\n  }\n}\n\nclass DisplayConditionsComponent {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.conditions = {};\n    this.showCount = 0;\n    this.initializeConditions();\n  }\n\n  initializeConditions() {\n    const $conditionElements = this.wrapperField.find(\".display-condition\");\n\n    $conditionElements.each((idx, el) => {\n      const $condition = $(el);\n      const id = $condition.data(\"id\");\n      this.conditions[id] = {};\n\n      this.conditions[id] = new DisplayCondition({\n        wrapperField: this.wrapperField,\n        type: $condition.data(\"type\"),\n        conditionQuestion: $condition.data(\"condition\"),\n        answerOption: $condition.data(\"option\"),\n        mandatory: $condition.data(\"mandatory\"),\n        value: $condition.data(\"value\"),\n        onFulfilled: (fulfilled) => {\n          this.onFulfilled(id, fulfilled);\n        }\n      });\n    });\n  }\n\n  mustShow() {\n    const conditions = Object.values(this.conditions);\n    const mandatoryConditions = conditions.filter((condition) => condition.mandatory);\n    const nonMandatoryConditions = conditions.filter((condition) => !condition.mandatory);\n\n    if (mandatoryConditions.length) {\n      return mandatoryConditions.every((condition) => condition.fulfilled);\n    }\n\n    return nonMandatoryConditions.some((condition) => condition.fulfilled);\n\n  }\n\n  onFulfilled(id, fulfilled) {\n    this.conditions[id].fulfilled = fulfilled;\n\n    if (this.mustShow()) {\n      this.showQuestion();\n    }\n    else {\n      this.hideQuestion();\n    }\n  }\n\n  showQuestion() {\n    this.wrapperField.fadeIn();\n    this.wrapperField.find(\"input, textarea\").prop(\"disabled\", null);\n    this.showCount++;\n  }\n\n  hideQuestion() {\n    if (this.showCount) {\n      this.wrapperField.fadeOut();\n    }\n    else {\n      this.wrapperField.hide();\n    }\n\n    this.wrapperField.find(\"input, textarea\").prop(\"disabled\", \"disabled\");\n  }\n}\n\nexport default function createDisplayConditions(options) {\n  return new DisplayConditionsComponent(options);\n}\n","/* eslint-disable require-jsdoc */\n\nclass MaxChoicesAlertComponent {\n  constructor(options = {}) {\n    this.wrapperField = options.wrapperField;\n    this.alertElement = options.alertElement;\n    this.controllerFieldSelector = options.controllerFieldSelector;\n    this.controllerCollectionSelector = options.controllerCollectionSelector;\n    this.maxChoices = options.maxChoices;\n    this.controllerSelector = this.wrapperField.find(this.controllerFieldSelector);\n    this._bindEvent();\n    this._run();\n  }\n\n  _run() {\n    const rows = this.wrapperField.find(this.controllerCollectionSelector);\n\n    let alert = false;\n\n    rows.each((rowIdx, row) => {\n      const checked = $(row).find(this.controllerFieldSelector).filter((checkboxIdx, checkbox) => $(checkbox).is(\":checked\"));\n\n      alert = alert || checked.length > this.maxChoices;\n    });\n\n    if (alert) {\n      this.alertElement.show();\n    }\n    else {\n      this.alertElement.hide();\n    }\n  }\n\n  _bindEvent() {\n    this.controllerSelector.on(\"change\", () => {\n      this._run();\n    });\n  }\n}\n\nexport default function createMaxChoicesAlertComponent(options) {\n  return new MaxChoicesAlertComponent(options);\n}\n","/* eslint-disable require-jsdoc */\n\nimport createOptionAttachedInputs from \"src/decidim/forms/option_attached_inputs.component\"\nimport createAutosortableCheckboxes from \"src/decidim/forms/autosortable_checkboxes.component\"\nimport createDisplayConditions from \"src/decidim/forms/display_conditions.component\"\nimport createMaxChoicesAlertComponent from \"src/decidim/forms/max_choices_alert.component\"\n\n$(() => {\n  $(\".radio-button-collection, .check-box-collection\").each((idx, el) => {\n    createOptionAttachedInputs({\n      wrapperField: $(el),\n      controllerFieldSelector: \"input[type=radio], input[type=checkbox]\",\n      dependentInputSelector: \"input[type=text], input[type=hidden]\"\n    });\n  });\n\n  $.unique($(\".check-box-collection\").parents(\".answer\")).each((idx, el) => {\n    const maxChoices = $(el).data(\"max-choices\");\n    if (maxChoices) {\n      createMaxChoicesAlertComponent({\n        wrapperField: $(el),\n        controllerFieldSelector: \"input[type=checkbox]\",\n        controllerCollectionSelector: \".check-box-collection\",\n        alertElement: $(el).find(\".max-choices-alert\"),\n        maxChoices: maxChoices\n      });\n    }\n  });\n\n  $(\".sortable-check-box-collection\").each((idx, el) => {\n    createAutosortableCheckboxes({\n      wrapperField: $(el)\n    })\n  });\n\n  $(\".answer-questionnaire .question[data-conditioned='true']\").each((idx, el) => {\n    createDisplayConditions({\n      wrapperField: $(el)\n    });\n  });\n\n  const $form = $(\"form.answer-questionnaire\");\n  if ($form.length > 0) {\n    $form.find(\"input, textarea, select\").on(\"change\", () => {\n      $form.data(\"changed\", true);\n    });\n\n    const safePath = $form.data(\"safe-path\").split(\"?\")[0];\n    $(document).on(\"click\", \"a\", (event) => {\n      window.exitUrl = event.currentTarget.href;\n    });\n    $(document).on(\"submit\", \"form\", (event) => {\n      window.exitUrl = event.currentTarget.action;\n    });\n\n    window.addEventListener(\"beforeunload\", (event) => {\n      const exitUrl = window.exitUrl;\n      const hasChanged = $form.data(\"changed\");\n      window.exitUrl = null;\n\n      if (!hasChanged || (exitUrl && exitUrl.includes(safePath))) {\n        return;\n      }\n\n      event.returnValue = true;\n    });\n  }\n})\n","import \"src/decidim/meetings/meetings_form\"\nimport \"src/decidim/meetings/meetings_polls\"\nimport \"src/decidim/forms/forms\"\n\n// Images\nrequire.context(\"../images\", true)\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","__webpack_modules__","obj","prop","prototype","hasOwnProperty","call","p","getCoordinateInputName","coordinate","$input","options","key","inputName","attr","subNameMatch","match","replace","attachGeocoding","callback","attachOptions","$","extend","inputIdParts","split","pop","idPrefix","join","latitudeName","longitudeName","length","config","latitudeId","longitudeId","geocoded","setCoordinates","coordinates","$latitude","after","$longitude","createCoordinateFields","val","on","removeAttr","_ev","data","parseFloat","Array","isArray","FieldDependentInputsComponent","this","controllerField","wrapperSelector","dependentFieldsSelector","dependentInputSelector","enablingCondition","_bindEvent","_run","_createClass","$controllerField","$dependentFields","parents","find","$dependentInputs","show","hide","_this","$meetingAddress","$form","$meetingTypeOfMeeting","$meetingOnlineFields","$meetingInPersonFields","$meetingOnlineAccessLevelFields","toggleDependsOnSelect","$target","$showDiv","type","value","ev","target","embedTypeValue","$meetingRegistrationType","$meetingRegistrationTerms","$meetingRegistrationUrl","$meetingAvailableSlots","$field","window","OPEN","PollComponent","$element","$counter","questionsUrl","pollingInterval","mounted","questions","_fetchQuestions","_stopPolling","html","_storeQuestionState","ajax","url","method","contentType","done","_updateCounter","_setQuestionsState","_pollQuestions","$parent","each","_i","el","$el","questionId","open","_this2","_this3","_setQuestionState","state","addClass","pollTimeout","setTimeout","_this4","clearTimeout","questionsCount","OPEN_CLASS","$container","poll","MeetingsPollComponent","event","preventDefault","isMounted","removeClass","unmountComponent","mountComponent","$adminContainer","adminPoll","OptionAttachedInputsComponent","wrapperField","controllerFieldSelector","controllerSelector","idx","enabled","is","AutosortableCheckboxesComponent","_order","_normalize","max","$positionField","position","parseInt","$next","next","$nextPositionField","insertBefore","lastPosition","parent","$parentLabel","$positionSelector","_findLastPosition","checked","DisplayCondition","conditionQuestion","answerOption","mandatory","onFulfilled","bindEvent","checkCondition","getInputsToListen","bind","$conditionWrapperField","$textInput","multipleInput","text","push","_typeof","Boolean","some","it","checkAnsweredCondition","toString","every","regexp","RegExp","getInputValue","fulfilled","checkNotAnsweredCondition","checkEqualCondition","checkNotEqualCondition","checkMatchCondition","DisplayConditionsComponent","conditions","showCount","initializeConditions","$condition","values","mandatoryConditions","filter","condition","nonMandatoryConditions","mustShow","showQuestion","hideQuestion","fadeIn","fadeOut","MaxChoicesAlertComponent","alertElement","controllerCollectionSelector","maxChoices","rows","alert","rowIdx","row","checkboxIdx","checkbox","unique","safePath","document","exitUrl","currentTarget","href","action","addEventListener","hasChanged","includes","returnValue","require"],"sourceRoot":""}