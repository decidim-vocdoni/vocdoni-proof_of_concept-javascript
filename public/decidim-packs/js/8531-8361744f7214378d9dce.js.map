{"version":3,"file":"js/8531-8361744f7214378d9dce.js","mappings":"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","sources":["webpack://decidim-development-app/../decidim-core/app/packs/src/decidim/configuration.js","webpack://decidim-development-app/../decidim-core/app/packs/src/decidim/confirm.js","webpack://decidim-development-app/../decidim-core/app/packs/src/decidim/direct_uploads/uploader.js","webpack://decidim-development-app/../decidim-core/app/packs/src/decidim/direct_uploads/upload_utility.js","webpack://decidim-development-app/../decidim-core/app/packs/src/decidim/direct_uploads/upload_modal.js","webpack://decidim-development-app/../decidim-core/app/packs/src/decidim/direct_uploads/upload_field.js","webpack://decidim-development-app/../decidim-core/app/packs/src/decidim/editor.js","webpack://decidim-development-app/../decidim-core/app/packs/src/decidim/editor/linebreak_module.js","webpack://decidim-development-app/../decidim-core/app/packs/src/decidim/input_tags.js"],"sourcesContent":["export default class Configuration {\n  constructor() {\n    this.config = {};\n  }\n\n  set(key, value = null) {\n    if (typeof key === \"object\") {\n      this.config = { ...this.config, ...key };\n    } else {\n      this.config[key] = value;\n    }\n  }\n\n  get(key) {\n    return this.config[key];\n  }\n}\n","/**\n * A custom confirm dialog for Decidim based on Foundation reveals.\n *\n * Note that this needs to be loaded before the application JS in order for\n * it to gain control over the confirm events BEFORE rails-ujs is loaded.\n */\n\nimport Rails from \"@rails/ujs\"\n\nlet TEMPLATE_HTML = null;\n\nclass ConfirmDialog {\n  constructor(sourceElement) {\n    this.$modal = $(TEMPLATE_HTML);\n    this.$source = sourceElement;\n    this.$content = $(\".confirm-modal-content\", this.$modal);\n    this.$buttonConfirm = $(\"[data-confirm-ok]\", this.$modal);\n    this.$buttonCancel = $(\"[data-confirm-cancel]\", this.$modal);\n\n    // Avoid duplicate IDs and append the new modal to the body\n    const titleId = `confirm-modal-title-${Math.random().toString(36).substring(7)}`;\n\n    this.$modal.removeAttr(\"id\");\n    $(\"#confirm-modal-title\", this.$modal).attr(\"id\", titleId);\n    this.$modal.attr(\"aria-labelledby\", titleId);\n\n    $(\"body\").append(this.$modal);\n    this.$modal.foundation();\n  }\n\n  confirm(message) {\n    this.$content.html(message);\n\n    this.$buttonConfirm.off(\"click\");\n    this.$buttonCancel.off(\"click\");\n\n    return new Promise((resolve) => {\n      this.$buttonConfirm.on(\"click\", (ev) => {\n        ev.preventDefault();\n\n        this.$modal.foundation(\"close\");\n        resolve(true);\n        this.$source.focus();\n      });\n      this.$buttonCancel.on(\"click\", (ev) => {\n        ev.preventDefault();\n\n        this.$modal.foundation(\"close\");\n        resolve(false);\n        this.$source.focus();\n      });\n\n      this.$modal.foundation(\"open\").on(\"closed.zf.reveal\", () => {\n        this.$modal.remove();\n      });\n    });\n  }\n}\n\n// Override the default confirm dialog by Rails\n// See:\n// https://github.com/rails/rails/blob/fba1064153d8e2f4654df7762a7d3664b93e9fc8/actionview/app/assets/javascripts/rails-ujs/features/confirm.coffee\n//\n// There is apparently a better way coming in Rails 6:\n// https://github.com/rails/rails/commit/e9aa7ecdee0aa7bb4dcfa5046881bde2f1fe21cc#diff-e1aaa45200e9adcbcb8baf1c5375b5d1\n//\n// The old approach is broken according to https://github.com/rails/rails/issues/36686#issuecomment-514213323\n// so for the moment this needs to be executed **before** Rails.start()\nconst allowAction = (ev, element) => {\n  const message = $(element).data(\"confirm\");\n  if (!message) {\n    return true;\n  }\n\n  if (!Rails.fire(element, \"confirm\")) {\n    return false;\n  }\n\n  if (TEMPLATE_HTML === null) {\n    TEMPLATE_HTML = $(\"#confirm-modal\")[0].outerHTML;\n    $(\"#confirm-modal\").remove();\n  }\n\n  const dialog = new ConfirmDialog(\n    $(element)\n  );\n  dialog.confirm(message).then((answer) => {\n    const completed = Rails.fire(element, \"confirm:complete\", [answer]);\n    if (answer && completed) {\n      // Allow the event to propagate normally and re-dispatch it without\n      // the confirm data attribute which the Rails internal method is\n      // checking.\n      $(element).data(\"confirm\", null);\n      $(element).removeAttr(\"data-confirm\");\n\n      // The submit button click events won't do anything if they are\n      // dispatched as is. In these cases, just submit the underlying form.\n      if (ev.type === \"click\" &&\n        (\n          $(element).is('button[type=\"submit\"]') ||\n          $(element).is('input[type=\"submit\"]')\n        )\n      ) {\n        $(element).parents(\"form\").submit();\n      } else {\n        let origEv = ev.originalEvent || ev;\n        let newEv = origEv;\n        if (typeof Event === \"function\") {\n          // Clone the event because otherwise some click events may not\n          // work properly when re-dispatched.\n          newEv = new origEv.constructor(origEv.type, origEv);\n        }\n        ev.target.dispatchEvent(newEv);\n      }\n    }\n  });\n\n  return false;\n};\nconst handleConfirm = (ev, element) => {\n  if (!allowAction(ev, element)) {\n    Rails.stopEverything(ev);\n  }\n};\nconst getMatchingEventTarget = (ev, selector) => {\n  let target = ev.target;\n  while (!(!(target instanceof Element) || Rails.matches(target, selector))) {\n    target = target.parentNode;\n  }\n\n  if (target instanceof Element) {\n    return target;\n  }\n\n  return null;\n};\nconst handleDocumentEvent = (ev, matchSelectors) => {\n  return matchSelectors.some((currentSelector) => {\n    let target = getMatchingEventTarget(ev, currentSelector);\n    if (target === null) {\n      return false;\n    }\n\n    handleConfirm(ev, target);\n    return true;\n  });\n};\n\ndocument.addEventListener(\"click\", (ev) => {\n  return handleDocumentEvent(ev, [\n    Rails.linkClickSelector,\n    Rails.buttonClickSelector,\n    Rails.formInputClickSelector\n  ]);\n});\ndocument.addEventListener(\"change\", (ev) => {\n  return handleDocumentEvent(ev, [Rails.inputChangeSelector]);\n});\ndocument.addEventListener(\"submit\", (ev) => {\n  return handleDocumentEvent(ev, [Rails.formSubmitSelector]);\n});\n\n// This is needed for the confirm dialog to work with Foundation Abide.\n// Abide registers its own submit click listeners since Foundation 5.6.x\n// which will be handled before the document listeners above. This would\n// break the custom confirm functionality when used with Foundation Abide.\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  $(Rails.formInputClickSelector).on(\"click.confirm\", (ev) => {\n    handleConfirm(ev, getMatchingEventTarget(ev, Rails.formInputClickSelector));\n  });\n});\n","import { DirectUpload } from \"@rails/activestorage\";\n\nexport class Uploader {\n  constructor(modal, uploadItem, options) {\n    this.modal = modal;\n    this.uploadItem = uploadItem;\n    this.progressBar = uploadItem.querySelector(\".progress-bar\");\n    this.validationSent = false;\n    this.fileTooBig = false;\n    if (modal.options.maxFileSize && options.file.size > modal.options.maxFileSize) {\n      this.fileTooBig = true;\n      this.showError([modal.locales.file_size_too_large]);\n    } else {\n      this.upload = new DirectUpload(options.file, options.url, this);\n    }\n  }\n\n  showError(errors) {\n    this.progressBar.classList.add(\"filled\");\n    this.progressBar.innerHTML = this.modal.locales.validation_error;\n    this.uploadItem.dataset.state = \"error\";\n    const errorList = this.uploadItem.querySelector(\".upload-errors\");\n    errors.forEach((error) => {\n      const errorItem = document.createElement(\"li\");\n      errorItem.classList.add(\"form-error\", \"is-visible\");\n      errorItem.innerHTML = error;\n      errorList.appendChild(errorItem);\n    })\n  }\n\n  validate(blobId) {\n    const callback = (data) => {\n      let errors = []\n      for (const [, value] of Object.entries(data)) {\n        errors = errors.concat(value);\n      }\n\n      this.progressBar.style.justifyContent = \"center\";\n      if (errors.length === 0) {\n        this.progressBar.innerHTML = this.modal.locales.uploaded;\n        this.uploadItem.dataset.state = \"validated\";\n      } else {\n        this.showError(errors);\n      }\n      this.progressBar.classList.add(\"filled\");\n    }\n\n    if (!this.validationSent) {\n      let property = this.modal.options.addAttribute;\n      if (this.modal.options.titled) {\n        property = \"file\"\n      }\n      const params = new URLSearchParams({\n        resourceClass: this.modal.options.resourceClass,\n        property: property,\n        blob: blobId,\n        formClass: this.modal.options.formObjectClass\n      });\n\n      fetch(`/upload_validations?${params.toString()}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"X-CSRF-Token\": $(\"meta[name=csrf-token]\").attr(\"content\")\n        }\n      }).then((response) => response.json()).then((data) => {\n        callback(data);\n      });\n      this.validationSent = true;\n    }\n  }\n\n  directUploadWillStoreFileWithXHR(request) {\n    request.upload.addEventListener(\"progress\", (event) => {\n      const progress = Math.floor(event.loaded / event.total * 100);\n      let width = \"15%\";\n      if (progress > 15) {\n        width = `${progress}%`;\n      }\n      this.progressBar.style.width = width;\n\n      if (progress === 100) {\n        this.progressBar.innerHTML = this.modal.locales.validating;\n        return;\n      }\n      this.progressBar.innerHTML = `${progress}%`;\n    });\n  }\n}\n","export const checkTitles = (parentElement, saveButton) => {\n  let everyItemHasTitle = true;\n\n  Array.from(parentElement.children).forEach((item) => {\n    const title = item.querySelector(\"input[type='text']\").value;\n    const noTitleErrorSpan = item.querySelector(\".no-title-error\");\n    if (!title || title.length === 0) {\n      everyItemHasTitle = false;\n      saveButton.disabled = true;\n      noTitleErrorSpan.classList.add(\"is-visible\");\n      item.appendChild(noTitleErrorSpan);\n    } else {\n      noTitleErrorSpan.classList.remove(\"is-visible\");\n    }\n  });\n\n  if (everyItemHasTitle) {\n    saveButton.disabled = false;\n  }\n}\n\nexport const truncateFilename = (filename, maxLength = 31) => {\n  if (filename.length <= maxLength) {\n    return filename;\n  }\n\n  const charactersFromBegin = Math.floor(maxLength / 2) - 3;\n  const charactersFromEnd = maxLength - charactersFromBegin - 3;\n  return `${filename.slice(0, charactersFromBegin)}...${filename.slice(-charactersFromEnd)}`;\n}\n\nexport const createHiddenInput = (elClasses, elName, elValue) => {\n  const el = document.createElement(\"input\");\n  el.type = \"hidden\";\n  if (elClasses) {\n    if (typeof (elClasses) === \"string\") {\n      el.className = elClasses;\n    } else {\n      el.className = elClasses.join(\" \")\n    }\n  }\n  if (elName) {\n    el.name = elName;\n  }\n  if (elValue) {\n    el.value = elValue;\n  }\n  return el;\n}\n","import { Uploader } from \"src/decidim/direct_uploads/uploader\";\nimport { truncateFilename, checkTitles, createHiddenInput } from \"src/decidim/direct_uploads/upload_utility\";\n\n// This class handles logic inside upload modal, but since modal is not inside the form\n// logic here moves \"upload items\" / hidden inputs to form.\nexport default class UploadModal {\n  constructor(button, options = {}) {\n    // Button that opens the modal.\n    this.button = button;\n\n    // The provided options contains the options passed from the view in the\n    // `data-upload` attribute as a JSON.\n    let providedOptions = {};\n    try {\n      // The providedOptions can contain the following keys:\n      // - addAttribute - Field name / attribute of resource (e.g. avatar)\n      // - resourceName - The resource to which the attribute belongs (e.g. user)\n      // - resourceClass - Ruby class of the resource (e.g. Decidim::User)\n      // - optional - Defines if file is optional\n      // - multiple - Defines if multiple files can be uploaded\n      // - titled - Defines if file(s) can have titles\n      // - maxFileSize - Defines maximum file size in bytes\n      // - formObjectClass - Class of the current form object (e.g. Decidim::AccountForm)\n      providedOptions = JSON.parse(button.dataset.upload);\n    } catch (_e) {\n      // Don't care about the parse errors, just skip the provided options.\n    }\n\n    this.options = Object.assign(providedOptions, options)\n\n    this.name = this.button.name;\n    this.modal = document.querySelector(`#${button.dataset.open}`);\n    this.saveButton = this.modal.querySelector(`button.add-file-${this.name}`);\n    this.attachmentCounter = 0;\n    this.dropZoneEnabled = true;\n    this.modalTitle = this.modal.querySelector(\".reveal__title\");\n    this.uploadItems = this.modal.querySelector(\".upload-items\");\n    this.locales = JSON.parse(this.uploadItems.dataset.locales);\n    this.dropZone = this.modal.querySelector(\".dropzone\");\n    this.input = this.dropZone.querySelector(\"input\");\n    this.uploadContainer = document.querySelector(`.upload-container-for-${this.name}`);\n    this.activeAttachments = this.uploadContainer.querySelector(\".active-uploads\");\n    this.trashCan = this.createTrashCan();\n  }\n\n  uploadFile(file) {\n    if (!this.dropZoneEnabled) {\n      return;\n    }\n\n    const title = file.name.split(\".\")[0].slice(0, 31);\n    const uploadItem = this.createUploadItem(file.name, title, \"init\");\n    const uploader = new Uploader(this, uploadItem, {\n      file: file,\n      url: this.input.dataset.directUploadUrl,\n      attachmentName: file.name\n    });\n    if (uploader.fileTooBig) {\n      return;\n    }\n\n    uploader.upload.create((error, blob) => {\n      if (error) {\n        uploadItem.dataset.state = \"error\";\n        const progressBar = uploadItem.querySelector(\".progress-bar\");\n        progressBar.classList.add(\"filled\");\n        progressBar.innerHTML = this.locales.error;\n        console.error(error);\n      } else {\n        const ordinalNumber = this.getOrdinalNumber();\n\n        const attachmentDetails = document.createElement(\"div\");\n        attachmentDetails.classList.add(\"attachment-details\");\n        attachmentDetails.dataset.filename = file.name;\n        const titleAndFileNameSpan = document.createElement(\"span\");\n        titleAndFileNameSpan.style.display = \"none\";\n        attachmentDetails.appendChild(titleAndFileNameSpan);\n\n        const hiddenBlobField = createHiddenInput(null, null, blob.signed_id);\n        if (this.options.titled) {\n          hiddenBlobField.name = `${this.options.resourceName}[${this.options.addAttribute}][${ordinalNumber}][file]`;\n        } else {\n          hiddenBlobField.name = `${this.options.resourceName}[${this.options.addAttribute}]`;\n        }\n\n        if (this.options.titled) {\n          const hiddenTitleField = createHiddenInput(\"hidden-title\", `${this.options.resourceName}[${this.options.addAttribute}][${ordinalNumber}][title]`, title);\n          titleAndFileNameSpan.innerHTML = `${title} (${file.name})`;\n          attachmentDetails.appendChild(hiddenTitleField);\n        } else {\n          titleAndFileNameSpan.innerHTML = file.name;\n        }\n\n        if (!this.options.multiple) {\n          this.cleanTrashCan();\n        }\n\n        attachmentDetails.appendChild(hiddenBlobField);\n        uploadItem.appendChild(attachmentDetails);\n        uploader.validate(blob.signed_id);\n      }\n    });\n    this.updateDropZone();\n  }\n\n  getOrdinalNumber() {\n    const nextOrdinalNumber = this.attachmentCounter;\n    this.attachmentCounter += 1;\n    return nextOrdinalNumber;\n  }\n\n  updateDropZone() {\n    if (this.options.multiple) {\n      return;\n    }\n\n    if (this.uploadItems.children.length > 0) {\n      this.dropZone.classList.add(\"disabled\");\n      this.dropZoneEnabled = false;\n      this.input.disabled = true;\n    } else {\n      this.dropZone.classList.remove(\"disabled\");\n      this.dropZoneEnabled = true;\n      this.input.disabled = false;\n    }\n  }\n\n  createUploadItem(fileName, title, state) {\n    const wrapper = document.createElement(\"div\");\n    wrapper.classList.add(\"upload-item\");\n    wrapper.setAttribute(\"data-filename\", fileName);\n\n    const firstRow = document.createElement(\"div\");\n    const secondRow = document.createElement(\"div\");\n    const thirdRow = document.createElement(\"div\");\n    firstRow.classList.add(\"row\", \"upload-item-first-row\");\n    secondRow.classList.add(\"row\", \"upload-item-second-row\");\n    thirdRow.classList.add(\"row\", \"upload-item-third-row\");\n\n    const fileNameSpan = document.createElement(\"span\");\n    let fileNameSpanClasses = [\"columns\", \"file-name-span\"];\n    if (this.options.titled) {\n      fileNameSpanClasses.push(\"small-4\", \"medium-5\");\n    } else {\n      fileNameSpanClasses.push(\"small-12\");\n    }\n    fileNameSpan.classList.add(...fileNameSpanClasses);\n    fileNameSpan.innerHTML = truncateFilename(fileName);\n\n    const progressBar = document.createElement(\"div\");\n    progressBar.classList.add(\"progress-bar\");\n    if (state) {\n      if (state === \"validated\") {\n        progressBar.innerHTML = this.locales.uploaded;\n      } else {\n        progressBar.innerHTML = \"0%\";\n        progressBar.style.width = \"15%\";\n      }\n      wrapper.dataset.state = state;\n    }\n\n    const progressBarBorder = document.createElement(\"div\");\n    progressBarBorder.classList.add(\"progress-bar-border\");\n    progressBarBorder.appendChild(progressBar);\n\n    const progressBarWrapper = document.createElement(\"div\");\n    progressBarWrapper.classList.add(\"columns\", \"progress-bar-wrapper\");\n    progressBarWrapper.appendChild(progressBarBorder);\n    if (this.options.titled) {\n      progressBarWrapper.classList.add(\"small-4\", \"medium-5\");\n    } else {\n      progressBarWrapper.classList.add(\"small-10\");\n    }\n\n    const errorList = document.createElement(\"ul\");\n    errorList.classList.add(\"upload-errors\");\n\n    const removeButton = document.createElement(\"button\");\n    removeButton.classList.add(\"columns\", \"small-3\", \"medium-2\", \"remove-upload-item\");\n    removeButton.innerHTML = `&times; ${this.locales.remove}`;\n    removeButton.addEventListener((\"click\"), (event) => {\n      event.preventDefault();\n      const item = this.uploadItems.querySelector(`[data-filename='${fileName}']`);\n      this.trashCan.append(item);\n      this.updateDropZone();\n    })\n\n    const titleAndFileNameSpan = document.createElement(\"span\");\n    titleAndFileNameSpan.classList.add(\"columns\", \"small-5\", \"title-and-filename-span\");\n    titleAndFileNameSpan.innerHTML = `${title} (${truncateFilename(fileName)})`;\n\n    firstRow.appendChild(fileNameSpan);\n    secondRow.appendChild(progressBarWrapper);\n    thirdRow.appendChild(errorList);\n\n    let titleInputContainer = null;\n    if (this.options.titled) {\n      const titleInput = document.createElement(\"input\");\n      titleInput.classList.add(\"attachment-title\");\n      titleInput.type = \"text\";\n      titleInput.value = title;\n      titleInput.addEventListener(\"input\", (event) => {\n        event.preventDefault();\n        checkTitles(this.uploadItems, this.saveButton);\n      })\n      titleInputContainer = document.createElement(\"div\");\n      titleInputContainer.classList.add(\"columns\", \"small-5\", \"title-input-container\");\n      titleInputContainer.appendChild(titleInput);\n\n      const noTitleErrorSpan = document.createElement(\"span\");\n      noTitleErrorSpan.classList.add(\"form-error\", \"no-title-error\");\n      noTitleErrorSpan.role = \"alert\";\n      noTitleErrorSpan.innerHTML = this.locales.title_required;\n      titleInputContainer.appendChild(noTitleErrorSpan);\n\n      const titleLabelSpan = document.createElement(\"span\");\n      titleLabelSpan.classList.add(\"title-label-span\");\n      titleLabelSpan.innerHTML = this.locales.title;\n\n      const titleContainer = document.createElement(\"div\");\n      titleContainer.classList.add(\"columns\", \"small-8\", \"medium-7\", \"title-container\");\n      titleContainer.appendChild(titleLabelSpan);\n      firstRow.appendChild(titleContainer);\n      secondRow.appendChild(titleInputContainer);\n    }\n\n    secondRow.appendChild(removeButton);\n\n    wrapper.appendChild(firstRow);\n    wrapper.appendChild(secondRow);\n    wrapper.appendChild(thirdRow);\n\n    this.uploadItems.appendChild(wrapper);\n\n    return wrapper;\n  }\n\n  updateAddAttachmentsButton() {\n    if (this.activeAttachments.children.length === 0) {\n      this.button.innerHTML = this.modalTitle.dataset.addlabel;\n    } else {\n      this.button.innerHTML = this.modalTitle.dataset.editlabel;\n    }\n  }\n\n  createTrashCan() {\n    const trashCan =  document.createElement(\"div\");\n    trashCan.classList.add(\"trash-can\");\n    trashCan.style.display = \"none\";\n    this.uploadItems.parentElement.appendChild(trashCan);\n    return trashCan;\n  }\n\n  cleanTrashCan() {\n    Array.from(this.trashCan.children).forEach((item) => {\n      const fileName = item.dataset.filename;\n      const activeAttachment = this.activeAttachments.querySelector(`div[data-filename='${fileName}']`);\n      if (activeAttachment) {\n        activeAttachment.remove();\n      }\n      item.remove();\n    })\n  }\n}\n","import UploadModal from \"src/decidim/direct_uploads/upload_modal\";\nimport { truncateFilename, createHiddenInput } from \"src/decidim/direct_uploads/upload_utility\";\n\nconst loadAttachments = (modal) => {\n  Array.from(modal.activeAttachments.children).forEach((child) => {\n    modal.createUploadItem(child.dataset.filename, child.dataset.title, \"validated\");\n  })\n}\n\nconst addInputEventListener = (modal) => {\n  modal.input.addEventListener(\"change\", (event) => {\n    event.preventDefault();\n    const files = event.target.files;\n    Array.from(files).forEach((file) => modal.uploadFile(file));\n  })\n}\n\nconst addButtonEventListener = (modal) => {\n  modal.button.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    Array.from(modal.trashCan.children).forEach((item) => {\n      modal.uploadItems.append(item);\n    })\n    if (modal.uploadItems.children.length === 0) {\n      modal.modalTitle.innerHTML = modal.modalTitle.dataset.addlabel;\n    } else {\n      modal.modalTitle.innerHTML = modal.modalTitle.dataset.editlabel;\n    }\n    modal.updateDropZone();\n  })\n}\n\nconst addDropZoneEventListeners = (modal) => {\n  modal.dropZone.addEventListener(\"dragenter\", (event) => {\n    event.preventDefault();\n  })\n\n  modal.dropZone.addEventListener(\"dragover\", (event) => {\n    event.preventDefault();\n    modal.dropZone.classList.add(\"is-dragover\");\n  })\n\n  modal.dropZone.addEventListener(\"dragleave\", () => {\n    modal.dropZone.classList.remove(\"is-dragover\");\n  })\n\n  modal.dropZone.addEventListener(\"drop\", (event) => {\n    event.preventDefault();\n    const files = event.dataTransfer.files;\n    Array.from(files).forEach((file) => modal.uploadFile(file));\n  })\n}\n\nconst addSaveButtonEventListener = (modal) => {\n  modal.saveButton.addEventListener(\"click\", (event) => {\n    event.preventDefault();\n    const validatedItems = modal.uploadItems.querySelectorAll(\".upload-item[data-state='validated']\")\n    const validatedItemsCount = validatedItems.length;\n    validatedItems.forEach((item) => {\n      let details = item.querySelector(\".attachment-details\");\n      if (details) {\n        modal.activeAttachments.appendChild(details);\n      } else {\n        details = modal.activeAttachments.querySelector(`.attachment-details[data-filename='${item.dataset.filename}'`);\n      }\n      const span = details.querySelector(\"span\");\n      span.classList.add(\"filename\");\n      if (modal.options.titled) {\n        const title = item.querySelector(\"input[type='text']\").value;\n        details.dataset.title = title;\n        let hiddenTitle = details.querySelector(\".hidden-title\")\n        if (hiddenTitle) {\n          hiddenTitle.value = title;\n        } else {\n          const attachmentId = details.querySelector(`[name='${modal.options.resourceName}[${modal.name}][]'`).value\n          const ordinalNumber = modal.getOrdinalNumber()\n          const hiddenTitleField = createHiddenInput(\"hidden-title\", `${modal.options.resourceName}[${modal.options.addAttribute}][${ordinalNumber}][title]`, title)\n          const hiddenIdField = createHiddenInput(\"hidden-id\", `${modal.options.resourceName}[${modal.options.addAttribute}][${ordinalNumber}][id]`, attachmentId)\n          details.appendChild(hiddenTitleField);\n          details.appendChild(hiddenIdField);\n        }\n        span.innerHTML = `${title} (${truncateFilename(item.dataset.filename)})`;\n      } else {\n        span.innerHTML = truncateFilename(item.dataset.filename, 19);\n      }\n      span.style.display = \"block\";\n    });\n\n    if (!modal.options.titled && modal.trashCan.children.length > 0) {\n      modal.activeAttachments.innerHTML = `<input name='${modal.options.resourceName}[remove_${modal.name}]' type=\"hidden\" value=\"true\">`;\n    }\n\n    if (validatedItemsCount > 0) {\n      // Foundation helper does some magic with error fields, so these must be triggered using jQuery.\n      const $el = $(modal.uploadContainer.querySelector(\"input[type='checkbox']\"));\n      if ($el) {\n        $el.prop(\"checked\", true);\n        $el.trigger(\"change\");\n      }\n    }\n    modal.cleanTrashCan();\n    modal.updateAddAttachmentsButton();\n  });\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const attachmentButtons = document.querySelectorAll(\"button.add-file\");\n\n  attachmentButtons.forEach((attachmentButton) => {\n    const modal = new UploadModal(attachmentButton);\n    loadAttachments(modal);\n    addInputEventListener(modal);\n    addButtonEventListener(modal);\n    addDropZoneEventListeners(modal);\n    addSaveButtonEventListener(modal);\n  })\n})\n","/* eslint-disable require-jsdoc */\n\nimport lineBreakButtonHandler from \"src/decidim/editor/linebreak_module\"\nimport \"src/decidim/editor/clipboard_override\"\nimport \"src/decidim/vendor/image-resize.min\"\nimport \"src/decidim/vendor/image-upload.min\"\n\nconst quillFormats = [\"bold\", \"italic\", \"link\", \"underline\", \"header\", \"list\", \"video\", \"image\", \"alt\", \"break\", \"width\", \"style\", \"code\", \"blockquote\", \"indent\"];\n\nexport default function createQuillEditor(container) {\n  const toolbar = $(container).data(\"toolbar\");\n  const disabled = $(container).data(\"disabled\");\n\n  const allowedEmptyContentSelector = \"iframe\";\n  let quillToolbar = [\n    [\"bold\", \"italic\", \"underline\", \"linebreak\"],\n    [{ list: \"ordered\" }, { list: \"bullet\" }],\n    [\"link\", \"clean\"],\n    [\"code\", \"blockquote\"],\n    [{ \"indent\": \"-1\"}, { \"indent\": \"+1\" }]\n  ];\n\n  let addImage = $(container).data(\"editorImages\");\n\n  if (toolbar === \"full\") {\n    quillToolbar = [\n      [{ header: [2, 3, 4, 5, 6, false] }],\n      ...quillToolbar,\n      [\"video\"]\n    ];\n  } else if (toolbar === \"basic\") {\n    quillToolbar = [\n      ...quillToolbar,\n      [\"video\"]\n    ];\n  }\n\n  if (addImage) {\n    quillToolbar.push([\"image\"]);\n  }\n\n  let modules = {\n    linebreak: {},\n    toolbar: {\n      container: quillToolbar,\n      handlers: {\n        \"linebreak\": lineBreakButtonHandler\n      }\n    }\n  };\n  const $input = $(container).siblings('input[type=\"hidden\"]');\n  container.innerHTML = $input.val() || \"\";\n  const token = $('meta[name=\"csrf-token\"]').attr(\"content\");\n  if (addImage) {\n    modules.imageResize = {\n      modules: [\"Resize\", \"DisplaySize\"]\n    }\n    modules.imageUpload = {\n      url: $(container).data(\"uploadImagesPath\"),\n      method: \"POST\",\n      name: \"image\",\n      withCredentials: false,\n      headers: { \"X-CSRF-Token\": token },\n      callbackOK: (serverResponse, next) => {\n        $(\"div.ql-toolbar\").last().removeClass(\"editor-loading\")\n        next(serverResponse.url);\n      },\n      callbackKO: (serverError) => {\n        $(\"div.ql-toolbar\").last().removeClass(\"editor-loading\")\n        console.log(`Image upload error: ${serverError.message}`);\n      },\n      checkBeforeSend: (file, next) => {\n        $(\"div.ql-toolbar\").last().addClass(\"editor-loading\")\n        next(file);\n      }\n    }\n  }\n  const quill = new Quill(container, {\n    modules: modules,\n    formats: quillFormats,\n    theme: \"snow\"\n  });\n\n  if (disabled) {\n    quill.disable();\n  }\n\n  quill.on(\"text-change\", () => {\n    const text = quill.getText();\n\n    // Triggers CustomEvent with the cursor position\n    // It is required in input_mentions.js\n    let event = new CustomEvent(\"quill-position\", {\n      detail: quill.getSelection()\n    });\n    container.dispatchEvent(event);\n\n    if ((text === \"\\n\" || text === \"\\n\\n\") && quill.root.querySelectorAll(allowedEmptyContentSelector).length === 0) {\n      $input.val(\"\");\n    } else {\n      const emptyParagraph = \"<p><br></p>\";\n      const cleanHTML = quill.root.innerHTML.replace(\n        new RegExp(`^${emptyParagraph}|${emptyParagraph}$`, \"g\"),\n        \"\"\n      );\n      $input.val(cleanHTML);\n    }\n  });\n  // After editor is ready, linebreak_module deletes two extraneous new lines\n  quill.emitter.emit(\"editor-ready\");\n\n  if (addImage) {\n    const text = $(container).data(\"dragAndDropHelpText\");\n    $(container).after(`<p class=\"help-text\" style=\"margin-top:-1.5rem;\">${text}</p>`);\n  }\n\n  // After editor is ready, linebreak_module deletes two extraneous new lines\n  quill.emitter.emit(\"editor-ready\");\n\n  return quill;\n}\n","/* eslint-disable require-jsdoc */\n\nimport addEnterBindings from \"src/decidim/editor/modified_enter\"\nimport backspaceBindingsRangeAny from \"src/decidim/editor/modified_backspace_offset_any\"\nimport backspaceBindings from \"src/decidim/editor/modified_backspace_offset1\"\nimport HistoryOverride from \"src/decidim/editor/history_override\"\n\n// Disable warning messages from overwritting modules\nQuill.debug(\"error\");\n\n// It all started with these snippets of code: https://github.com/quilljs/quill/issues/252\nconst Delta = Quill.import(\"delta\");\nconst Break = Quill.import(\"blots/break\");\nconst Embed = Quill.import(\"blots/embed\");\nconst Scroll = Quill.import(\"blots/scroll\");\nconst Parchment = Quill.import(\"parchment\");\nQuill.register({\"modules/history\": HistoryOverride}, true);\nlet icons = Quill.import(\"ui/icons\");\nicons.linebreak = \"⏎\";\n\nclass SmartBreak extends Break {\n  length() {\n    return 1;\n  }\n\n  value() {\n    return \"\\n\";\n  }\n\n  insertInto(parent, ref) {\n    // Embed.prototype.insertInto.call(this, parent, ref);\n    Reflect.apply(Embed.prototype.insertInto, this, [parent, ref]);\n  }\n}\nQuill.register(SmartBreak);\n\n// Override quill/blots/scroll.js\nclass ScrollOvderride extends Scroll {\n  optimize(mutations = [], context = {}) {\n    if (this.batch === true) {\n      return;\n    }\n\n    this.parchmentOptimize(mutations, context);\n\n    if (mutations.length > 0) {\n      // quill/core/emitter.js, Emitter.events.SCROLL_OPTIMIZE = \"scroll-optimize\"\n      this.emitter.emit(\"scroll-optimize\", mutations, context);\n    }\n  }\n\n  // Override parchment/src/blot/scroll.ts\n  parchmentOptimize(mutations = [], context = {}) {\n    // super.optimize(context);\n    Reflect.apply(Parchment.Container.prototype.optimize, this, [context]);\n\n    // We must modify mutations directly, cannot make copy and then modify\n    // let records = [].slice.call(this.observer.takeRecords());\n    let records = [...this.observer.takeRecords()];\n    // Array.push currently seems to be implemented by a non-tail recursive function\n    // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());\n    while (records.length > 0) {\n      mutations.push(records.pop());\n    }\n    let mark = (blot, markParent) => {\n      if (!blot || blot === this) {\n        return;\n      }\n      if (!blot.domNode.parentNode) {\n        return;\n      }\n      if (blot.domNode.__blot && blot.domNode.__blot.mutations === null) {\n        blot.domNode.__blot.mutations = [];\n      }\n      if (markParent) {\n        mark(blot.parent);\n      }\n    };\n    let optimize = (blot) => {\n      // Post-order traversal\n      if (!blot.domNode.__blot) {\n        return;\n      }\n\n      if (blot instanceof Parchment.Container) {\n        blot.children.forEach(optimize);\n      }\n      blot.optimize(context);\n    };\n    let remaining = mutations;\n    for (let ind = 0; remaining.length > 0; ind += 1) {\n      // MAX_OPTIMIZE_ITERATIONS = 100\n      if (ind >= 100) {\n        throw new Error(\"[Parchment] Maximum optimize iterations reached\");\n      }\n      remaining.forEach((mutation) => {\n        let blot = Parchment.find(mutation.target, true);\n        if (!blot) {\n          return;\n        }\n        if (blot.domNode === mutation.target) {\n          if (mutation.type === \"childList\") {\n            mark(Parchment.find(mutation.previousSibling, false));\n\n            mutation.addedNodes.forEach((node) => {\n              let child = Parchment.find(node, false);\n              mark(child, false);\n              if (child instanceof Parchment.Container) {\n                child.children.forEach(function(grandChild) {\n                  mark(grandChild, false);\n                });\n              }\n            });\n          } else if (mutation.type === \"attributes\") {\n            mark(blot.prev);\n          }\n        }\n        mark(blot);\n      });\n      this.children.forEach(optimize);\n      remaining = [...this.observer.takeRecords()];\n      records = remaining.slice();\n      while (records.length > 0) {\n        mutations.push(records.pop());\n      }\n    }\n  }\n};\nQuill.register(\"blots/scroll\", ScrollOvderride, true);\nParchment.register(ScrollOvderride);\n\nexport default function lineBreakButtonHandler(quill) {\n  let range = quill.selection.getRange()[0];\n  let currentLeaf = quill.getLeaf(range.index)[0];\n  let nextLeaf = quill.getLeaf(range.index + 1)[0];\n  const previousChar = quill.getText(range.index - 1, 1);\n\n  // Insert a second break if:\n  // At the end of the editor, OR next leaf has a different parent (<p>)\n  if (nextLeaf === null || (currentLeaf.parent !== nextLeaf.parent)) {\n    quill.insertEmbed(range.index, \"break\", true, \"user\");\n    quill.insertEmbed(range.index, \"break\", true, \"user\");\n  } else if (previousChar === \"\\n\") {\n    const delta = new Delta().retain(range.index).insert(\"\\n\");\n    quill.updateContents(delta, Quill.sources.USER);\n  } else {\n    quill.insertEmbed(range.index, \"break\", true, \"user\");\n  }\n\n  // Now that we've inserted a line break, move the cursor forward\n  quill.setSelection(range.index + 1, Quill.sources.SILENT);\n}\n\nQuill.register(\"modules/linebreak\", (quill) => {\n  quill.getModule(\"toolbar\").addHandler(\"linebreak\", () => {\n    lineBreakButtonHandler(quill);\n  });\n\n  quill.emitter.on(\"editor-ready\", () => {\n    const length = quill.getLength();\n    const text = quill.getText(length - 2, 2);\n\n    // Remove extraneous new lines\n    if (text === \"\\n\\n\") {\n      quill.deleteText(quill.getLength() - 2, 2);\n    }\n  });\n\n  addEnterBindings(quill);\n  backspaceBindingsRangeAny(quill);\n  backspaceBindings(quill);\n\n  return;\n});\n\n","import \"bootstrap-tagsinput\"\n\n$(() => {\n  const $tagContainer = $(\".js-tags-container\");\n\n  // Initialize\n  $tagContainer.tagsinput({\n    tagClass: \"input__tag\",\n    trimValue: true\n  });\n\n});\n"],"names":["Configuration","this","config","_createClass","key","value","_typeof","TEMPLATE_HTML","ConfirmDialog","sourceElement","$modal","$","$source","$content","$buttonConfirm","$buttonCancel","titleId","Math","random","toString","substring","removeAttr","attr","append","foundation","message","html","off","Promise","resolve","_this","on","ev","preventDefault","focus","remove","handleConfirm","element","data","Rails","outerHTML","confirm","then","answer","completed","type","is","parents","submit","origEv","originalEvent","newEv","Event","constructor","target","dispatchEvent","allowAction","getMatchingEventTarget","selector","Element","parentNode","handleDocumentEvent","matchSelectors","some","currentSelector","document","addEventListener","Uploader","modal","uploadItem","options","progressBar","querySelector","validationSent","fileTooBig","maxFileSize","file","size","showError","locales","file_size_too_large","upload","DirectUpload","url","errors","classList","add","innerHTML","validation_error","dataset","state","errorList","forEach","error","errorItem","createElement","appendChild","blobId","property","addAttribute","titled","params","URLSearchParams","resourceClass","blob","formClass","formObjectClass","fetch","method","headers","response","json","Object","entries","concat","style","justifyContent","length","uploaded","callback","request","event","progress","floor","loaded","total","width","_this2","validating","truncateFilename","filename","maxLength","charactersFromBegin","charactersFromEnd","slice","createHiddenInput","elClasses","elName","elValue","el","className","join","name","UploadModal","button","providedOptions","JSON","parse","_e","assign","open","saveButton","attachmentCounter","dropZoneEnabled","modalTitle","uploadItems","dropZone","input","uploadContainer","activeAttachments","trashCan","createTrashCan","title","split","createUploadItem","uploader","directUploadUrl","attachmentName","create","console","ordinalNumber","getOrdinalNumber","attachmentDetails","titleAndFileNameSpan","display","hiddenBlobField","signed_id","resourceName","hiddenTitleField","multiple","cleanTrashCan","validate","updateDropZone","nextOrdinalNumber","children","disabled","fileName","wrapper","setAttribute","firstRow","secondRow","thirdRow","fileNameSpan","fileNameSpanClasses","push","progressBarBorder","progressBarWrapper","removeButton","item","titleInputContainer","titleInput","parentElement","everyItemHasTitle","Array","from","noTitleErrorSpan","role","title_required","titleLabelSpan","titleContainer","addlabel","editlabel","activeAttachment","_this3","querySelectorAll","attachmentButton","child","loadAttachments","files","uploadFile","addInputEventListener","addButtonEventListener","dataTransfer","addDropZoneEventListeners","validatedItems","validatedItemsCount","details","span","hiddenTitle","attachmentId","hiddenIdField","$el","prop","trigger","updateAddAttachmentsButton","addSaveButtonEventListener","quillFormats","createQuillEditor","container","toolbar","quillToolbar","list","addImage","header","modules","linebreak","handlers","lineBreakButtonHandler","$input","siblings","val","token","imageResize","imageUpload","withCredentials","callbackOK","serverResponse","next","last","removeClass","callbackKO","serverError","log","checkBeforeSend","addClass","quill","Quill","formats","theme","disable","text","getText","CustomEvent","detail","getSelection","root","emptyParagraph","cleanHTML","replace","RegExp","emitter","emit","after","debug","Delta","Break","Embed","Scroll","Parchment","register","HistoryOverride","SmartBreak","parent","ref","Reflect","apply","prototype","insertInto","ScrollOvderride","mutations","context","batch","parchmentOptimize","Container","optimize","records","observer","takeRecords","pop","mark","blot","markParent","domNode","__blot","remaining","ind","Error","mutation","find","previousSibling","addedNodes","node","grandChild","prev","range","selection","getRange","currentLeaf","getLeaf","index","nextLeaf","previousChar","insertEmbed","delta","retain","insert","updateContents","sources","USER","setSelection","SILENT","getModule","addHandler","getLength","deleteText","addEnterBindings","backspaceBindingsRangeAny","backspaceBindings","tagsinput","tagClass","trimValue"],"sourceRoot":""}