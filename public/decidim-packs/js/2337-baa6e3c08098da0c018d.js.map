{"version":3,"file":"js/2337-baa6e3c08098da0c018d.js","mappings":"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","sources":["webpack://decidim-development-app/./node_modules/@decidim/decidim-bulletin_board/src/client/graphql-client.js","webpack://decidim-development-app/./node_modules/@decidim/decidim-bulletin_board/src/client/message-identifier.js","webpack://decidim-development-app/./node_modules/@decidim/decidim-bulletin_board/src/client/message-parser.js","webpack://decidim-development-app/./node_modules/@decidim/decidim-bulletin_board/src/election/election.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/util/isFunction.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/config.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/util/hostReportError.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/Observer.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/util/isArray.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/Subscription.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/util/isObject.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/Subscriber.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/symbol/observable.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/util/identity.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/util/pipe.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/Observable.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/util/toSubscriber.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/util/canReportError.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/SubjectSubscription.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/Subject.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/util/noop.js","webpack://decidim-development-app/./node_modules/rxjs/_esm5/internal/operators/tap.js","webpack://decidim-development-app/./node_modules/@decidim/decidim-bulletin_board/src/trustee/event_manager.js","webpack://decidim-development-app/./node_modules/@decidim/decidim-bulletin_board/src/trustee/identification_keys.js","webpack://decidim-development-app/./node_modules/@decidim/decidim-bulletin_board/src/trustee/trustee.component.js","webpack://decidim-development-app/./node_modules/@decidim/decidim-bulletin_board/src/trustee/trustee.js","webpack://decidim-development-app/./node_modules/@decidim/voting_schemes-dummy/src/trustee_wrapper.js","webpack://decidim-development-app/./node_modules/@decidim/voting_schemes-dummy/src/trustee_wrapper_adapter.js","webpack://decidim-development-app/./node_modules/@decidim/voting_schemes-electionguard/src/wrapper_adapter.js","webpack://decidim-development-app/./node_modules/@decidim/voting_schemes-electionguard/src/trustee_wrapper_adapter.js"],"sourcesContent":["import { ApolloClient, InMemoryCache, HttpLink } from \"@apollo/client/core\";\n\nimport GET_ELECTION_LOG_ENTRIES from \"./operations/get_election_log_entries\";\nimport PROCESS_KEY_CEREMONY_STEP from \"./operations/process_key_ceremony_step\";\nimport PROCESS_TALLY_STEP from \"./operations/process_tally_step\";\nimport GET_LOG_ENTRY from \"./operations/get_log_entry\";\nimport GET_PENDING_MESSAGE_BY_MESSAGE_ID from \"./operations/get_pending_message_by_message_id\";\n\n/**\n * This is the Bulletin Board API client that will use Apollo's client to\n * interact with our GraphQL schema using both http and websocket connections.\n */\nexport class GraphQLClient {\n  /**\n   * Initializes the class given the correct params. Since we need to handle\n   * both http and websocket connections we need to create two links and use either\n   * of them depending on the GraphQL operation.\n   *\n   * @constructor\n   * @param {Object} params - An object that include the following options.\n   *  - {String} apiEndpointUrl - The http endpoint used to perform queries and mutations.\n   *  - {Object?} headers - An optional object of headers to be included on http requests.\n   */\n  constructor({ apiEndpointUrl, headers }) {\n    const httpLink = new HttpLink({\n      uri: apiEndpointUrl,\n      headers,\n    });\n\n    this.apolloClient = new ApolloClient({\n      link: httpLink,\n      cache: new InMemoryCache(),\n    });\n  }\n\n  /**\n   * Query a log entry for the given election unique id and the given content hash.\n   *\n   * @param {Object} params - An object that includes the following options.\n   *  - {String} electionUniqueId - The election's unique id.\n   *  - {String} contentHash - The log entry content hash.\n   * @returns {Promise<Array<Object>>} - A log entry.\n   * @throws Will throw an error if the request is rejected.\n   */\n  async getLogEntry({ electionUniqueId, contentHash }) {\n    const result = await this.apolloClient.query({\n      query: GET_LOG_ENTRY,\n      variables: {\n        electionUniqueId,\n        contentHash,\n      },\n    });\n    return result.data.logEntry;\n  }\n\n  /**\n   * Query all log entries for the given election unique id.\n   *\n   * @param {Object} params - An object that include the following options.\n   *  - {String} electionUniqueId - The election's unique id.\n   *  - {String} after - The last log entry id received, to avoid including those entries again.\n   *  - {Array<String>} types - The list of type of messages to retrieve.\n   * @returns {Promise<Array<Object>>} - A collection of log entries.\n   * @throws Will throw an error if the request is rejected.\n   */\n  async getElectionLogEntries({ electionUniqueId, after, types }) {\n    const result = await this.apolloClient.query({\n      query: GET_ELECTION_LOG_ENTRIES,\n      variables: {\n        electionUniqueId,\n        after,\n        types,\n      },\n      fetchPolicy: \"no-cache\",\n    });\n\n    return result.data.election.logEntries;\n  }\n\n  /**\n   * Process a key ceremony step sending a signed message.\n   *\n   * @param {Object} params - An object that include the following options.\n   *  - {String} messageId - The message id.\n   *  - {String} signedData - The signed data to be processed.\n   * @returns {Promise<Object>} - A pending message created.\n   * @throws Will throw an error if the request is rejected or the data contains an error.\n   */\n  async processKeyCeremonyStep({ messageId, signedData }) {\n    const result = await this.apolloClient.mutate({\n      mutation: PROCESS_KEY_CEREMONY_STEP,\n      variables: {\n        messageId,\n        signedData,\n      },\n    });\n\n    if (result.data.processKeyCeremonyStep.error) {\n      throw new Error(result.data.processKeyCeremonyStep.error);\n    }\n\n    return result.data.processKeyCeremonyStep.pendingMessage;\n  }\n\n  /**\n   * Query PendingMessages for a given messageId\n   *\n   * @param {Object} params - An object that include the following options.\n   *  - {String} messageId - The messageId\n   * @returns {Promise<Object>} - The pending message received.\n   * @throws Will throw an error if the request is rejected.\n   */\n  async getPendingMessageByMessageId({ messageId }) {\n    const result = await this.apolloClient.query({\n      query: GET_PENDING_MESSAGE_BY_MESSAGE_ID,\n      variables: {\n        messageId,\n      },\n    });\n\n    return result.data.pendingMessage;\n  }\n\n  /**\n   * Process a tally step sending a signed message.\n   *\n   * @param {Object} params - An object that include the following options.\n   *  - {String} messageId - The message id.\n   *  - {String} signedData - The signed data to be processed.\n   * @returns {Promise<Object>} - A pending message created.\n   * @throws Will throw an error if the request is rejected or the data contains an error.\n   */\n  async processTallyStep({ messageId, signedData }) {\n    const result = await this.apolloClient.mutate({\n      mutation: PROCESS_TALLY_STEP,\n      variables: {\n        messageId,\n        signedData,\n      },\n    });\n\n    if (result.data.processTallyStep.error) {\n      throw new Error(result.data.processTallyStep.error);\n    }\n\n    return result.data.processTallyStep.pendingMessage;\n  }\n}\n","export const AUTHORITY_TYPE = \"a\";\nexport const BULLETIN_BOARD_TYPE = \"b\";\nexport const VOTER_TYPE = \"v\";\nexport const TRUSTEE_TYPE = \"t\";\nexport const VALID_TYPES = [\n  AUTHORITY_TYPE,\n  BULLETIN_BOARD_TYPE,\n  VOTER_TYPE,\n  TRUSTEE_TYPE,\n];\n\n/**\n * This is a class that handles message id strings.\n */\nexport class MessageIdentifier {\n  /**\n   * Parses a message id string into a JS object.\n   *\n   * @param {String} messageId - A string with a message id.\n   * @returns {Object} - An object with the message id values.\n   */\n  static parse(messageId) {\n    const [elements, author] = messageId.split(\"+\");\n    const [authority, electionId, type, subtype] = elements.split(\".\", 4);\n    const [authorType, authorId] = author.split(\".\", 2);\n    const dotSubtype = subtype ? `.${subtype}` : \"\";\n\n    if (!VALID_TYPES.includes(authorType)) {\n      throw new Error(\"Invalid message identifier format\");\n    }\n\n    return {\n      electionId: `${authority}.${electionId}`,\n      type,\n      subtype,\n      typeSubtype: `${type}${dotSubtype}`,\n      author: {\n        type: authorType,\n        id: authorId,\n      },\n    };\n  }\n\n  static format(electionId, typeSubtype, authorType, authorId) {\n    return `${electionId}.${typeSubtype}+${authorType}.${authorId}`;\n  }\n}\n","import { JWS, JWK } from \"node-jose\";\nimport {\n  MessageIdentifier,\n  AUTHORITY_TYPE,\n  BULLETIN_BOARD_TYPE,\n  TRUSTEE_TYPE,\n} from \"./message-identifier\";\nimport { samePublicKeys } from \"../utils\";\n\n/**\n * Verify and parses JWT tokens.\n */\nexport class MessageParser {\n  /**\n   * Initializes the class with the given params.\n   *\n   * @constructor\n   * @param {Object} params - An object that contains the initialization params.\n   * - {String} authorityPublicKeyJSON - The public key of the authority\n   */\n  constructor({ authorityPublicKeyJSON }) {\n    this.authorityPublicKeyJSON = authorityPublicKeyJSON;\n    this.authorityPublicKey = JWK.asKey(authorityPublicKeyJSON, \"json\");\n    this.keys = null;\n  }\n\n  /**\n   * Parses the given token only if it can be verified.\n   *\n   * @param {String} token - A JWT token.\n   * @returns {Promise<Object>} - The payload included in the token.\n   * @throws An error is thrown if the payload is not a valid JSON or the token\n   *         cannot be verified.\n   */\n  async parse({ messageId, signedData }) {\n    const messageIdentifier = MessageIdentifier.parse(messageId);\n    const senderKey = await (this.keys\n      ? this.keys[messageIdentifier.author.type][messageIdentifier.author.id]\n      : this.authorityPublicKey);\n\n    if (!signedData) {\n      return { messageIdentifier, decodedData: null };\n    }\n\n    const result = await JWS.createVerify(senderKey).verify(signedData, {\n      algorithms: [\"RS256\"],\n    });\n\n    const decodedData = JSON.parse(\n      new TextDecoder(\"utf-8\").decode(result.payload)\n    );\n\n    if (!this.keys) {\n      this.keys = await this.parseCreateElection(decodedData);\n    }\n\n    return { messageIdentifier, decodedData };\n  }\n\n  /* eslint-disable camelcase */\n  async parseCreateElection({ authority, bulletin_board, trustees }) {\n    if (!samePublicKeys(authority.public_key, this.authorityPublicKeyJSON)) {\n      throw new Error(\n        \"The authority public key doesn't match the election's authority public key.\"\n      );\n    }\n\n    const result = {\n      [AUTHORITY_TYPE]: { [authority.slug]: this.authorityPublicKey },\n      [BULLETIN_BOARD_TYPE]: {},\n      [TRUSTEE_TYPE]: {},\n    };\n\n    const promises = [];\n    promises.push(\n      this.loadKey(bulletin_board).then((key) => {\n        result[BULLETIN_BOARD_TYPE][bulletin_board.slug] = key;\n      })\n    );\n    for (const trustee of trustees) {\n      promises.push(\n        this.loadKey(trustee).then((key) => {\n          result[TRUSTEE_TYPE][trustee.slug] = key;\n        })\n      );\n    }\n\n    await Promise.all(promises);\n\n    return result;\n  }\n  /* eslint-enable camelcase */\n\n  loadKey(client) {\n    return JWK.asKey(client.public_key, \"json\");\n  }\n}\n","import { MessageIdentifier, TRUSTEE_TYPE } from \"../client/message-identifier\";\n\nexport const WAIT_TIME_MS = 2_000; // 2s\n\n/**\n * Handles the election state and includes some methods to interact with the election log.\n */\nexport class Election {\n  /**\n   * Initializes the class with the given params.\n   *\n   * @constructor\n   * @param {Object} params - An object that contains the initialization params.\n   *  - {String} uniqueId - The unique identifier of an election.\n   *  - {Client} bulletinBoardClient - An instance of the Bulletin Board Client\n   *  - {Array<String>} typesFilter - The list of type of messages to retrieve.\n   *  - {Object?} options - An optional object with some extra options.\n   */\n  constructor({ uniqueId, bulletinBoardClient, typesFilter, options }) {\n    this.uniqueId = uniqueId;\n    this.bulletinBoardClient = bulletinBoardClient;\n    this.logEntries = [];\n    this.typesFilter = typesFilter;\n    this.subscriptionId = null;\n    this.options = options || { waitUntilNextCheck: WAIT_TIME_MS };\n  }\n\n  /**\n   * Store the election log entries and periodically check if there are new entries.\n   *\n   * @returns {Promise<undefined>}\n   */\n  async subscribeToLogEntriesChanges() {\n    this.unsubscribeToLogEntriesChanges();\n\n    // Ensure that we get the current log entries before starting the subscription.\n    await this.getLogEntries();\n\n    this.subscriptionId = setInterval(() => {\n      this.getLogEntries();\n    }, this.options.waitUntilNextCheck);\n  }\n\n  /**\n   * Clear the periodically checks of new log entries.\n   *\n   * @returns {undefined}\n   */\n  unsubscribeToLogEntriesChanges() {\n    if (this.subscriptionId !== null) {\n      clearInterval(this.subscriptionId);\n      this.subscriptionId = null;\n    }\n  }\n\n  /**\n   * Return the last message stored in the log sent by the given trustee.\n   *\n   * @param {String} trusteeId - The unique identifier of a trustee.\n   * @returns {Object|null}\n   */\n  getLastMessageFromTrustee(trusteeId) {\n    for (let i = this.logEntries.length - 1; i >= 0; i--) {\n      const logEntry = this.logEntries[i];\n      const messageIdentifier = MessageIdentifier.parse(logEntry.messageId);\n      if (\n        messageIdentifier.author.type === TRUSTEE_TYPE &&\n        messageIdentifier.author.id === trusteeId\n      ) {\n        return logEntry;\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Uses the bulletin board client to get all the election log entries after the\n   * last log entry stored in the election's state.\n   *\n   * @private\n   * @returns {Promise<nothing>}\n   */\n  getLogEntries() {\n    const lastLogEntry = this.logEntries[this.logEntries.length - 1];\n    const after = (lastLogEntry && lastLogEntry.id) || null;\n\n    return new Promise((resolve) => {\n      this.bulletinBoardClient\n        .getElectionLogEntries({\n          electionUniqueId: this.uniqueId,\n          after,\n          types: this.typesFilter,\n        })\n        .then((logEntries) => {\n          if (logEntries.length) {\n            this.logEntries = [...this.logEntries, ...logEntries];\n          }\n          resolve();\n        });\n    });\n  }\n}\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isFunction(x) {\n    return typeof x === 'function';\n}\n//# sourceMappingURL=isFunction.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar _enable_super_gross_mode_that_will_cause_bad_things = false;\nexport var config = {\n    Promise: undefined,\n    set useDeprecatedSynchronousErrorHandling(value) {\n        if (value) {\n            var error = /*@__PURE__*/ new Error();\n            /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n        }\n        else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n            /*@__PURE__*/ console.log('RxJS: Back to a better error behavior. Thank you. <3');\n        }\n        _enable_super_gross_mode_that_will_cause_bad_things = value;\n    },\n    get useDeprecatedSynchronousErrorHandling() {\n        return _enable_super_gross_mode_that_will_cause_bad_things;\n    },\n};\n//# sourceMappingURL=config.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function hostReportError(err) {\n    setTimeout(function () { throw err; }, 0);\n}\n//# sourceMappingURL=hostReportError.js.map\n","/** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nexport var empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) {\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            throw err;\n        }\n        else {\n            hostReportError(err);\n        }\n    },\n    complete: function () { }\n};\n//# sourceMappingURL=Observer.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var isArray = /*@__PURE__*/ (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();\n//# sourceMappingURL=isArray.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar UnsubscriptionErrorImpl = /*@__PURE__*/ (function () {\n    function UnsubscriptionErrorImpl(errors) {\n        Error.call(this);\n        this.message = errors ?\n            errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ') : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n        return this;\n    }\n    UnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\n    return UnsubscriptionErrorImpl;\n})();\nexport var UnsubscriptionError = UnsubscriptionErrorImpl;\n//# sourceMappingURL=UnsubscriptionError.js.map\n","/** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */\nimport { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nvar Subscription = /*@__PURE__*/ (function () {\n    function Subscription(unsubscribe) {\n        this.closed = false;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._ctorUnsubscribe = true;\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parentOrParents = _a._parentOrParents, _ctorUnsubscribe = _a._ctorUnsubscribe, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parentOrParents = null;\n        this._subscriptions = null;\n        if (_parentOrParents instanceof Subscription) {\n            _parentOrParents.remove(this);\n        }\n        else if (_parentOrParents !== null) {\n            for (var index = 0; index < _parentOrParents.length; ++index) {\n                var parent_1 = _parentOrParents[index];\n                parent_1.remove(this);\n            }\n        }\n        if (isFunction(_unsubscribe)) {\n            if (_ctorUnsubscribe) {\n                this._unsubscribe = undefined;\n            }\n            try {\n                _unsubscribe.call(this);\n            }\n            catch (e) {\n                errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n            }\n        }\n        if (isArray(_subscriptions)) {\n            var index = -1;\n            var len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject(sub)) {\n                    try {\n                        sub.unsubscribe();\n                    }\n                    catch (e) {\n                        errors = errors || [];\n                        if (e instanceof UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n                        }\n                        else {\n                            errors.push(e);\n                        }\n                    }\n                }\n            }\n        }\n        if (errors) {\n            throw new UnsubscriptionError(errors);\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var subscription = teardown;\n        if (!teardown) {\n            return Subscription.EMPTY;\n        }\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (!(subscription instanceof Subscription)) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default: {\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n            }\n        }\n        var _parentOrParents = subscription._parentOrParents;\n        if (_parentOrParents === null) {\n            subscription._parentOrParents = this;\n        }\n        else if (_parentOrParents instanceof Subscription) {\n            if (_parentOrParents === this) {\n                return subscription;\n            }\n            subscription._parentOrParents = [_parentOrParents, this];\n        }\n        else if (_parentOrParents.indexOf(this) === -1) {\n            _parentOrParents.push(this);\n        }\n        else {\n            return subscription;\n        }\n        var subscriptions = this._subscriptions;\n        if (subscriptions === null) {\n            this._subscriptions = [subscription];\n        }\n        else {\n            subscriptions.push(subscription);\n        }\n        return subscription;\n    };\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nexport { Subscription };\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);\n}\n//# sourceMappingURL=Subscription.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function isObject(x) {\n    return x !== null && typeof x === 'object';\n}\n//# sourceMappingURL=isObject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var rxSubscriber = /*@__PURE__*/ (function () {\n    return typeof Symbol === 'function'\n        ? /*@__PURE__*/ Symbol('rxSubscriber')\n        : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();\n})();\nexport var $$rxSubscriber = rxSubscriber;\n//# sourceMappingURL=rxSubscriber.js.map\n","/** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\nvar Subscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subscriber, _super);\n    function Subscriber(destinationOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this.syncErrorValue = null;\n        _this.syncErrorThrown = false;\n        _this.syncErrorThrowable = false;\n        _this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                _this.destination = emptyObserver;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    _this.destination = emptyObserver;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n                        _this.destination = destinationOrNext;\n                        destinationOrNext.add(_this);\n                    }\n                    else {\n                        _this.syncErrorThrowable = true;\n                        _this.destination = new SafeSubscriber(_this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                _this.syncErrorThrowable = true;\n                _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);\n                break;\n        }\n        return _this;\n    }\n    Subscriber.prototype[rxSubscriberSymbol] = function () { return this; };\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _parentOrParents = this._parentOrParents;\n        this._parentOrParents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parentOrParents = _parentOrParents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar SafeSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        _this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = _this;\n        if (isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== emptyObserver) {\n                context = Object.create(observerOrNext);\n                if (isFunction(context.unsubscribe)) {\n                    _this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = _this.unsubscribe.bind(_this);\n            }\n        }\n        _this._context = context;\n        _this._next = next;\n        _this._error = error;\n        _this._complete = complete;\n        return _this;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;\n            if (this._error) {\n                if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                if (useDeprecatedSynchronousErrorHandling) {\n                    throw err;\n                }\n                hostReportError(err);\n            }\n            else {\n                if (useDeprecatedSynchronousErrorHandling) {\n                    _parentSubscriber.syncErrorValue = err;\n                    _parentSubscriber.syncErrorThrown = true;\n                }\n                else {\n                    hostReportError(err);\n                }\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                throw err;\n            }\n            else {\n                hostReportError(err);\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        if (!config.useDeprecatedSynchronousErrorHandling) {\n            throw new Error('bad call');\n        }\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                parent.syncErrorValue = err;\n                parent.syncErrorThrown = true;\n                return true;\n            }\n            else {\n                hostReportError(err);\n                return true;\n            }\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\n//# sourceMappingURL=Subscriber.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport var observable = /*@__PURE__*/ (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();\n//# sourceMappingURL=observable.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map\n","/** PURE_IMPORTS_START _identity PURE_IMPORTS_END */\nimport { identity } from './identity';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map\n","/** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nvar Observable = /*@__PURE__*/ (function () {\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            sink.add(operator.call(sink, this.source));\n        }\n        else {\n            sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n                this._subscribe(sink) :\n                this._trySubscribe(sink));\n        }\n        if (config.useDeprecatedSynchronousErrorHandling) {\n            if (sink.syncErrorThrowable) {\n                sink.syncErrorThrowable = false;\n                if (sink.syncErrorThrown) {\n                    throw sink.syncErrorValue;\n                }\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            if (config.useDeprecatedSynchronousErrorHandling) {\n                sink.syncErrorThrown = true;\n                sink.syncErrorValue = err;\n            }\n            if (canReportError(sink)) {\n                sink.error(err);\n            }\n            else {\n                console.warn(err);\n            }\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                try {\n                    next(value);\n                }\n                catch (err) {\n                    reject(err);\n                    if (subscription) {\n                        subscription.unsubscribe();\n                    }\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        return source && source.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    if (!promiseCtor) {\n        promiseCtor = config.Promise || Promise;\n    }\n    if (!promiseCtor) {\n        throw new Error('no Promise impl found');\n    }\n    return promiseCtor;\n}\n//# sourceMappingURL=Observable.js.map\n","/** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nexport function toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriberSymbol]) {\n            return nextOrObserver[rxSubscriberSymbol]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber(emptyObserver);\n    }\n    return new Subscriber(nextOrObserver, error, complete);\n}\n//# sourceMappingURL=toSubscriber.js.map\n","/** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */\nimport { Subscriber } from '../Subscriber';\nexport function canReportError(observer) {\n    while (observer) {\n        var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;\n        if (closed_1 || isStopped) {\n            return false;\n        }\n        else if (destination && destination instanceof Subscriber) {\n            observer = destination;\n        }\n        else {\n            observer = null;\n        }\n    }\n    return true;\n}\n//# sourceMappingURL=canReportError.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nvar ObjectUnsubscribedErrorImpl = /*@__PURE__*/ (function () {\n    function ObjectUnsubscribedErrorImpl() {\n        Error.call(this);\n        this.message = 'object unsubscribed';\n        this.name = 'ObjectUnsubscribedError';\n        return this;\n    }\n    ObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);\n    return ObjectUnsubscribedErrorImpl;\n})();\nexport var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;\n//# sourceMappingURL=ObjectUnsubscribedError.js.map\n","/** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscription } from './Subscription';\nvar SubjectSubscription = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        var _this = _super.call(this) || this;\n        _this.subject = subject;\n        _this.subscriber = subscriber;\n        _this.closed = false;\n        return _this;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription));\nexport { SubjectSubscription };\n//# sourceMappingURL=SubjectSubscription.js.map\n","/** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nvar SubjectSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        var _this = _super.call(this, destination) || this;\n        _this.destination = destination;\n        return _this;\n    }\n    return SubjectSubscriber;\n}(Subscriber));\nexport { SubjectSubscriber };\nvar Subject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.observers = [];\n        _this.closed = false;\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype[rxSubscriberSymbol] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\nvar AnonymousSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map\n","/** PURE_IMPORTS_START  PURE_IMPORTS_END */\nexport function noop() { }\n//# sourceMappingURL=noop.js.map\n","/** PURE_IMPORTS_START tslib,_Subscriber,_util_noop,_util_isFunction PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\nexport function tap(nextOrObserver, error, complete) {\n    return function tapOperatorFunction(source) {\n        return source.lift(new DoOperator(nextOrObserver, error, complete));\n    };\n}\nvar DoOperator = /*@__PURE__*/ (function () {\n    function DoOperator(nextOrObserver, error, complete) {\n        this.nextOrObserver = nextOrObserver;\n        this.error = error;\n        this.complete = complete;\n    }\n    DoOperator.prototype.call = function (subscriber, source) {\n        return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n    };\n    return DoOperator;\n}());\nvar TapSubscriber = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(TapSubscriber, _super);\n    function TapSubscriber(destination, observerOrNext, error, complete) {\n        var _this = _super.call(this, destination) || this;\n        _this._tapNext = noop;\n        _this._tapError = noop;\n        _this._tapComplete = noop;\n        _this._tapError = error || noop;\n        _this._tapComplete = complete || noop;\n        if (isFunction(observerOrNext)) {\n            _this._context = _this;\n            _this._tapNext = observerOrNext;\n        }\n        else if (observerOrNext) {\n            _this._context = observerOrNext;\n            _this._tapNext = observerOrNext.next || noop;\n            _this._tapError = observerOrNext.error || noop;\n            _this._tapComplete = observerOrNext.complete || noop;\n        }\n        return _this;\n    }\n    TapSubscriber.prototype._next = function (value) {\n        try {\n            this._tapNext.call(this._context, value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(value);\n    };\n    TapSubscriber.prototype._error = function (err) {\n        try {\n            this._tapError.call(this._context, err);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.error(err);\n    };\n    TapSubscriber.prototype._complete = function () {\n        try {\n            this._tapComplete.call(this._context);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        return this.destination.complete();\n    };\n    return TapSubscriber;\n}(Subscriber));\n//# sourceMappingURL=tap.js.map\n","import { Subject } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\n\nexport const MESSAGE_RECEIVED = \"[Message] Received\";\nexport const MESSAGE_PROCESSED = \"[Message] Processed\";\n\n/**\n * This class encapsulates a stream of events that can be used by other classes.\n */\nexport class EventManager {\n  /**\n   * Initializes an empty stream of events.\n   *\n   * @constructor\n   */\n  constructor() {\n    this.events = new Subject();\n  }\n\n  /**\n   * Receives a callback function and creates a new stream that will call\n   * that function whenever a new event is emitted.\n   *\n   * @param {fn} Function - A callback function.\n   * @returns {Subscription}\n   */\n  subscribe(fn) {\n    return this.events.pipe(tap(fn)).subscribe();\n  }\n\n  /**\n   * Emits a new \"message received\" event through the stream.\n   *\n   * @returns {undefined}\n   */\n  broadcastMessageReceived(message) {\n    this.events.next({\n      type: MESSAGE_RECEIVED,\n      message,\n    });\n  }\n\n  /**\n   * Emits a new \"message processed\" event through the stream.\n   *\n   * @returns {undefined}\n   */\n  broadcastMessageProcessed(message, result) {\n    this.events.next({\n      type: MESSAGE_PROCESSED,\n      message,\n      result,\n    });\n  }\n}\n","/**\n * IdentificationKeys component.\n */\n\nimport { samePublicKeys } from \"../utils\";\n\nexport class IdentificationKeys {\n  constructor(trusteeUniqueId, storedPublicKey) {\n    this.format = \"jwk\";\n    this.algorithm = {\n      name: \"RSASSA-PKCS1-v1_5\",\n      modulusLength: 4096,\n      publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n      hash: { name: \"SHA-256\" },\n    };\n    this.usages = [\"sign\"];\n    this.publicKeyAttrs = [\"alg\", \"e\", \"kty\", \"n\"];\n    this.jwtHeader = this._encode64(\n      JSON.stringify({ alg: \"RS256\", typ: \"JWT\" })\n    );\n\n    this.trusteeUniqueId = trusteeUniqueId;\n    this.privateKey = null;\n    this.publicKey = null;\n    this.storedPublicKey = JSON.parse(storedPublicKey || null);\n    this.keyIdentifier = `${trusteeUniqueId}-private-key`;\n    this.browserSupport = this._checkBrowserSupport();\n    this.textEncoder = new TextEncoder(\"utf-8\");\n\n    this.dbName = \"identification_keys\";\n    this.dbVersion = 1;\n    this.presentPromise = this._read();\n  }\n\n  present(then) {\n    this.presentPromise.then(() => {\n      if (this._matchesStoredPublicKey(this.publicKey)) {\n        then(this.browserSupport && this.privateKey !== null);\n      } else {\n        this.reset().then(then(false));\n      }\n    });\n  }\n\n  async generate() {\n    if (!this.browserSupport || this.storedPublicKey) {\n      return false;\n    }\n\n    return new Promise((resolve, reject) => {\n      try {\n        return this.crypto.subtle\n          .generateKey(this.algorithm, true, this.usages)\n          .then((keyPair) => {\n            return this.crypto.subtle\n              .exportKey(this.format, keyPair.privateKey)\n              .then((jwk) => {\n                this.publicKey = this._publicKeyFromPrivateKey(jwk);\n                const element = document.createElement(\"a\");\n                element.setAttribute(\n                  \"href\",\n                  `data:text/plain;charset=utf-8,${encodeURIComponent(\n                    JSON.stringify(jwk)\n                  )}`\n                );\n                element.setAttribute(\"download\", `${this.keyIdentifier}.jwk`);\n                element.style.display = \"none\";\n                document.body.appendChild(element);\n                element.click();\n                document.body.removeChild(element);\n                return resolve();\n              })\n              .catch(this._handleErrors);\n          });\n      } catch (error) {\n        return reject(error);\n      }\n    });\n  }\n\n  async upload(event) {\n    if (!this.browserSupport || this.privateKey !== null) {\n      return false;\n    }\n\n    return new Promise((resolve, reject) => {\n      if (event) {\n        this.onUploadInputChange(event, resolve, reject);\n      } else {\n        const element = document.createElement(\"input\");\n        element.setAttribute(\"type\", \"file\");\n        element.setAttribute(\"accept\", \".jwk\");\n        element.style.display = \"none\";\n        document.body.appendChild(element);\n\n        element.addEventListener(\"change\", (event) => {\n          document.body.removeChild(element);\n          this.onUploadInputChange(event, resolve, reject);\n        });\n        element.click();\n      }\n    });\n  }\n\n  onUploadInputChange(event, resolve, reject) {\n    const reader = new FileReader();\n    reader.readAsText(event.target.files[0]);\n    reader.onload = (readEvent) => {\n      let jwk = \"\";\n      try {\n        jwk = JSON.parse(readEvent.target.result);\n      } catch (error) {\n        return reject(\"invalid_format\");\n      }\n\n      return this.crypto.subtle\n        .importKey(this.format, jwk, this.algorithm, false, this.usages)\n        .then((privateKey) => {\n          const uploadedPublicKey = this._publicKeyFromPrivateKey(jwk);\n          if (this._matchesStoredPublicKey(uploadedPublicKey)) {\n            this.publicKey = uploadedPublicKey;\n            this.privateKey = privateKey;\n            this._save()\n              .then(() => resolve(true))\n              .catch(() => {\n                reject(\"could not be saved\");\n              });\n          } else {\n            reject(\"invalid_public_key\");\n          }\n        })\n        .catch(() => {\n          reject(\"invalid_key\");\n        });\n    };\n  }\n\n  reset() {\n    this.privateKey = this.publicKey = null;\n    return this._clear();\n  }\n\n  async sign(payload) {\n    if (!this.browserSupport || this.privateKey === null) {\n      return false;\n    }\n\n    const data = `${this.jwtHeader}.${this._encode64(JSON.stringify(payload))}`;\n    const signature = await this.crypto.subtle.sign(\n      this.algorithm,\n      this.privateKey,\n      this.textEncoder.encode(data)\n    );\n    return `${data}.${btoa(\n      Reflect.apply(String.fromCharCode, null, new Uint8Array(signature))\n    )\n      .replace(/[=]/g, \"\")\n      .replace(/\\+/g, \"-\")\n      .replace(/\\//g, \"_\")}`;\n  }\n\n  _checkBrowserSupport() {\n    this.indexedDB =\n      window.indexedDB ||\n      window.mozIndexedDB ||\n      window.webkitIndexedDB ||\n      window.msIndexedDB;\n    this.crypto = window.crypto || window.msCrypto;\n    return window.indexedDB && window.crypto;\n  }\n\n  _handleErrors(error) {\n    throw error;\n  }\n\n  _publicKeyFromPrivateKey(jwk) {\n    return Object.keys(jwk)\n      .filter((key) => this.publicKeyAttrs.includes(key))\n      .reduce((obj, key) => {\n        obj[key] = jwk[key];\n        return obj;\n      }, {});\n  }\n\n  _matchesStoredPublicKey(publicKey) {\n    return samePublicKeys(publicKey, this.storedPublicKey);\n  }\n\n  _encode64(payload) {\n    return btoa(unescape(encodeURIComponent(payload)))\n      .replace(/[=]/g, \"\")\n      .replace(/\\+/g, \"-\")\n      .replace(/\\//g, \"_\");\n  }\n\n  async _read() {\n    return this._useDb(\"readonly\", (store) => {\n      store.get(this.keyIdentifier).onsuccess = (event) => {\n        if (event.target.result) {\n          this.privateKey = event.target.result.privateKey;\n          this.publicKey = event.target.result.publicKey;\n        }\n      };\n    });\n  }\n\n  async _save() {\n    return this._useDb(\"readwrite\", (store) => {\n      store.add(\n        {\n          privateKey: this.privateKey,\n          publicKey: this.publicKey,\n        },\n        this.keyIdentifier\n      );\n    });\n  }\n\n  async _clear() {\n    return this._useDb(\"readwrite\", (store) => {\n      store.delete(this.keyIdentifier);\n    });\n  }\n\n  async _useDb(mode, operation) {\n    return new Promise((resolve, reject) => {\n      let db = null;\n      const dbReq = this.indexedDB.open(this.dbName, this.dbVersion);\n\n      dbReq.onerror = (error) => {\n        db = null;\n        reject(error);\n      };\n\n      dbReq.onupgradeneeded = () => {\n        db = dbReq.result;\n        db.createObjectStore(\"IdentificationKeys\");\n      };\n\n      dbReq.onsuccess = () => {\n        db = dbReq.result;\n        const tx = db.transaction([\"IdentificationKeys\"], mode);\n\n        operation(tx.objectStore(\"IdentificationKeys\"));\n\n        tx.oncomplete = () => {\n          db.close();\n          resolve();\n        };\n      };\n    });\n  }\n}\n","import { Trustee } from \"./trustee\";\nimport { Client } from \"../client/client\";\nimport { Election } from \"../election/election\";\n\n/**\n * This class is used to bind any UI elements to a trustee process.\n * @abstract\n */\nexport class TrusteeComponent {\n  /**\n   * Initialises the class with the given params.\n   * @param {Object} params - An object that contains the initialization params.\n   *  - {String} authorityPublicKeyJSON - The authority identification public key.\n   *  - {String} trusteeUniqueId - The unique identifier of a trustee.\n   *  - {Object} trusteeIdentificationKeys - An object that contains both the public and private key for\n   *                                         the corresponding trustee.\n   *  - {Object} trusteeWrapperAdapter - An object to interact with the trustee wrapper.\n   * @constructor\n   */\n  constructor({\n    authorityPublicKeyJSON,\n    trusteeUniqueId,\n    trusteeIdentificationKeys,\n    trusteeWrapperAdapter,\n  }) {\n    this.trustee = new Trustee({\n      uniqueId: trusteeUniqueId,\n      authorityPublicKeyJSON,\n      identificationKeys: trusteeIdentificationKeys,\n      wrapperAdapter: trusteeWrapperAdapter,\n    });\n  }\n\n  /**\n   * Setup the election for the trustee.\n   *\n   * @abstract\n   * @returns {Promise<undefined>}\n   */\n  async setupElection() {\n    throw new Error(\"not implemented\");\n  }\n\n  /**\n   * Setup the election for the trustee.\n   *\n   * @param {Object} params - An object that contains the initialization params.\n   *  - {Object} bulletinBoardClientParams - An object to configure the bulletin board client.\n   *  - {String} electionUniqueId - The unique identifier of an election.\n   *  - {Number} authorizationExpirationTimestamp - The timestamp until the authorization header is no longer valid.\n   *  - {Array<String>} typesFilter - A collection of message ids to be included in the log entry query.\n   *\n   * @returns {Promise<undefined>}\n   */\n  async setupElectionWithTypesFilter({\n    bulletinBoardClientParams,\n    electionUniqueId,\n    authorizationExpirationTimestamp,\n    typesFilter,\n  }) {\n    const [authorityId] = electionUniqueId.split(\".\");\n    const trusteeUniqueIdHeader = `${authorityId}.${this.trustee.uniqueId}`;\n    const authorizationHeader = await this.trustee.signMessage({\n      trustee_unique_id: trusteeUniqueIdHeader,\n      exp: authorizationExpirationTimestamp,\n    });\n\n    const bulletinBoardClient = new Client({\n      ...bulletinBoardClientParams,\n      headers: {\n        Authorization: authorizationHeader,\n        TrusteeUniqueId: trusteeUniqueIdHeader,\n      },\n    });\n\n    const election = new Election({\n      uniqueId: electionUniqueId,\n      bulletinBoardClient,\n      typesFilter,\n    });\n\n    this.trustee.election = election;\n  }\n\n  /**\n   * Bind UI events to the key ceremony process.\n   *\n   * @abstract\n   * @returns {Promise<undefined>}\n   */\n  async bindEvents() {\n    throw new Error(\"not implemented\");\n  }\n}\n","/* eslint-disable camelcase */\nimport { EventManager } from \"./event_manager\";\nimport { MessageParser } from \"../client/message-parser\";\nimport { MessageIdentifier, TRUSTEE_TYPE } from \"../client/message-identifier\";\n\nexport const WAIT_TIME_MS = 100; // 0.1s\n\n/**\n * This class encapsulates all the behavior that is needed to interact with the evoting\n * system as a Trustee role.\n */\nexport class Trustee {\n  /**\n   * Initializes the class with the given params.\n   *\n   * @constructor\n   * @param {Object} params - An object that contains the initialization params.\n   *  - {String} uniqueId - The trustee identifier.\n   *  - {String} authorityPublicKeyJSON - The authority identification public key.\n   *  - {Object} identificationKeys - A object that contains both the public and private key for\n   *                                  the corresponding trustee.\n   *  - {Object} wrapperAdapter - An object to interact with the trustee wrapper.\n   *  - {Object?} options - An optional object with some extra options.\n   */\n  constructor({\n    uniqueId,\n    authorityPublicKeyJSON,\n    identificationKeys,\n    wrapperAdapter,\n    options,\n  }) {\n    this.uniqueId = uniqueId;\n    this.identificationKeys = identificationKeys;\n    this.election = null;\n    this.options = options || { waitUntilNextCheck: WAIT_TIME_MS };\n    this.wrapperAdapter = wrapperAdapter;\n    this.parser = new MessageParser({ authorityPublicKeyJSON });\n    this.events = new EventManager();\n    this.nextLogEntryIndexToProcess = 0;\n    this.lastMessageProcessedWithResult = null;\n    this.hasSetupKeyCeremony = false;\n  }\n\n  /**\n   * Performs some operations to setup the trustee.\n   *\n   * Initializes a subscription to store new log entries for the given election.\n   *\n   * @returns {Promise<undefined>}\n   */\n  async setup() {\n    if (this.election === null) {\n      throw new Error(\"election is not set.\");\n    }\n    await this.wrapperAdapter.setup();\n    return this.election.subscribeToLogEntriesChanges();\n  }\n\n  /**\n   * Performs some operations to clean up after the key ceremony is done.\n   *\n   * @returns {undefined}\n   */\n  tearDown() {\n    this.election.unsubscribeToLogEntriesChanges();\n  }\n\n  /**\n   * Setup the key ceremony process processing the first log entry and yielding its result.\n   * Then it sends the result to the bulletin board and mark the setup as done.\n   *\n   * @generator\n   * @yields {String} - The state of the trustee to be able to perform future restores.\n   * @returns {Promise<Boolean>}\n   */\n  async *setupKeyCeremony() {\n    let message;\n    while (!message) {\n      message = await this.waitForNextLogEntryResult();\n    }\n\n    yield await this.wrapperAdapter.backup();\n    await this.processKeyCeremonyStep(message);\n    this.hasSetupKeyCeremony = true;\n    return this.hasSetupKeyCeremony;\n  }\n\n  /**\n   * Starts or continues with the key ceremony process.\n   *\n   * @returns {Promise<Object|undefined>}\n   * @throws An exception is raised if the trustee needs to be restored or\n   *         there is a problem with the client.\n   */\n  async runKeyCeremony() {\n    if (!this.hasSetupKeyCeremony) {\n      throw new Error(\"The key ceremony has not been setup yet\");\n    }\n\n    if (await this.needsToBeRestored()) {\n      throw new Error(\"You need to restore the wrapper state to continue\");\n    }\n\n    return this.waitForNextLogEntryResult().then(async (message) => {\n      await this.processKeyCeremonyStep(message);\n\n      if (await this.wrapperAdapter.isKeyCeremonyDone()) {\n        return this.tearDown();\n      }\n\n      return this.runKeyCeremony();\n    });\n  }\n\n  /**\n   * Starts or continues with the tally process.\n   *\n   * @returns {Promise<Object|undefined>}\n   * @throws An exception is raised if the trustee needs to be restored or\n   *         there is a problem with the client.\n   */\n  async runTally() {\n    if (await this.needsToBeRestored()) {\n      throw new Error(\"You need to restore the wrapper state to continue\");\n    }\n\n    return this.waitForNextLogEntryResult().then(async (message) => {\n      await this.processTallyStep(message);\n\n      if (await this.wrapperAdapter.isTallyDone()) {\n        return this.tearDown();\n      }\n\n      return this.runTally();\n    });\n  }\n\n  /**\n   * Whether the trustee state needs to be restored or not.\n   *\n   * @returns {Promise<Boolean>}\n   */\n  async needsToBeRestored() {\n    const lastMessageFromTrustee = this.election.getLastMessageFromTrustee(\n      this.uniqueId\n    );\n\n    return lastMessageFromTrustee && (await this.wrapperAdapter.isFresh());\n  }\n\n  /**\n   * Restore the trustee state from the given state string. It uses the last message sent to check that the state is valid.\n   *\n   * @param {string} wrapperState - As string with the trustee state retrieved from the backup method.\n   * @returns {Promise<Boolean>}\n   */\n  async restore(wrapperState) {\n    const lastMessageFromTrustee = this.election.getLastMessageFromTrustee(\n      this.uniqueId\n    );\n\n    this.hasSetupKeyCeremony =\n      lastMessageFromTrustee &&\n      (await this.wrapperAdapter.restore(wrapperState));\n\n    return this.hasSetupKeyCeremony;\n  }\n\n  /**\n   * Creates an interval that will check periodically if there are new log entries\n   * to process. The interval is done when a new log entry is processed and it has\n   * a result.\n   *\n   * @private\n   * @returns {Promise<Object>}\n   */\n  async waitForNextLogEntryResult() {\n    await new Promise((resolve) => {\n      const intervalId = setInterval(async () => {\n        const { logEntries } = this.election;\n\n        if (logEntries.length > this.nextLogEntryIndexToProcess) {\n          clearInterval(intervalId);\n          resolve();\n        }\n      }, this.options.waitUntilNextCheck);\n    });\n\n    return this.processNextLogEntry();\n  }\n\n  /**\n   * Processes the next log entry and outputs the result. It broadcasts an event\n   * when the message is received and another one when it is processed.\n   *\n   * @private\n   * @returns {Promise<Object|null|undefined>}\n   */\n  async processNextLogEntry() {\n    const { logEntries } = this.election;\n    const message = logEntries[this.nextLogEntryIndexToProcess];\n\n    this.events.broadcastMessageReceived(message);\n\n    const { messageIdentifier, decodedData } = await this.parser.parse(message);\n\n    const result = await this.wrapperAdapter.processMessage(\n      messageIdentifier.typeSubtype,\n      decodedData\n    );\n\n    this.events.broadcastMessageProcessed(message, result);\n\n    this.nextLogEntryIndexToProcess += 1;\n\n    if (result) {\n      const { messageType, content } = result;\n      return {\n        message_id: MessageIdentifier.format(\n          this.election.uniqueId,\n          messageType,\n          TRUSTEE_TYPE,\n          this.uniqueId\n        ),\n        content,\n      };\n    }\n\n    return result;\n  }\n\n  /**\n   * If there is a message to be sent that has not been sent already it is signed\n   * and send it to the bulletin board as a key ceremony step.\n   *\n   * @private\n   * @returns {Promise<Object|undefined>}\n   */\n  async processKeyCeremonyStep(message) {\n    if (message && !this.isMessageAlreadyLogged(message)) {\n      const signedData = await this.signMessage(message);\n      return this.election.bulletinBoardClient.processKeyCeremonyStep({\n        messageId: message.message_id,\n        signedData,\n      });\n    }\n  }\n\n  /**\n   * If there is a message to be sent that has not been sent already it is signed\n   * and send it to the bulletin board as a trustee step.\n   *\n   * @private\n   * @returns {Promise<Object|undefined>}\n   */\n  async processTallyStep(message) {\n    if (message && !this.isMessageAlreadyLogged(message)) {\n      const signedData = await this.signMessage(message);\n      return this.election.bulletinBoardClient.processTallyStep({\n        messageId: message.message_id,\n        signedData,\n      });\n    }\n  }\n\n  /**\n   * Whether the message is already in the election log or not.\n   *\n   * @private\n   * @returns {Boolean}\n   */\n  isMessageAlreadyLogged({ message_id }) {\n    const { logEntries } = this.election;\n    return logEntries.find((logEntry) => logEntry.messageId === message_id);\n  }\n\n  /**\n   * Signs a message using the trustee identification keys.\n   *\n   * @private\n   * @param {Object} message - The message to be signed.\n   * @returns {Promise<String>}\n   */\n  signMessage(message) {\n    return this.identificationKeys.sign({\n      iat: Math.floor(new Date() / 1000),\n      ...message,\n    });\n  }\n}\n","export const NONE = 0;\nexport const CREATED = 1;\nexport const KEY_CEREMONY = 2;\nexport const KEY_CEREMONY_ENDED = 3;\nexport const TALLY = 4;\nexport const TALLY_ENDED = 5;\n\nexport const CREATE_ELECTION = \"create_election\";\nexport const START_KEY_CEREMONY = \"start_key_ceremony\";\nexport const KEY_CEREMONY_STEP_1 = \"key_ceremony.step_1\";\nexport const END_KEY_CEREMONY = \"end_key_ceremony\";\nexport const START_TALLY = \"start_tally\";\nexport const TALLY_CAST = \"tally.cast\";\nexport const TALLY_SHARE = \"tally.share\";\nexport const TALLY_MISSING_TRUSTEE = \"tally.missing_trustee\";\nexport const TALLY_COMPENSATION = \"tally.compensation\";\nexport const END_TALLY = \"end_tally\";\n\n/**\n * This is just a dummy implementation of a possible `TrusteeWrapper`.\n * It is based on the dummy voting schema that we are using in the Bulletin Board.\n */\nexport class TrusteeWrapper {\n  /**\n   * Initializes the class with the given params.\n   *\n   * @constructor\n   * @param {Object} params - An object that contains the initialization params.\n   * - {String} trusteeId - The unique id of a trustee.\n   */\n  constructor({ trusteeId }) {\n    this.trusteeId = trusteeId;\n    this.status = NONE;\n    this.electionPublicKey = 0;\n    this.jointElectionKey = 0;\n    this.tallyCastMessage = null;\n    this.quorum = 0;\n    this.trusteesKeys = {};\n    this.trusteesShares = {};\n  }\n\n  /**\n   * Process the message and update the wrapper status.\n   *\n   * @param {String} messageType - The message type.\n   * @param {Object} decodedData - An object with the data to process.\n   *\n   * @returns {Object|undefined}\n   */\n  processMessage(messageType, decodedData) {\n    switch (this.status) {\n      case NONE: {\n        if (messageType === CREATE_ELECTION) {\n          this.quorum = decodedData.scheme.quorum;\n          this.status = CREATED;\n        }\n        break;\n      }\n      case CREATED: {\n        if (messageType === START_KEY_CEREMONY) {\n          this.status = KEY_CEREMONY;\n          this.electionPublicKey = Math.floor(50 + Math.random() * 200) * 2 + 1;\n\n          return {\n            messageType: KEY_CEREMONY_STEP_1,\n            content: JSON.stringify({\n              election_public_key: this.electionPublicKey,\n              owner_id: this.trusteeId,\n            }),\n          };\n        }\n        break;\n      }\n      case KEY_CEREMONY: {\n        if (messageType === KEY_CEREMONY_STEP_1) {\n          const content = JSON.parse(decodedData.content);\n          this.trusteesKeys[content.owner_id] = content.election_public_key;\n        } else if (messageType === END_KEY_CEREMONY) {\n          const content = JSON.parse(decodedData.content);\n          this.jointElectionKey = content.joint_election_key;\n          this.status = KEY_CEREMONY_ENDED;\n        }\n        break;\n      }\n      case KEY_CEREMONY_ENDED: {\n        if (messageType === START_TALLY) {\n          this.status = TALLY;\n        }\n        break;\n      }\n      case TALLY: {\n        if (messageType === TALLY_CAST) {\n          this.tallyCastMessage = decodedData.content;\n          const contests = JSON.parse(this.tallyCastMessage);\n          for (const [question, answers] of Object.entries(contests)) {\n            for (const [answer, value] of Object.entries(answers)) {\n              contests[question][answer] =\n                (value % this.electionPublicKey) * this.electionPublicKey;\n            }\n          }\n\n          return {\n            messageType: TALLY_SHARE,\n            content: JSON.stringify({\n              owner_id: this.trusteeId,\n              contests,\n            }),\n          };\n        } else if (messageType === TALLY_SHARE) {\n          const content = JSON.parse(decodedData.content);\n          this.trusteesShares[content.owner_id] = true;\n\n          return this._compensate();\n        } else if (messageType === TALLY_MISSING_TRUSTEE) {\n          if (!(decodedData.trustee_id in this.trusteesShares)) {\n            this.trusteesShares[decodedData.trustee_id] = false;\n            return this._compensate();\n          }\n        } else if (messageType === END_TALLY) {\n          this.status = TALLY_ENDED;\n        }\n\n        break;\n      }\n    }\n  }\n\n  /**\n   * Whether the trustee wrapper is in a fresh state or no.\n   *\n   * @returns {boolean}\n   */\n  isFresh() {\n    return this.status === NONE;\n  }\n\n  /**\n   * Returns the wrapper state in a string format.\n   *\n   * @returns {String}\n   */\n  backup() {\n    return JSON.stringify(this);\n  }\n\n  /**\n   * Restore the trustee state from the given state string.\n   *\n   * @param {string} state - As string with the wrapper state retrieved from the backup method.\n   * @returns {boolean}\n   */\n  restore(state) {\n    if (!this.isFresh()) {\n      console.warn(\"Restore not needed\");\n      return false;\n    }\n\n    const result = JSON.parse(state);\n    if (result.trusteeId !== this.trusteeId) {\n      console.warn(\"Invalid trustee id\");\n      return false;\n    }\n\n    if (result.status === CREATED) {\n      console.warn(\"Invalid restored status\");\n      return false;\n    }\n\n    try {\n      Object.assign(this, result);\n    } catch (error) {\n      console.error(error);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Whether the key ceremony process is done or not.\n   * @returns {Boolean}\n   */\n  isKeyCeremonyDone() {\n    return this.status >= KEY_CEREMONY_ENDED;\n  }\n\n  /**\n   * Whether the tally process is done or not.\n   * @returns {Boolean}\n   */\n  isTallyDone() {\n    return this.status >= TALLY_ENDED;\n  }\n\n  _compensate() {\n    const trusteesCount = Object.keys(this.trusteesKeys).length;\n    const missingTrustees = Object.values(this.trusteesShares).filter(\n      (val) => !val\n    ).length;\n\n    if (\n      missingTrustees > 0 &&\n      missingTrustees <= trusteesCount - this.quorum &&\n      Object.keys(this.trusteesShares).length === trusteesCount\n    ) {\n      const contests = JSON.parse(this.tallyCastMessage);\n      for (const [question, answers] of Object.entries(contests)) {\n        for (const [answer, value] of Object.entries(answers)) {\n          contests[question][answer] =\n            Math.pow(value % this.electionPublicKey, missingTrustees) /\n            Math.pow(this.electionPublicKey, trusteesCount - missingTrustees);\n        }\n      }\n\n      return {\n        messageType: TALLY_COMPENSATION,\n        content: JSON.stringify({\n          owner_id: this.trusteeId,\n          contests,\n        }),\n      };\n    }\n  }\n}\n","import { TrusteeWrapper } from \"./trustee_wrapper\";\n\n/**\n * This is just a dummy implementation of a possible `TrusteeWrapperAdapter`.\n * It is based on the dummy voting scheme that we are using in the Bulletin Board.\n */\nexport class TrusteeWrapperAdapter {\n  /**\n   * Initializes the class with the given params.\n   *\n   * @constructor\n   * @param {Object} params - An object that contains the initialization params.\n   * - {String} trusteeId - The unique id of a trustee.\n   */\n  constructor({ trusteeId }) {\n    this.trusteeId = trusteeId;\n    this.wrapper = new TrusteeWrapper({ trusteeId });\n  }\n\n  /**\n   * Setup the trustee wrapper.\n   *\n   * @returns {Promise<undefined>}\n   */\n  setup() {}\n\n  /**\n   * Process the message and update the wrapper status.\n   *\n   * @param {String} messageType - The message type.\n   * @param {Object} decodedData - An object with the data to process.\n   *\n   * @returns {Promise<Object|undefined>}\n   */\n  processMessage(messageType, decodedData) {\n    return this.wrapper.processMessage(messageType, decodedData);\n  }\n\n  /**\n   * Whether the trustee wrapper is in a fresh state or no.\n   *\n   * @returns {Promise<Boolean>}\n   */\n  isFresh() {\n    return this.wrapper.isFresh();\n  }\n\n  /**\n   * Returns the wrapper state in a string format.\n   *\n   * @returns {Promise<String>}\n   */\n  backup() {\n    return this.wrapper.backup();\n  }\n\n  /**\n   * Restore the trustee state from the given state string.\n   *\n   * @param {string} state - As string with the wrapper state retrieved from the backup method.\n   * @returns {Promise<Boolean>}\n   */\n  restore(state) {\n    return this.wrapper.restore(state);\n  }\n\n  /**\n   * Whether the key ceremony process is done or not.\n   * @returns {Promise<Boolean>}\n   */\n  isKeyCeremonyDone() {\n    return this.wrapper.isKeyCeremonyDone();\n  }\n\n  /**\n   * Whether the tally process is done or not.\n   * @returns {Promise<Boolean>}\n   */\n  isTallyDone() {\n    return this.wrapper.isTallyDone();\n  }\n}\n","/**\n * Common class used by any ElectionGuard adapter to run python code through web workers.\n */\nexport class WrapperAdapter {\n  /**\n   * Runs an arbitrary python code in the web worker.\n   *\n   * @param {String} pythonCode - A string representing valid python code.\n   * @param {Object} pythonData - An Object which values can be referenced from\n   *                              the python code using the js module.\n   * @private\n   * @returns {Promise<Object>}\n   */\n  processPythonCodeOnWorker(pythonCode, pythonData) {\n    return new Promise((resolve, reject) => {\n      this.worker.onmessage = (event) => {\n        resolve(event.data.results);\n      };\n\n      this.worker.onerror = (error) => {\n        console.error(error);\n        reject(error);\n      };\n\n      this.worker.postMessage({\n        python: pythonCode,\n        ...pythonData,\n      });\n    });\n  }\n}\n","import { WrapperAdapter } from \"./wrapper_adapter\";\n\n/**\n * This implements the Electionguard Trustee Wrapper Adapter using a web worker\n * that executes python code compiled through `pyodide`.\n * @extends WrapperAdapter\n */\nexport class TrusteeWrapperAdapter extends WrapperAdapter {\n  /**\n   * Initializes the class with the given params.\n   *\n   * @constructor\n   * @param {Object} params - An object that contains the initialization params.\n   * - {String} trusteeId - The unique id of a trustee.\n   */\n  constructor({ trusteeId, workerUrl }) {\n    super();\n\n    this.trusteeId = trusteeId;\n    this.worker = new Worker(workerUrl);\n  }\n\n  /**\n   * Setup the trustee wrapper.\n   *\n   * @returns {Promise<undefined>}\n   */\n  setup() {\n    return this.processPythonCodeOnWorker(\n      `\n        from js import trustee_id\n        from bulletin_board.electionguard.trustee import Trustee\n        trustee = Trustee(trustee_id)\n      `,\n      {\n        trustee_id: this.trusteeId,\n      }\n    );\n  }\n\n  /**\n   * Process the message and update the wrapper status.\n   *\n   * @param {String} messageType - The message type.\n   * @param {Object} decodedData - An object with the data to process.\n   *\n   * @returns {Promise<Object|undefined>}\n   */\n  async processMessage(messageType, decodedData) {\n    const result = await this.processPythonCodeOnWorker(\n      `\n      import json\n      from js import message_type, decoded_data\n      trustee.process_message(message_type, json.loads(decoded_data))\n    `,\n      {\n        message_type: messageType,\n        decoded_data: JSON.stringify(decodedData),\n      }\n    );\n\n    if (result && result.length > 0) {\n      // eslint-disable-next-line camelcase\n      const [{ message_type, content }] = result;\n      return {\n        messageType: message_type,\n        content,\n      };\n    }\n  }\n\n  /**\n   * Whether the trustee wrapper is in a fresh state or no.\n   *\n   * @returns {Promise<Boolean>}\n   */\n  isFresh() {\n    return this.processPythonCodeOnWorker(\n      `\n      trustee.is_fresh()\n    `\n    );\n  }\n\n  /**\n   * Returns the wrapper state in a string format.\n   *\n   * @returns {Promise<String>}\n   */\n  backup() {\n    return this.processPythonCodeOnWorker(\n      `\n      trustee.backup().hex()\n    `\n    );\n  }\n\n  /**\n   * Restore the trustee state from the given state string.\n   *\n   * @param {string} state - As string with the wrapper state retrieved from the backup method.\n   * @returns {Promise<Boolean>}\n   */\n  restore(state) {\n    return this.processPythonCodeOnWorker(\n      `\n      from js import state\n\n      trustee = Trustee.restore(bytes.fromhex(state))\n      True\n    `,\n      {\n        state,\n      }\n    );\n  }\n\n  /**\n   * Whether the key ceremony process is done or not.\n   *\n   * @returns {Promise<Boolean>}\n   */\n  isKeyCeremonyDone() {\n    return this.processPythonCodeOnWorker(\n      `\n      trustee.is_key_ceremony_done()\n    `\n    );\n  }\n\n  /**\n   * Whether the tally process is done or not.\n   *\n   * @returns {Promise<Boolean>}\n   */\n  isTallyDone() {\n    return this.processPythonCodeOnWorker(\n      `\n      trustee.is_tally_done()\n    `\n    );\n  }\n}\n"],"names":["GraphQLClient","constructor","apiEndpointUrl","headers","httpLink","uri","this","apolloClient","link","cache","async","electionUniqueId","contentHash","query","variables","data","logEntry","after","types","fetchPolicy","election","logEntries","messageId","signedData","result","mutate","mutation","processKeyCeremonyStep","error","Error","pendingMessage","processTallyStep","AUTHORITY_TYPE","BULLETIN_BOARD_TYPE","TRUSTEE_TYPE","VALID_TYPES","MessageIdentifier","static","elements","author","split","authority","electionId","type","subtype","authorType","authorId","dotSubtype","includes","typeSubtype","id","MessageParser","authorityPublicKeyJSON","authorityPublicKey","JWK","keys","messageIdentifier","senderKey","decodedData","JWS","verify","algorithms","JSON","parse","TextDecoder","decode","payload","parseCreateElection","bulletin_board","trustees","public_key","slug","promises","push","loadKey","then","key","trustee","Promise","all","client","Election","uniqueId","bulletinBoardClient","typesFilter","options","subscriptionId","waitUntilNextCheck","unsubscribeToLogEntriesChanges","getLogEntries","setInterval","clearInterval","getLastMessageFromTrustee","trusteeId","i","length","lastLogEntry","resolve","getElectionLogEntries","isFunction","x","_enable_super_gross_mode_that_will_cause_bad_things","config","undefined","useDeprecatedSynchronousErrorHandling","value","stack","hostReportError","err","setTimeout","empty","closed","next","complete","isArray","Array","UnsubscriptionError","UnsubscriptionErrorImpl","errors","call","message","map","toString","join","name","prototype","Object","create","Subscription","unsubscribe","_parentOrParents","_subscriptions","_ctorUnsubscribe","_unsubscribe","_a","remove","index","e","flattenUnsubscriptionErrors","len","sub","concat","add","teardown","subscription","EMPTY","tmp","indexOf","subscriptions","subscriptionIndex","splice","reduce","errs","rxSubscriber","Symbol","Math","random","Subscriber","_super","destinationOrNext","_this","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","arguments","destination","SafeSubscriber","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","_parentSubscriber","observerOrNext","context","bind","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","fn","parent","observable","identity","pipeFromArray","fns","input","prev","Observable","subscribe","_isScalar","_subscribe","lift","operator","source","sink","nextOrObserver","toSubscriber","_trySubscribe","observer","closed_1","canReportError","console","warn","forEach","promiseCtor","getPromiseCtor","reject","pipe","operations","_i","toPromise","ObjectUnsubscribedError","ObjectUnsubscribedErrorImpl","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscriber","Subject","hasError","thrownError","AnonymousSubject","copy","slice","asObservable","noop","DoOperator","TapSubscriber","_tapNext","_tapError","_tapComplete","MESSAGE_RECEIVED","EventManager","events","broadcastMessageReceived","broadcastMessageProcessed","IdentificationKeys","trusteeUniqueId","storedPublicKey","format","algorithm","modulusLength","publicExponent","Uint8Array","hash","usages","publicKeyAttrs","jwtHeader","_encode64","stringify","alg","typ","privateKey","publicKey","keyIdentifier","browserSupport","_checkBrowserSupport","textEncoder","TextEncoder","dbName","dbVersion","presentPromise","_read","present","_matchesStoredPublicKey","reset","crypto","subtle","generateKey","keyPair","exportKey","jwk","_publicKeyFromPrivateKey","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","catch","_handleErrors","event","onUploadInputChange","addEventListener","reader","FileReader","readAsText","target","files","onload","readEvent","importKey","uploadedPublicKey","_save","_clear","signature","sign","encode","btoa","Reflect","apply","String","fromCharCode","replace","indexedDB","window","mozIndexedDB","webkitIndexedDB","msIndexedDB","msCrypto","filter","obj","unescape","_useDb","store","get","onsuccess","delete","mode","operation","db","dbReq","open","onerror","onupgradeneeded","createObjectStore","tx","transaction","objectStore","oncomplete","close","TrusteeComponent","trusteeIdentificationKeys","trusteeWrapperAdapter","identificationKeys","wrapperAdapter","bulletinBoardClientParams","authorizationExpirationTimestamp","authorityId","trusteeUniqueIdHeader","authorizationHeader","signMessage","trustee_unique_id","exp","Authorization","TrusteeUniqueId","Trustee","parser","nextLogEntryIndexToProcess","lastMessageProcessedWithResult","hasSetupKeyCeremony","setup","subscribeToLogEntriesChanges","tearDown","waitForNextLogEntryResult","backup","needsToBeRestored","isKeyCeremonyDone","runKeyCeremony","isTallyDone","runTally","isFresh","wrapperState","lastMessageFromTrustee","restore","intervalId","processNextLogEntry","processMessage","messageType","content","message_id","isMessageAlreadyLogged","find","iat","floor","Date","KEY_CEREMONY_STEP_1","TALLY_SHARE","TrusteeWrapper","status","electionPublicKey","jointElectionKey","tallyCastMessage","quorum","trusteesKeys","trusteesShares","scheme","election_public_key","owner_id","joint_election_key","contests","question","answers","entries","answer","_compensate","trustee_id","state","assign","trusteesCount","missingTrustees","values","val","pow","TrusteeWrapperAdapter","wrapper","WrapperAdapter","processPythonCodeOnWorker","pythonCode","pythonData","worker","onmessage","results","postMessage","python","workerUrl","super","Worker","message_type","decoded_data"],"sourceRoot":""}