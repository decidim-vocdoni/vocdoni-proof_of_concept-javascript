{"version":3,"file":"js/9098-87ae4c8a99f37adffdfb.js","mappings":"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","sources":["webpack://decidim-development-app/./node_modules/base64-js/index.js","webpack://decidim-development-app/./node_modules/base64url/dist/base64url.js","webpack://decidim-development-app/./node_modules/base64url/dist/pad-string.js","webpack://decidim-development-app/./node_modules/base64url/index.js","webpack://decidim-development-app/./node_modules/buffer/index.js","webpack://decidim-development-app/./node_modules/es6-promise/dist/es6-promise.js","webpack://decidim-development-app/./node_modules/ieee754/index.js","webpack://decidim-development-app/./node_modules/lodash/_DataView.js","webpack://decidim-development-app/./node_modules/lodash/_Hash.js","webpack://decidim-development-app/./node_modules/lodash/_LazyWrapper.js","webpack://decidim-development-app/./node_modules/lodash/_ListCache.js","webpack://decidim-development-app/./node_modules/lodash/_LodashWrapper.js","webpack://decidim-development-app/./node_modules/lodash/_Map.js","webpack://decidim-development-app/./node_modules/lodash/_MapCache.js","webpack://decidim-development-app/./node_modules/lodash/_Promise.js","webpack://decidim-development-app/./node_modules/lodash/_Set.js","webpack://decidim-development-app/./node_modules/lodash/_SetCache.js","webpack://decidim-development-app/./node_modules/lodash/_Stack.js","webpack://decidim-development-app/./node_modules/lodash/_Symbol.js","webpack://decidim-development-app/./node_modules/lodash/_Uint8Array.js","webpack://decidim-development-app/./node_modules/lodash/_WeakMap.js","webpack://decidim-development-app/./node_modules/lodash/_apply.js","webpack://decidim-development-app/./node_modules/lodash/_arrayEach.js","webpack://decidim-development-app/./node_modules/lodash/_arrayFilter.js","webpack://decidim-development-app/./node_modules/lodash/_arrayIncludes.js","webpack://decidim-development-app/./node_modules/lodash/_arrayIncludesWith.js","webpack://decidim-development-app/./node_modules/lodash/_arrayLikeKeys.js","webpack://decidim-development-app/./node_modules/lodash/_arrayMap.js","webpack://decidim-development-app/./node_modules/lodash/_arrayPush.js","webpack://decidim-development-app/./node_modules/lodash/_assignMergeValue.js","webpack://decidim-development-app/./node_modules/lodash/_assignValue.js","webpack://decidim-development-app/./node_modules/lodash/_assocIndexOf.js","webpack://decidim-development-app/./node_modules/lodash/_baseAssign.js","webpack://decidim-development-app/./node_modules/lodash/_baseAssignIn.js","webpack://decidim-development-app/./node_modules/lodash/_baseAssignValue.js","webpack://decidim-development-app/./node_modules/lodash/_baseClamp.js","webpack://decidim-development-app/./node_modules/lodash/_baseClone.js","webpack://decidim-development-app/./node_modules/lodash/_baseCreate.js","webpack://decidim-development-app/./node_modules/lodash/_baseFill.js","webpack://decidim-development-app/./node_modules/lodash/_baseFindIndex.js","webpack://decidim-development-app/./node_modules/lodash/_baseFlatten.js","webpack://decidim-development-app/./node_modules/lodash/_baseFor.js","webpack://decidim-development-app/./node_modules/lodash/_baseGet.js","webpack://decidim-development-app/./node_modules/lodash/_baseGetAllKeys.js","webpack://decidim-development-app/./node_modules/lodash/_baseGetTag.js","webpack://decidim-development-app/./node_modules/lodash/_baseHasIn.js","webpack://decidim-development-app/./node_modules/lodash/_baseIndexOf.js","webpack://decidim-development-app/./node_modules/lodash/_baseIntersection.js","webpack://decidim-development-app/./node_modules/lodash/_baseIsArguments.js","webpack://decidim-development-app/./node_modules/lodash/_baseIsMap.js","webpack://decidim-development-app/./node_modules/lodash/_baseIsNaN.js","webpack://decidim-development-app/./node_modules/lodash/_baseIsNative.js","webpack://decidim-development-app/./node_modules/lodash/_baseIsSet.js","webpack://decidim-development-app/./node_modules/lodash/_baseIsTypedArray.js","webpack://decidim-development-app/./node_modules/lodash/_baseKeys.js","webpack://decidim-development-app/./node_modules/lodash/_baseKeysIn.js","webpack://decidim-development-app/./node_modules/lodash/_baseLodash.js","webpack://decidim-development-app/./node_modules/lodash/_baseMerge.js","webpack://decidim-development-app/./node_modules/lodash/_baseMergeDeep.js","webpack://decidim-development-app/./node_modules/lodash/_basePick.js","webpack://decidim-development-app/./node_modules/lodash/_basePickBy.js","webpack://decidim-development-app/./node_modules/lodash/_baseRest.js","webpack://decidim-development-app/./node_modules/lodash/_baseSet.js","webpack://decidim-development-app/./node_modules/lodash/_baseSetData.js","webpack://decidim-development-app/./node_modules/lodash/_baseSetToString.js","webpack://decidim-development-app/./node_modules/lodash/_baseSlice.js","webpack://decidim-development-app/./node_modules/lodash/_baseTimes.js","webpack://decidim-development-app/./node_modules/lodash/_baseToString.js","webpack://decidim-development-app/./node_modules/lodash/_baseTrim.js","webpack://decidim-development-app/./node_modules/lodash/_baseUnary.js","webpack://decidim-development-app/./node_modules/lodash/_baseUniq.js","webpack://decidim-development-app/./node_modules/lodash/_baseUnset.js","webpack://decidim-development-app/./node_modules/lodash/_cacheHas.js","webpack://decidim-development-app/./node_modules/lodash/_castArrayLikeObject.js","webpack://decidim-development-app/./node_modules/lodash/_castPath.js","webpack://decidim-development-app/./node_modules/lodash/_cloneArrayBuffer.js","webpack://decidim-development-app/./node_modules/lodash/_cloneBuffer.js","webpack://decidim-development-app/./node_modules/lodash/_cloneDataView.js","webpack://decidim-development-app/./node_modules/lodash/_cloneRegExp.js","webpack://decidim-development-app/./node_modules/lodash/_cloneSymbol.js","webpack://decidim-development-app/./node_modules/lodash/_cloneTypedArray.js","webpack://decidim-development-app/./node_modules/lodash/_composeArgs.js","webpack://decidim-development-app/./node_modules/lodash/_composeArgsRight.js","webpack://decidim-development-app/./node_modules/lodash/_copyArray.js","webpack://decidim-development-app/./node_modules/lodash/_copyObject.js","webpack://decidim-development-app/./node_modules/lodash/_copySymbols.js","webpack://decidim-development-app/./node_modules/lodash/_copySymbolsIn.js","webpack://decidim-development-app/./node_modules/lodash/_coreJsData.js","webpack://decidim-development-app/./node_modules/lodash/_countHolders.js","webpack://decidim-development-app/./node_modules/lodash/_createAssigner.js","webpack://decidim-development-app/./node_modules/lodash/_createBaseFor.js","webpack://decidim-development-app/./node_modules/lodash/_createBind.js","webpack://decidim-development-app/./node_modules/lodash/_createCtor.js","webpack://decidim-development-app/./node_modules/lodash/_createCurry.js","webpack://decidim-development-app/./node_modules/lodash/_createHybrid.js","webpack://decidim-development-app/./node_modules/lodash/_createPartial.js","webpack://decidim-development-app/./node_modules/lodash/_createRecurry.js","webpack://decidim-development-app/./node_modules/lodash/_createSet.js","webpack://decidim-development-app/./node_modules/lodash/_createWrap.js","webpack://decidim-development-app/./node_modules/lodash/_customOmitClone.js","webpack://decidim-development-app/./node_modules/lodash/_defineProperty.js","webpack://decidim-development-app/./node_modules/lodash/_flatRest.js","webpack://decidim-development-app/./node_modules/lodash/_freeGlobal.js","webpack://decidim-development-app/./node_modules/lodash/_getAllKeys.js","webpack://decidim-development-app/./node_modules/lodash/_getAllKeysIn.js","webpack://decidim-development-app/./node_modules/lodash/_getData.js","webpack://decidim-development-app/./node_modules/lodash/_getFuncName.js","webpack://decidim-development-app/./node_modules/lodash/_getHolder.js","webpack://decidim-development-app/./node_modules/lodash/_getMapData.js","webpack://decidim-development-app/./node_modules/lodash/_getNative.js","webpack://decidim-development-app/./node_modules/lodash/_getPrototype.js","webpack://decidim-development-app/./node_modules/lodash/_getRawTag.js","webpack://decidim-development-app/./node_modules/lodash/_getSymbols.js","webpack://decidim-development-app/./node_modules/lodash/_getSymbolsIn.js","webpack://decidim-development-app/./node_modules/lodash/_getTag.js","webpack://decidim-development-app/./node_modules/lodash/_getValue.js","webpack://decidim-development-app/./node_modules/lodash/_getWrapDetails.js","webpack://decidim-development-app/./node_modules/lodash/_hasPath.js","webpack://decidim-development-app/./node_modules/lodash/_hashClear.js","webpack://decidim-development-app/./node_modules/lodash/_hashDelete.js","webpack://decidim-development-app/./node_modules/lodash/_hashGet.js","webpack://decidim-development-app/./node_modules/lodash/_hashHas.js","webpack://decidim-development-app/./node_modules/lodash/_hashSet.js","webpack://decidim-development-app/./node_modules/lodash/_initCloneArray.js","webpack://decidim-development-app/./node_modules/lodash/_initCloneByTag.js","webpack://decidim-development-app/./node_modules/lodash/_initCloneObject.js","webpack://decidim-development-app/./node_modules/lodash/_insertWrapDetails.js","webpack://decidim-development-app/./node_modules/lodash/_isFlattenable.js","webpack://decidim-development-app/./node_modules/lodash/_isIndex.js","webpack://decidim-development-app/./node_modules/lodash/_isIterateeCall.js","webpack://decidim-development-app/./node_modules/lodash/_isKey.js","webpack://decidim-development-app/./node_modules/lodash/_isKeyable.js","webpack://decidim-development-app/./node_modules/lodash/_isLaziable.js","webpack://decidim-development-app/./node_modules/lodash/_isMasked.js","webpack://decidim-development-app/./node_modules/lodash/_isPrototype.js","webpack://decidim-development-app/./node_modules/lodash/_listCacheClear.js","webpack://decidim-development-app/./node_modules/lodash/_listCacheDelete.js","webpack://decidim-development-app/./node_modules/lodash/_listCacheGet.js","webpack://decidim-development-app/./node_modules/lodash/_listCacheHas.js","webpack://decidim-development-app/./node_modules/lodash/_listCacheSet.js","webpack://decidim-development-app/./node_modules/lodash/_mapCacheClear.js","webpack://decidim-development-app/./node_modules/lodash/_mapCacheDelete.js","webpack://decidim-development-app/./node_modules/lodash/_mapCacheGet.js","webpack://decidim-development-app/./node_modules/lodash/_mapCacheHas.js","webpack://decidim-development-app/./node_modules/lodash/_mapCacheSet.js","webpack://decidim-development-app/./node_modules/lodash/_memoizeCapped.js","webpack://decidim-development-app/./node_modules/lodash/_mergeData.js","webpack://decidim-development-app/./node_modules/lodash/_metaMap.js","webpack://decidim-development-app/./node_modules/lodash/_nativeCreate.js","webpack://decidim-development-app/./node_modules/lodash/_nativeKeys.js","webpack://decidim-development-app/./node_modules/lodash/_nativeKeysIn.js","webpack://decidim-development-app/./node_modules/lodash/_nodeUtil.js","webpack://decidim-development-app/./node_modules/lodash/_objectToString.js","webpack://decidim-development-app/./node_modules/lodash/_overArg.js","webpack://decidim-development-app/./node_modules/lodash/_overRest.js","webpack://decidim-development-app/./node_modules/lodash/_parent.js","webpack://decidim-development-app/./node_modules/lodash/_realNames.js","webpack://decidim-development-app/./node_modules/lodash/_reorder.js","webpack://decidim-development-app/./node_modules/lodash/_replaceHolders.js","webpack://decidim-development-app/./node_modules/lodash/_root.js","webpack://decidim-development-app/./node_modules/lodash/_safeGet.js","webpack://decidim-development-app/./node_modules/lodash/_setCacheAdd.js","webpack://decidim-development-app/./node_modules/lodash/_setCacheHas.js","webpack://decidim-development-app/./node_modules/lodash/_setData.js","webpack://decidim-development-app/./node_modules/lodash/_setToArray.js","webpack://decidim-development-app/./node_modules/lodash/_setToString.js","webpack://decidim-development-app/./node_modules/lodash/_setWrapToString.js","webpack://decidim-development-app/./node_modules/lodash/_shortOut.js","webpack://decidim-development-app/./node_modules/lodash/_stackClear.js","webpack://decidim-development-app/./node_modules/lodash/_stackDelete.js","webpack://decidim-development-app/./node_modules/lodash/_stackGet.js","webpack://decidim-development-app/./node_modules/lodash/_stackHas.js","webpack://decidim-development-app/./node_modules/lodash/_stackSet.js","webpack://decidim-development-app/./node_modules/lodash/_strictIndexOf.js","webpack://decidim-development-app/./node_modules/lodash/_stringToPath.js","webpack://decidim-development-app/./node_modules/lodash/_toKey.js","webpack://decidim-development-app/./node_modules/lodash/_toSource.js","webpack://decidim-development-app/./node_modules/lodash/_trimmedEndIndex.js","webpack://decidim-development-app/./node_modules/lodash/_updateWrapDetails.js","webpack://decidim-development-app/./node_modules/lodash/_wrapperClone.js","webpack://decidim-development-app/./node_modules/lodash/assign.js","webpack://decidim-development-app/./node_modules/lodash/clone.js","webpack://decidim-development-app/./node_modules/lodash/constant.js","webpack://decidim-development-app/./node_modules/lodash/eq.js","webpack://decidim-development-app/./node_modules/lodash/fill.js","webpack://decidim-development-app/./node_modules/lodash/flatten.js","webpack://decidim-development-app/./node_modules/lodash/hasIn.js","webpack://decidim-development-app/./node_modules/lodash/identity.js","webpack://decidim-development-app/./node_modules/lodash/intersection.js","webpack://decidim-development-app/./node_modules/lodash/isArguments.js","webpack://decidim-development-app/./node_modules/lodash/isArray.js","webpack://decidim-development-app/./node_modules/lodash/isArrayLike.js","webpack://decidim-development-app/./node_modules/lodash/isArrayLikeObject.js","webpack://decidim-development-app/./node_modules/lodash/isBuffer.js","webpack://decidim-development-app/./node_modules/lodash/isFunction.js","webpack://decidim-development-app/./node_modules/lodash/isLength.js","webpack://decidim-development-app/./node_modules/lodash/isMap.js","webpack://decidim-development-app/./node_modules/lodash/isObject.js","webpack://decidim-development-app/./node_modules/lodash/isObjectLike.js","webpack://decidim-development-app/./node_modules/lodash/isPlainObject.js","webpack://decidim-development-app/./node_modules/lodash/isSet.js","webpack://decidim-development-app/./node_modules/lodash/isSymbol.js","webpack://decidim-development-app/./node_modules/lodash/isTypedArray.js","webpack://decidim-development-app/./node_modules/lodash/keys.js","webpack://decidim-development-app/./node_modules/lodash/keysIn.js","webpack://decidim-development-app/./node_modules/lodash/last.js","webpack://decidim-development-app/./node_modules/lodash/memoize.js","webpack://decidim-development-app/./node_modules/lodash/merge.js","webpack://decidim-development-app/./node_modules/lodash/noop.js","webpack://decidim-development-app/./node_modules/lodash/omit.js","webpack://decidim-development-app/./node_modules/lodash/partialRight.js","webpack://decidim-development-app/./node_modules/lodash/pick.js","webpack://decidim-development-app/./node_modules/lodash/stubArray.js","webpack://decidim-development-app/./node_modules/lodash/stubFalse.js","webpack://decidim-development-app/./node_modules/lodash/toFinite.js","webpack://decidim-development-app/./node_modules/lodash/toInteger.js","webpack://decidim-development-app/./node_modules/lodash/toLength.js","webpack://decidim-development-app/./node_modules/lodash/toNumber.js","webpack://decidim-development-app/./node_modules/lodash/toPlainObject.js","webpack://decidim-development-app/./node_modules/lodash/toString.js","webpack://decidim-development-app/./node_modules/lodash/uniq.js","webpack://decidim-development-app/./node_modules/lodash/wrapperLodash.js","webpack://decidim-development-app/./node_modules/node-forge/lib/aes.js","webpack://decidim-development-app/./node_modules/node-forge/lib/asn1.js","webpack://decidim-development-app/./node_modules/node-forge/lib/baseN.js","webpack://decidim-development-app/./node_modules/node-forge/lib/cipher.js","webpack://decidim-development-app/./node_modules/node-forge/lib/cipherModes.js","webpack://decidim-development-app/./node_modules/node-forge/lib/des.js","webpack://decidim-development-app/./node_modules/node-forge/lib/forge.js","webpack://decidim-development-app/./node_modules/node-forge/lib/hmac.js","webpack://decidim-development-app/./node_modules/node-forge/lib/jsbn.js","webpack://decidim-development-app/./node_modules/node-forge/lib/md.js","webpack://decidim-development-app/./node_modules/node-forge/lib/mgf.js","webpack://decidim-development-app/./node_modules/node-forge/lib/mgf1.js","webpack://decidim-development-app/./node_modules/node-forge/lib/oids.js","webpack://decidim-development-app/./node_modules/node-forge/lib/pbe.js","webpack://decidim-development-app/./node_modules/node-forge/lib/pbkdf2.js","webpack://decidim-development-app/./node_modules/node-forge/lib/pem.js","webpack://decidim-development-app/./node_modules/node-forge/lib/pkcs1.js","webpack://decidim-development-app/./node_modules/node-forge/lib/pkcs12.js","webpack://decidim-development-app/./node_modules/node-forge/lib/pkcs7.js","webpack://decidim-development-app/./node_modules/node-forge/lib/pkcs7asn1.js","webpack://decidim-development-app/./node_modules/node-forge/lib/pki.js","webpack://decidim-development-app/./node_modules/node-forge/lib/prime.js","webpack://decidim-development-app/./node_modules/node-forge/lib/prng.js","webpack://decidim-development-app/./node_modules/node-forge/lib/pss.js","webpack://decidim-development-app/./node_modules/node-forge/lib/random.js","webpack://decidim-development-app/./node_modules/node-forge/lib/rc2.js","webpack://decidim-development-app/./node_modules/node-forge/lib/rsa.js","webpack://decidim-development-app/./node_modules/node-forge/lib/sha1.js","webpack://decidim-development-app/./node_modules/node-forge/lib/sha256.js","webpack://decidim-development-app/./node_modules/node-forge/lib/sha512.js","webpack://decidim-development-app/./node_modules/node-forge/lib/util.js","webpack://decidim-development-app/./node_modules/node-forge/lib/x509.js","webpack://decidim-development-app/./node_modules/node-jose/lib/algorithms/aes-cbc-hmac-sha2.js","webpack://decidim-development-app/./node_modules/node-jose/lib/algorithms/aes-gcm.js","webpack://decidim-development-app/./node_modules/node-jose/lib/algorithms/aes-kw.js","webpack://decidim-development-app/./node_modules/node-jose/lib/algorithms/concat.js","webpack://decidim-development-app/./node_modules/node-jose/lib/algorithms/constants.js","webpack://decidim-development-app/./node_modules/node-jose/lib/algorithms/dir.js","webpack://decidim-development-app/./node_modules/node-jose/lib/algorithms/ec-util.js","webpack://decidim-development-app/./node_modules/node-jose/lib/algorithms/ecdh.js","webpack://decidim-development-app/./node_modules/node-jose/lib/algorithms/ecdsa.js","webpack://decidim-development-app/./node_modules/node-jose/lib/algorithms/helpers.js","webpack://decidim-development-app/./node_modules/node-jose/lib/algorithms/hkdf.js","webpack://decidim-development-app/./node_modules/node-jose/lib/algorithms/hmac.js","webpack://decidim-development-app/./node_modules/node-jose/lib/algorithms/index.js","webpack://decidim-development-app/./node_modules/node-jose/lib/algorithms/pbes2.js","webpack://decidim-development-app/./node_modules/node-jose/lib/algorithms/rsa-util.js","webpack://decidim-development-app/./node_modules/node-jose/lib/algorithms/rsaes.js","webpack://decidim-development-app/./node_modules/node-jose/lib/algorithms/rsassa.js","webpack://decidim-development-app/./node_modules/node-jose/lib/algorithms/sha.js","webpack://decidim-development-app/./node_modules/node-jose/lib/deps/ciphermodes/gcm/helpers.js","webpack://decidim-development-app/./node_modules/node-jose/lib/deps/ciphermodes/gcm/index.js","webpack://decidim-development-app/./node_modules/node-jose/lib/deps/ciphermodes/gcm/multipliers.js","webpack://decidim-development-app/./node_modules/node-jose/lib/deps/ciphermodes/helpers.js","webpack://decidim-development-app/./node_modules/node-jose/lib/deps/ciphermodes/pack.js","webpack://decidim-development-app/./node_modules/node-jose/lib/deps/ecc/curves.js","webpack://decidim-development-app/./node_modules/node-jose/lib/deps/ecc/index.js","webpack://decidim-development-app/./node_modules/node-jose/lib/deps/ecc/math.js","webpack://decidim-development-app/./node_modules/node-jose/lib/deps/forge.js","webpack://decidim-development-app/./node_modules/node-jose/lib/jwe/decrypt.js","webpack://decidim-development-app/./node_modules/node-jose/lib/jwe/defaults.js","webpack://decidim-development-app/./node_modules/node-jose/lib/jwe/encrypt.js","webpack://decidim-development-app/./node_modules/node-jose/lib/jwe/helpers.js","webpack://decidim-development-app/./node_modules/node-jose/lib/jwe/index.js","webpack://decidim-development-app/./node_modules/node-jose/lib/jwk/basekey.js","webpack://decidim-development-app/./node_modules/node-jose/lib/jwk/constants.js","webpack://decidim-development-app/./node_modules/node-jose/lib/jwk/eckey.js","webpack://decidim-development-app/./node_modules/node-jose/lib/jwk/helpers.js","webpack://decidim-development-app/./node_modules/node-jose/lib/jwk/index.js","webpack://decidim-development-app/./node_modules/node-jose/lib/jwk/keystore.js","webpack://decidim-development-app/./node_modules/node-jose/lib/jwk/octkey.js","webpack://decidim-development-app/./node_modules/node-jose/lib/jwk/rsakey.js","webpack://decidim-development-app/./node_modules/node-jose/lib/jws/defaults.js","webpack://decidim-development-app/./node_modules/node-jose/lib/jws/helpers.js","webpack://decidim-development-app/./node_modules/node-jose/lib/jws/index.js","webpack://decidim-development-app/./node_modules/node-jose/lib/jws/sign.js","webpack://decidim-development-app/./node_modules/node-jose/lib/jws/verify.js","webpack://decidim-development-app/./node_modules/node-jose/lib/parse/compact.js","webpack://decidim-development-app/./node_modules/node-jose/lib/parse/index.js","webpack://decidim-development-app/./node_modules/node-jose/lib/parse/json.js","webpack://decidim-development-app/./node_modules/node-jose/lib/util/algconfig.js","webpack://decidim-development-app/./node_modules/node-jose/lib/util/base64url.js","webpack://decidim-development-app/./node_modules/node-jose/lib/util/databuffer.js","webpack://decidim-development-app/./node_modules/node-jose/lib/util/index.js","webpack://decidim-development-app/./node_modules/node-jose/lib/util/merge.js","webpack://decidim-development-app/./node_modules/node-jose/lib/util/utf8.js","webpack://decidim-development-app/./node_modules/pako/index.js","webpack://decidim-development-app/./node_modules/pako/lib/deflate.js","webpack://decidim-development-app/./node_modules/pako/lib/inflate.js","webpack://decidim-development-app/./node_modules/pako/lib/utils/common.js","webpack://decidim-development-app/./node_modules/pako/lib/utils/strings.js","webpack://decidim-development-app/./node_modules/pako/lib/zlib/adler32.js","webpack://decidim-development-app/./node_modules/pako/lib/zlib/constants.js","webpack://decidim-development-app/./node_modules/pako/lib/zlib/crc32.js","webpack://decidim-development-app/./node_modules/pako/lib/zlib/deflate.js","webpack://decidim-development-app/./node_modules/pako/lib/zlib/gzheader.js","webpack://decidim-development-app/./node_modules/pako/lib/zlib/inffast.js","webpack://decidim-development-app/./node_modules/pako/lib/zlib/inflate.js","webpack://decidim-development-app/./node_modules/pako/lib/zlib/inftrees.js","webpack://decidim-development-app/./node_modules/pako/lib/zlib/messages.js","webpack://decidim-development-app/./node_modules/pako/lib/zlib/trees.js","webpack://decidim-development-app/./node_modules/pako/lib/zlib/zstream.js","webpack://decidim-development-app/./node_modules/process/browser.js","webpack://decidim-development-app/./node_modules/uuid/index.js","webpack://decidim-development-app/./node_modules/uuid/lib/bytesToUuid.js","webpack://decidim-development-app/./node_modules/uuid/lib/rng-browser.js","webpack://decidim-development-app/./node_modules/uuid/v1.js","webpack://decidim-development-app/./node_modules/uuid/v4.js","webpack://decidim-development-app/./node_modules/long/umd/index.js"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar pad_string_1 = require(\"./pad-string\");\nfunction encode(input, encoding) {\n    if (encoding === void 0) { encoding = \"utf8\"; }\n    if (Buffer.isBuffer(input)) {\n        return fromBase64(input.toString(\"base64\"));\n    }\n    return fromBase64(Buffer.from(input, encoding).toString(\"base64\"));\n}\n;\nfunction decode(base64url, encoding) {\n    if (encoding === void 0) { encoding = \"utf8\"; }\n    return Buffer.from(toBase64(base64url), \"base64\").toString(encoding);\n}\nfunction toBase64(base64url) {\n    base64url = base64url.toString();\n    return pad_string_1.default(base64url)\n        .replace(/\\-/g, \"+\")\n        .replace(/_/g, \"/\");\n}\nfunction fromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction toBuffer(base64url) {\n    return Buffer.from(toBase64(base64url), \"base64\");\n}\nvar base64url = encode;\nbase64url.encode = encode;\nbase64url.decode = decode;\nbase64url.toBase64 = toBase64;\nbase64url.fromBase64 = fromBase64;\nbase64url.toBuffer = toBuffer;\nexports.default = base64url;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction padString(input) {\n    var segmentLength = 4;\n    var stringLength = input.length;\n    var diff = stringLength % segmentLength;\n    if (!diff) {\n        return input;\n    }\n    var position = stringLength;\n    var padLength = segmentLength - diff;\n    var paddedStringLength = stringLength + padLength;\n    var buffer = Buffer.alloc(paddedStringLength);\n    buffer.write(input);\n    while (padLength--) {\n        buffer.write(\"=\", position++);\n    }\n    return buffer.toString();\n}\nexports.default = padString;\n","module.exports = require('./dist/base64url').default;\nmodule.exports.default = module.exports;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.8+1e68dce6\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    var then$$1 = void 0;\n    try {\n      then$$1 = value.then;\n    } catch (error) {\n      reject(promise, error);\n      return;\n    }\n    handleMaybeThenable(promise, value, then$$1);\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = true;\n\n  if (hasCallback) {\n    try {\n      value = callback(detail);\n    } catch (e) {\n      succeeded = false;\n      error = e;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (succeeded === false) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = void 0;\n      var error = void 0;\n      var didError = false;\n      try {\n        _then = entry.then;\n      } catch (e) {\n        didError = true;\n        error = e;\n      }\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        if (didError) {\n          reject(promise, error);\n        } else {\n          handleMaybeThenable(promise, entry, _then);\n        }\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    if (isFunction(callback)) {\n      return promise.then(function (value) {\n        return constructor.resolve(callback()).then(function () {\n          return value;\n        });\n      }, function (reason) {\n        return constructor.resolve(callback()).then(function () {\n          throw reason;\n        });\n      });\n    }\n\n    return promise.then(callback, callback);\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n//# sourceMappingURL=es6-promise.map\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var baseCreate = require('./_baseCreate'),\n    baseLodash = require('./_baseLodash');\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n *\n * @private\n * @constructor\n * @param {*} value The value to wrap.\n */\nfunction LazyWrapper(value) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__dir__ = 1;\n  this.__filtered__ = false;\n  this.__iteratees__ = [];\n  this.__takeCount__ = MAX_ARRAY_LENGTH;\n  this.__views__ = [];\n}\n\n// Ensure `LazyWrapper` is an instance of `baseLodash`.\nLazyWrapper.prototype = baseCreate(baseLodash.prototype);\nLazyWrapper.prototype.constructor = LazyWrapper;\n\nmodule.exports = LazyWrapper;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var baseCreate = require('./_baseCreate'),\n    baseLodash = require('./_baseLodash');\n\n/**\n * The base constructor for creating `lodash` wrapper objects.\n *\n * @private\n * @param {*} value The value to wrap.\n * @param {boolean} [chainAll] Enable explicit method chain sequences.\n */\nfunction LodashWrapper(value, chainAll) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__chain__ = !!chainAll;\n  this.__index__ = 0;\n  this.__values__ = undefined;\n}\n\nLodashWrapper.prototype = baseCreate(baseLodash.prototype);\nLodashWrapper.prototype.constructor = LodashWrapper;\n\nmodule.exports = LodashWrapper;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;\n","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n","/**\n * The base implementation of `_.clamp` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n */\nfunction baseClamp(number, lower, upper) {\n  if (number === number) {\n    if (upper !== undefined) {\n      number = number <= upper ? number : upper;\n    }\n    if (lower !== undefined) {\n      number = number >= lower ? number : lower;\n    }\n  }\n  return number;\n}\n\nmodule.exports = baseClamp;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n","var toInteger = require('./toInteger'),\n    toLength = require('./toLength');\n\n/**\n * The base implementation of `_.fill` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to fill.\n * @param {*} value The value to fill `array` with.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns `array`.\n */\nfunction baseFill(array, value, start, end) {\n  var length = array.length;\n\n  start = toInteger(start);\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = (end === undefined || end > length) ? length : toInteger(end);\n  if (end < 0) {\n    end += length;\n  }\n  end = start > end ? 0 : toLength(end);\n  while (start < end) {\n    array[start++] = value;\n  }\n  return array;\n}\n\nmodule.exports = baseFill;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","/**\n * The function whose prototype chain sequence wrappers inherit from.\n *\n * @private\n */\nfunction baseLodash() {\n  // No operation performed.\n}\n\nmodule.exports = baseLodash;\n","var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;\n","var assignMergeValue = require('./_assignMergeValue'),\n    cloneBuffer = require('./_cloneBuffer'),\n    cloneTypedArray = require('./_cloneTypedArray'),\n    copyArray = require('./_copyArray'),\n    initCloneObject = require('./_initCloneObject'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isPlainObject = require('./isPlainObject'),\n    isTypedArray = require('./isTypedArray'),\n    safeGet = require('./_safeGet'),\n    toPlainObject = require('./toPlainObject');\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;\n","var basePickBy = require('./_basePickBy'),\n    hasIn = require('./hasIn');\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nmodule.exports = basePick;\n","var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n","var identity = require('./identity'),\n    metaMap = require('./_metaMap');\n\n/**\n * The base implementation of `setData` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to associate metadata with.\n * @param {*} data The metadata.\n * @returns {Function} Returns `func`.\n */\nvar baseSetData = !metaMap ? identity : function(func, data) {\n  metaMap.set(func, data);\n  return func;\n};\n\nmodule.exports = baseSetData;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n","var castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n","var root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates an array that is the composition of partially applied arguments,\n * placeholders, and provided arguments into a single array of arguments.\n *\n * @private\n * @param {Array} args The provided arguments.\n * @param {Array} partials The arguments to prepend to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @params {boolean} [isCurried] Specify composing for a curried function.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgs(args, partials, holders, isCurried) {\n  var argsIndex = -1,\n      argsLength = args.length,\n      holdersLength = holders.length,\n      leftIndex = -1,\n      leftLength = partials.length,\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\n      result = Array(leftLength + rangeLength),\n      isUncurried = !isCurried;\n\n  while (++leftIndex < leftLength) {\n    result[leftIndex] = partials[leftIndex];\n  }\n  while (++argsIndex < holdersLength) {\n    if (isUncurried || argsIndex < argsLength) {\n      result[holders[argsIndex]] = args[argsIndex];\n    }\n  }\n  while (rangeLength--) {\n    result[leftIndex++] = args[argsIndex++];\n  }\n  return result;\n}\n\nmodule.exports = composeArgs;\n","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This function is like `composeArgs` except that the arguments composition\n * is tailored for `_.partialRight`.\n *\n * @private\n * @param {Array} args The provided arguments.\n * @param {Array} partials The arguments to append to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @params {boolean} [isCurried] Specify composing for a curried function.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgsRight(args, partials, holders, isCurried) {\n  var argsIndex = -1,\n      argsLength = args.length,\n      holdersIndex = -1,\n      holdersLength = holders.length,\n      rightIndex = -1,\n      rightLength = partials.length,\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\n      result = Array(rangeLength + rightLength),\n      isUncurried = !isCurried;\n\n  while (++argsIndex < rangeLength) {\n    result[argsIndex] = args[argsIndex];\n  }\n  var offset = argsIndex;\n  while (++rightIndex < rightLength) {\n    result[offset + rightIndex] = partials[rightIndex];\n  }\n  while (++holdersIndex < holdersLength) {\n    if (isUncurried || argsIndex < argsLength) {\n      result[offset + holders[holdersIndex]] = args[argsIndex++];\n    }\n  }\n  return result;\n}\n\nmodule.exports = composeArgsRight;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/**\n * Gets the number of `placeholder` occurrences in `array`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} placeholder The placeholder to search for.\n * @returns {number} Returns the placeholder count.\n */\nfunction countHolders(array, placeholder) {\n  var length = array.length,\n      result = 0;\n\n  while (length--) {\n    if (array[length] === placeholder) {\n      ++result;\n    }\n  }\n  return result;\n}\n\nmodule.exports = countHolders;\n","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var createCtor = require('./_createCtor'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the optional `this`\n * binding of `thisArg`.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createBind(func, bitmask, thisArg) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return fn.apply(isBind ? thisArg : this, arguments);\n  }\n  return wrapper;\n}\n\nmodule.exports = createBind;\n","var baseCreate = require('./_baseCreate'),\n    isObject = require('./isObject');\n\n/**\n * Creates a function that produces an instance of `Ctor` regardless of\n * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n *\n * @private\n * @param {Function} Ctor The constructor to wrap.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCtor(Ctor) {\n  return function() {\n    // Use a `switch` statement to work with class constructors. See\n    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n    // for more details.\n    var args = arguments;\n    switch (args.length) {\n      case 0: return new Ctor;\n      case 1: return new Ctor(args[0]);\n      case 2: return new Ctor(args[0], args[1]);\n      case 3: return new Ctor(args[0], args[1], args[2]);\n      case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n    }\n    var thisBinding = baseCreate(Ctor.prototype),\n        result = Ctor.apply(thisBinding, args);\n\n    // Mimic the constructor's `return` behavior.\n    // See https://es5.github.io/#x13.2.2 for more details.\n    return isObject(result) ? result : thisBinding;\n  };\n}\n\nmodule.exports = createCtor;\n","var apply = require('./_apply'),\n    createCtor = require('./_createCtor'),\n    createHybrid = require('./_createHybrid'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n\n/**\n * Creates a function that wraps `func` to enable currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {number} arity The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCurry(func, bitmask, arity) {\n  var Ctor = createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length,\n        placeholder = getHolder(wrapper);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n      ? []\n      : replaceHolders(args, placeholder);\n\n    length -= holders.length;\n    if (length < arity) {\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, undefined,\n        args, holders, undefined, undefined, arity - length);\n    }\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return apply(fn, this, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createCurry;\n","var composeArgs = require('./_composeArgs'),\n    composeArgsRight = require('./_composeArgsRight'),\n    countHolders = require('./_countHolders'),\n    createCtor = require('./_createCtor'),\n    createRecurry = require('./_createRecurry'),\n    getHolder = require('./_getHolder'),\n    reorder = require('./_reorder'),\n    replaceHolders = require('./_replaceHolders'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_ARY_FLAG = 128,\n    WRAP_FLIP_FLAG = 512;\n\n/**\n * Creates a function that wraps `func` to invoke it with optional `this`\n * binding of `thisArg`, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided\n *  to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & WRAP_ARY_FLAG,\n      isBind = bitmask & WRAP_BIND_FLAG,\n      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n      isFlip = bitmask & WRAP_FLIP_FLAG,\n      Ctor = isBindKey ? undefined : createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length;\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    if (isCurried) {\n      var placeholder = getHolder(wrapper),\n          holdersCount = countHolders(args, placeholder);\n    }\n    if (partials) {\n      args = composeArgs(args, partials, holders, isCurried);\n    }\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n    }\n    length -= holdersCount;\n    if (isCurried && length < arity) {\n      var newHolders = replaceHolders(args, placeholder);\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n        args, newHolders, argPos, ary, arity - length\n      );\n    }\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n\n    length = args.length;\n    if (argPos) {\n      args = reorder(args, argPos);\n    } else if (isFlip && length > 1) {\n      args.reverse();\n    }\n    if (isAry && ary < length) {\n      args.length = ary;\n    }\n    if (this && this !== root && this instanceof wrapper) {\n      fn = Ctor || createCtor(fn);\n    }\n    return fn.apply(thisBinding, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createHybrid;\n","var apply = require('./_apply'),\n    createCtor = require('./_createCtor'),\n    root = require('./_root');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the `this` binding\n * of `thisArg` and `partials` prepended to the arguments it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} partials The arguments to prepend to those provided to\n *  the new function.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createPartial(func, bitmask, thisArg, partials) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var argsIndex = -1,\n        argsLength = arguments.length,\n        leftIndex = -1,\n        leftLength = partials.length,\n        args = Array(leftLength + argsLength),\n        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n    while (++leftIndex < leftLength) {\n      args[leftIndex] = partials[leftIndex];\n    }\n    while (argsLength--) {\n      args[leftIndex++] = arguments[++argsIndex];\n    }\n    return apply(fn, isBind ? thisArg : this, args);\n  }\n  return wrapper;\n}\n\nmodule.exports = createPartial;\n","var isLaziable = require('./_isLaziable'),\n    setData = require('./_setData'),\n    setWrapToString = require('./_setWrapToString');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_BOUND_FLAG = 4,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/**\n * Creates a function that wraps `func` to continue currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {Function} wrapFunc The function to create the `func` wrapper.\n * @param {*} placeholder The placeholder value.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n  var isCurry = bitmask & WRAP_CURRY_FLAG,\n      newHolders = isCurry ? holders : undefined,\n      newHoldersRight = isCurry ? undefined : holders,\n      newPartials = isCurry ? partials : undefined,\n      newPartialsRight = isCurry ? undefined : partials;\n\n  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n  }\n  var newData = [\n    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n    newHoldersRight, argPos, ary, arity\n  ];\n\n  var result = wrapFunc.apply(undefined, newData);\n  if (isLaziable(func)) {\n    setData(result, newData);\n  }\n  result.placeholder = placeholder;\n  return setWrapToString(result, func, bitmask);\n}\n\nmodule.exports = createRecurry;\n","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n","var baseSetData = require('./_baseSetData'),\n    createBind = require('./_createBind'),\n    createCurry = require('./_createCurry'),\n    createHybrid = require('./_createHybrid'),\n    createPartial = require('./_createPartial'),\n    getData = require('./_getData'),\n    mergeData = require('./_mergeData'),\n    setData = require('./_setData'),\n    setWrapToString = require('./_setWrapToString'),\n    toInteger = require('./toInteger');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that either curries or invokes `func` with optional\n * `this` binding and partially applied arguments.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags.\n *    1 - `_.bind`\n *    2 - `_.bindKey`\n *    4 - `_.curry` or `_.curryRight` of a bound function\n *    8 - `_.curry`\n *   16 - `_.curryRight`\n *   32 - `_.partial`\n *   64 - `_.partialRight`\n *  128 - `_.rearg`\n *  256 - `_.ary`\n *  512 - `_.flip`\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to be partially applied.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n  if (!isBindKey && typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var length = partials ? partials.length : 0;\n  if (!length) {\n    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n    partials = holders = undefined;\n  }\n  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n  arity = arity === undefined ? arity : toInteger(arity);\n  length -= holders ? holders.length : 0;\n\n  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n    var partialsRight = partials,\n        holdersRight = holders;\n\n    partials = holders = undefined;\n  }\n  var data = isBindKey ? undefined : getData(func);\n\n  var newData = [\n    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n    argPos, ary, arity\n  ];\n\n  if (data) {\n    mergeData(newData, data);\n  }\n  func = newData[0];\n  bitmask = newData[1];\n  thisArg = newData[2];\n  partials = newData[3];\n  holders = newData[4];\n  arity = newData[9] = newData[9] === undefined\n    ? (isBindKey ? 0 : func.length)\n    : nativeMax(newData[9] - length, 0);\n\n  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n  }\n  if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n    var result = createBind(func, bitmask, thisArg);\n  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n    result = createCurry(func, bitmask, arity);\n  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n    result = createPartial(func, bitmask, thisArg, partials);\n  } else {\n    result = createHybrid.apply(undefined, newData);\n  }\n  var setter = data ? baseSetData : setData;\n  return setWrapToString(setter(result, newData), func, bitmask);\n}\n\nmodule.exports = createWrap;\n","var isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var metaMap = require('./_metaMap'),\n    noop = require('./noop');\n\n/**\n * Gets metadata for `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {*} Returns the metadata for `func`.\n */\nvar getData = !metaMap ? noop : function(func) {\n  return metaMap.get(func);\n};\n\nmodule.exports = getData;\n","var realNames = require('./_realNames');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the name of `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {string} Returns the function name.\n */\nfunction getFuncName(func) {\n  var result = (func.name + ''),\n      array = realNames[result],\n      length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n  while (length--) {\n    var data = array[length],\n        otherFunc = data.func;\n    if (otherFunc == null || otherFunc == func) {\n      return data.name;\n    }\n  }\n  return result;\n}\n\nmodule.exports = getFuncName;\n","/**\n * Gets the argument placeholder value for `func`.\n *\n * @private\n * @param {Function} func The function to inspect.\n * @returns {*} Returns the placeholder value.\n */\nfunction getHolder(func) {\n  var object = func;\n  return object.placeholder;\n}\n\nmodule.exports = getHolder;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","/** Used to match wrap detail comments. */\nvar reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n    reSplitDetails = /,? & /;\n\n/**\n * Extracts wrapper details from the `source` body comment.\n *\n * @private\n * @param {string} source The source to inspect.\n * @returns {Array} Returns the wrapper details.\n */\nfunction getWrapDetails(source) {\n  var match = source.match(reWrapDetails);\n  return match ? match[1].split(reSplitDetails) : [];\n}\n\nmodule.exports = getWrapDetails;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n","/** Used to match wrap detail comments. */\nvar reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/;\n\n/**\n * Inserts wrapper `details` in a comment at the top of the `source` body.\n *\n * @private\n * @param {string} source The source to modify.\n * @returns {Array} details The details to insert.\n * @returns {string} Returns the modified source.\n */\nfunction insertWrapDetails(source, details) {\n  var length = details.length;\n  if (!length) {\n    return source;\n  }\n  var lastIndex = length - 1;\n  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n  details = details.join(length > 2 ? ', ' : ' ');\n  return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n}\n\nmodule.exports = insertWrapDetails;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var LazyWrapper = require('./_LazyWrapper'),\n    getData = require('./_getData'),\n    getFuncName = require('./_getFuncName'),\n    lodash = require('./wrapperLodash');\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n *  else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func),\n      other = lodash[funcName];\n\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n    return false;\n  }\n  if (func === other) {\n    return true;\n  }\n  var data = getData(other);\n  return !!data && func === data[0];\n}\n\nmodule.exports = isLaziable;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var composeArgs = require('./_composeArgs'),\n    composeArgsRight = require('./_composeArgsRight'),\n    replaceHolders = require('./_replaceHolders');\n\n/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_BOUND_FLAG = 4,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Merges the function metadata of `source` into `data`.\n *\n * Merging metadata reduces the number of wrappers used to invoke a function.\n * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n * may be applied regardless of execution order. Methods like `_.ary` and\n * `_.rearg` modify function arguments, making the order in which they are\n * executed important, preventing the merging of metadata. However, we make\n * an exception for a safe combined case where curried functions have `_.ary`\n * and or `_.rearg` applied.\n *\n * @private\n * @param {Array} data The destination metadata.\n * @param {Array} source The source metadata.\n * @returns {Array} Returns `data`.\n */\nfunction mergeData(data, source) {\n  var bitmask = data[1],\n      srcBitmask = source[1],\n      newBitmask = bitmask | srcBitmask,\n      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n  var isCombo =\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n  // Exit early if metadata can't be merged.\n  if (!(isCommon || isCombo)) {\n    return data;\n  }\n  // Use source `thisArg` if available.\n  if (srcBitmask & WRAP_BIND_FLAG) {\n    data[2] = source[2];\n    // Set when currying a bound function.\n    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n  }\n  // Compose partial arguments.\n  var value = source[3];\n  if (value) {\n    var partials = data[3];\n    data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n  }\n  // Compose partial right arguments.\n  value = source[5];\n  if (value) {\n    partials = data[5];\n    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n  }\n  // Use source `argPos` if available.\n  value = source[7];\n  if (value) {\n    data[7] = value;\n  }\n  // Use source `ary` if it's smaller.\n  if (srcBitmask & WRAP_ARY_FLAG) {\n    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n  }\n  // Use source `arity` if one is not provided.\n  if (data[9] == null) {\n    data[9] = source[9];\n  }\n  // Use source `func` and merge bitmasks.\n  data[0] = source[0];\n  data[1] = newBitmask;\n\n  return data;\n}\n\nmodule.exports = mergeData;\n","var WeakMap = require('./_WeakMap');\n\n/** Used to store function metadata. */\nvar metaMap = WeakMap && new WeakMap;\n\nmodule.exports = metaMap;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","var baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n","/** Used to lookup unminified function names. */\nvar realNames = {};\n\nmodule.exports = realNames;\n","var copyArray = require('./_copyArray'),\n    isIndex = require('./_isIndex');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Reorder `array` according to the specified indexes where the element at\n * the first index is assigned as the first element, the element at\n * the second index is assigned as the second element, and so on.\n *\n * @private\n * @param {Array} array The array to reorder.\n * @param {Array} indexes The arranged array indexes.\n * @returns {Array} Returns `array`.\n */\nfunction reorder(array, indexes) {\n  var arrLength = array.length,\n      length = nativeMin(indexes.length, arrLength),\n      oldArray = copyArray(array);\n\n  while (length--) {\n    var index = indexes[length];\n    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n  }\n  return array;\n}\n\nmodule.exports = reorder;\n","/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/**\n * Replaces all `placeholder` elements in `array` with an internal placeholder\n * and returns an array of their indexes.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {*} placeholder The placeholder to replace.\n * @returns {Array} Returns the new array of placeholder indexes.\n */\nfunction replaceHolders(array, placeholder) {\n  var index = -1,\n      length = array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value === placeholder || value === PLACEHOLDER) {\n      array[index] = PLACEHOLDER;\n      result[resIndex++] = index;\n    }\n  }\n  return result;\n}\n\nmodule.exports = replaceHolders;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nmodule.exports = safeGet;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","var baseSetData = require('./_baseSetData'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets metadata for `func`.\n *\n * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n * period of time, it will trip its breaker and transition to an identity\n * function to avoid garbage collection pauses in V8. See\n * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n * for more details.\n *\n * @private\n * @param {Function} func The function to associate metadata with.\n * @param {*} data The metadata.\n * @returns {Function} Returns `func`.\n */\nvar setData = shortOut(baseSetData);\n\nmodule.exports = setData;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var getWrapDetails = require('./_getWrapDetails'),\n    insertWrapDetails = require('./_insertWrapDetails'),\n    setToString = require('./_setToString'),\n    updateWrapDetails = require('./_updateWrapDetails');\n\n/**\n * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n * with wrapper details in a comment at the top of the source body.\n *\n * @private\n * @param {Function} wrapper The function to modify.\n * @param {Function} reference The reference function.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Function} Returns `wrapper`.\n */\nfunction setWrapToString(wrapper, reference, bitmask) {\n  var source = (reference + '');\n  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n}\n\nmodule.exports = setWrapToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var arrayEach = require('./_arrayEach'),\n    arrayIncludes = require('./_arrayIncludes');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256,\n    WRAP_FLIP_FLAG = 512;\n\n/** Used to associate wrap methods with their bit flags. */\nvar wrapFlags = [\n  ['ary', WRAP_ARY_FLAG],\n  ['bind', WRAP_BIND_FLAG],\n  ['bindKey', WRAP_BIND_KEY_FLAG],\n  ['curry', WRAP_CURRY_FLAG],\n  ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n  ['flip', WRAP_FLIP_FLAG],\n  ['partial', WRAP_PARTIAL_FLAG],\n  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n  ['rearg', WRAP_REARG_FLAG]\n];\n\n/**\n * Updates wrapper `details` based on `bitmask` flags.\n *\n * @private\n * @returns {Array} details The details to modify.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Array} Returns `details`.\n */\nfunction updateWrapDetails(details, bitmask) {\n  arrayEach(wrapFlags, function(pair) {\n    var value = '_.' + pair[0];\n    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n      details.push(value);\n    }\n  });\n  return details.sort();\n}\n\nmodule.exports = updateWrapDetails;\n","var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    copyArray = require('./_copyArray');\n\n/**\n * Creates a clone of `wrapper`.\n *\n * @private\n * @param {Object} wrapper The wrapper to clone.\n * @returns {Object} Returns the cloned wrapper.\n */\nfunction wrapperClone(wrapper) {\n  if (wrapper instanceof LazyWrapper) {\n    return wrapper.clone();\n  }\n  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n  result.__actions__ = copyArray(wrapper.__actions__);\n  result.__index__  = wrapper.__index__;\n  result.__values__ = wrapper.__values__;\n  return result;\n}\n\nmodule.exports = wrapperClone;\n","var assignValue = require('./_assignValue'),\n    copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    isArrayLike = require('./isArrayLike'),\n    isPrototype = require('./_isPrototype'),\n    keys = require('./keys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nmodule.exports = assign;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = clone;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var baseFill = require('./_baseFill'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Fills elements of `array` with `value` from `start` up to, but not\n * including, `end`.\n *\n * **Note:** This method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Array\n * @param {Array} array The array to fill.\n * @param {*} value The value to fill `array` with.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _.fill(array, 'a');\n * console.log(array);\n * // => ['a', 'a', 'a']\n *\n * _.fill(Array(3), 2);\n * // => [2, 2, 2]\n *\n * _.fill([4, 6, 8, 10], '*', 1, 3);\n * // => [4, '*', '*', 10]\n */\nfunction fill(array, value, start, end) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n    start = 0;\n    end = length;\n  }\n  return baseFill(array, value, start, end);\n}\n\nmodule.exports = fill;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nmodule.exports = merge;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","var arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n","var baseRest = require('./_baseRest'),\n    createWrap = require('./_createWrap'),\n    getHolder = require('./_getHolder'),\n    replaceHolders = require('./_replaceHolders');\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/**\n * This method is like `_.partial` except that partially applied arguments\n * are appended to the arguments it receives.\n *\n * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n * builds, may be used as a placeholder for partially applied arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of partially\n * applied functions.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Function\n * @param {Function} func The function to partially apply arguments to.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new partially applied function.\n * @example\n *\n * function greet(greeting, name) {\n *   return greeting + ' ' + name;\n * }\n *\n * var greetFred = _.partialRight(greet, 'fred');\n * greetFred('hi');\n * // => 'hi fred'\n *\n * // Partially applied with placeholders.\n * var sayHelloTo = _.partialRight(greet, 'hello', _);\n * sayHelloTo('fred');\n * // => 'hello fred'\n */\nvar partialRight = baseRest(function(func, partials) {\n  var holders = replaceHolders(partials, getHolder(partialRight));\n  return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n});\n\n// Assign default placeholders.\npartialRight.placeholder = {};\n\nmodule.exports = partialRight;\n","var basePick = require('./_basePick'),\n    flatRest = require('./_flatRest');\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nmodule.exports = pick;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var baseClamp = require('./_baseClamp'),\n    toInteger = require('./toInteger');\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Converts `value` to an integer suitable for use as the length of an\n * array-like object.\n *\n * **Note:** This method is based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toLength(3.2);\n * // => 3\n *\n * _.toLength(Number.MIN_VALUE);\n * // => 0\n *\n * _.toLength(Infinity);\n * // => 4294967295\n *\n * _.toLength('3.2');\n * // => 3\n */\nfunction toLength(value) {\n  return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n}\n\nmodule.exports = toLength;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n","var LazyWrapper = require('./_LazyWrapper'),\n    LodashWrapper = require('./_LodashWrapper'),\n    baseLodash = require('./_baseLodash'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike'),\n    wrapperClone = require('./_wrapperClone');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a `lodash` object which wraps `value` to enable implicit method\n * chain sequences. Methods that operate on and return arrays, collections,\n * and functions can be chained together. Methods that retrieve a single value\n * or may return a primitive value will automatically end the chain sequence\n * and return the unwrapped value. Otherwise, the value must be unwrapped\n * with `_#value`.\n *\n * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n * enabled using `_.chain`.\n *\n * The execution of chained methods is lazy, that is, it's deferred until\n * `_#value` is implicitly or explicitly called.\n *\n * Lazy evaluation allows several methods to support shortcut fusion.\n * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n * the creation of intermediate arrays and can greatly reduce the number of\n * iteratee executions. Sections of a chain sequence qualify for shortcut\n * fusion if the section is applied to an array and iteratees accept only\n * one argument. The heuristic for whether a section qualifies for shortcut\n * fusion is subject to change.\n *\n * Chaining is supported in custom builds as long as the `_#value` method is\n * directly or indirectly included in the build.\n *\n * In addition to lodash methods, wrappers have `Array` and `String` methods.\n *\n * The wrapper `Array` methods are:\n * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n *\n * The wrapper `String` methods are:\n * `replace` and `split`\n *\n * The wrapper methods that support shortcut fusion are:\n * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n *\n * The chainable wrapper methods are:\n * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n * `zipObject`, `zipObjectDeep`, and `zipWith`\n *\n * The wrapper methods that are **not** chainable by default are:\n * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n * `upperFirst`, `value`, and `words`\n *\n * @name _\n * @constructor\n * @category Seq\n * @param {*} value The value to wrap in a `lodash` instance.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var wrapped = _([1, 2, 3]);\n *\n * // Returns an unwrapped value.\n * wrapped.reduce(_.add);\n * // => 6\n *\n * // Returns a wrapped value.\n * var squares = wrapped.map(square);\n *\n * _.isArray(squares);\n * // => false\n *\n * _.isArray(squares.value());\n * // => true\n */\nfunction lodash(value) {\n  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n    if (value instanceof LodashWrapper) {\n      return value;\n    }\n    if (hasOwnProperty.call(value, '__wrapped__')) {\n      return wrapperClone(value);\n    }\n  }\n  return new LodashWrapper(value);\n}\n\n// Ensure wrappers are instances of `baseLodash`.\nlodash.prototype = baseLodash.prototype;\nlodash.prototype.constructor = lodash;\n\nmodule.exports = lodash;\n","/**\n * Advanced Encryption Standard (AES) implementation.\n *\n * This implementation is based on the public domain library 'jscrypto' which\n * was written by:\n *\n * Emily Stark (estark@stanford.edu)\n * Mike Hamburg (mhamburg@stanford.edu)\n * Dan Boneh (dabo@cs.stanford.edu)\n *\n * Parts of this code are based on the OpenSSL implementation of AES:\n * http://www.openssl.org\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./cipher');\nrequire('./cipherModes');\nrequire('./util');\n\n/* AES API */\nmodule.exports = forge.aes = forge.aes || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new AES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the AES algorithm object.\n */\nforge.aes.Algorithm = function(name, mode) {\n  if(!init) {\n    initialize();\n  }\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 16,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this AES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.aes.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = options.key;\n  var tmp;\n\n  /* Note: The key may be a string of bytes, an array of bytes, a byte\n    buffer, or an array of 32-bit integers. If the key is in bytes, then\n    it must be 16, 24, or 32 bytes in length. If it is in 32-bit\n    integers, it must be 4, 6, or 8 integers long. */\n\n  if(typeof key === 'string' &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key string into byte buffer\n    key = forge.util.createBuffer(key);\n  } else if(forge.util.isArray(key) &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key integer array into byte buffer\n    tmp = key;\n    key = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      key.putByte(tmp[i]);\n    }\n  }\n\n  // convert key byte buffer into 32-bit integer array\n  if(!forge.util.isArray(key)) {\n    tmp = key;\n    key = [];\n\n    // key lengths of 16, 24, 32 bytes allowed\n    var len = tmp.length();\n    if(len === 16 || len === 24 || len === 32) {\n      len = len >>> 2;\n      for(var i = 0; i < len; ++i) {\n        key.push(tmp.getInt32());\n      }\n    }\n  }\n\n  // key must be an array of 32-bit integers by now\n  if(!forge.util.isArray(key) ||\n    !(key.length === 4 || key.length === 6 || key.length === 8)) {\n    throw new Error('Invalid key parameter.');\n  }\n\n  // encryption operation is always used for these modes\n  var mode = this.mode.name;\n  var encryptOp = (['CFB', 'OFB', 'CTR', 'GCM'].indexOf(mode) !== -1);\n\n  // do key expansion\n  this._w = _expandKey(key, options.decrypt && !encryptOp);\n  this._init = true;\n};\n\n/**\n * Expands a key. Typically only used for testing.\n *\n * @param key the symmetric key to expand, as an array of 32-bit words.\n * @param decrypt true to expand for decryption, false for encryption.\n *\n * @return the expanded key.\n */\nforge.aes._expandKey = function(key, decrypt) {\n  if(!init) {\n    initialize();\n  }\n  return _expandKey(key, decrypt);\n};\n\n/**\n * Updates a single block. Typically only used for testing.\n *\n * @param w the expanded key to use.\n * @param input an array of block-size 32-bit words.\n * @param output an array of block-size 32-bit words.\n * @param decrypt true to decrypt, false to encrypt.\n */\nforge.aes._updateBlock = _updateBlock;\n\n/** Register AES algorithms **/\n\nregisterAlgorithm('AES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('AES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('AES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('AES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('AES-CTR', forge.cipher.modes.ctr);\nregisterAlgorithm('AES-GCM', forge.cipher.modes.gcm);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.aes.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** AES implementation **/\n\nvar init = false; // not yet initialized\nvar Nb = 4;       // number of words comprising the state (AES = 4)\nvar sbox;         // non-linear substitution table used in key expansion\nvar isbox;        // inversion of sbox\nvar rcon;         // round constant word array\nvar mix;          // mix-columns table\nvar imix;         // inverse mix-columns table\n\n/**\n * Performs initialization, ie: precomputes tables to optimize for speed.\n *\n * One way to understand how AES works is to imagine that 'addition' and\n * 'multiplication' are interfaces that require certain mathematical\n * properties to hold true (ie: they are associative) but they might have\n * different implementations and produce different kinds of results ...\n * provided that their mathematical properties remain true. AES defines\n * its own methods of addition and multiplication but keeps some important\n * properties the same, ie: associativity and distributivity. The\n * explanation below tries to shed some light on how AES defines addition\n * and multiplication of bytes and 32-bit words in order to perform its\n * encryption and decryption algorithms.\n *\n * The basics:\n *\n * The AES algorithm views bytes as binary representations of polynomials\n * that have either 1 or 0 as the coefficients. It defines the addition\n * or subtraction of two bytes as the XOR operation. It also defines the\n * multiplication of two bytes as a finite field referred to as GF(2^8)\n * (Note: 'GF' means \"Galois Field\" which is a field that contains a finite\n * number of elements so GF(2^8) has 256 elements).\n *\n * This means that any two bytes can be represented as binary polynomials;\n * when they multiplied together and modularly reduced by an irreducible\n * polynomial of the 8th degree, the results are the field GF(2^8). The\n * specific irreducible polynomial that AES uses in hexadecimal is 0x11b.\n * This multiplication is associative with 0x01 as the identity:\n *\n * (b * 0x01 = GF(b, 0x01) = b).\n *\n * The operation GF(b, 0x02) can be performed at the byte level by left\n * shifting b once and then XOR'ing it (to perform the modular reduction)\n * with 0x11b if b is >= 128. Repeated application of the multiplication\n * of 0x02 can be used to implement the multiplication of any two bytes.\n *\n * For instance, multiplying 0x57 and 0x13, denoted as GF(0x57, 0x13), can\n * be performed by factoring 0x13 into 0x01, 0x02, and 0x10. Then these\n * factors can each be multiplied by 0x57 and then added together. To do\n * the multiplication, values for 0x57 multiplied by each of these 3 factors\n * can be precomputed and stored in a table. To add them, the values from\n * the table are XOR'd together.\n *\n * AES also defines addition and multiplication of words, that is 4-byte\n * numbers represented as polynomials of 3 degrees where the coefficients\n * are the values of the bytes.\n *\n * The word [a0, a1, a2, a3] is a polynomial a3x^3 + a2x^2 + a1x + a0.\n *\n * Addition is performed by XOR'ing like powers of x. Multiplication\n * is performed in two steps, the first is an algebriac expansion as\n * you would do normally (where addition is XOR). But the result is\n * a polynomial larger than 3 degrees and thus it cannot fit in a word. So\n * next the result is modularly reduced by an AES-specific polynomial of\n * degree 4 which will always produce a polynomial of less than 4 degrees\n * such that it will fit in a word. In AES, this polynomial is x^4 + 1.\n *\n * The modular product of two polynomials 'a' and 'b' is thus:\n *\n * d(x) = d3x^3 + d2x^2 + d1x + d0\n * with\n * d0 = GF(a0, b0) ^ GF(a3, b1) ^ GF(a2, b2) ^ GF(a1, b3)\n * d1 = GF(a1, b0) ^ GF(a0, b1) ^ GF(a3, b2) ^ GF(a2, b3)\n * d2 = GF(a2, b0) ^ GF(a1, b1) ^ GF(a0, b2) ^ GF(a3, b3)\n * d3 = GF(a3, b0) ^ GF(a2, b1) ^ GF(a1, b2) ^ GF(a0, b3)\n *\n * As a matrix:\n *\n * [d0] = [a0 a3 a2 a1][b0]\n * [d1]   [a1 a0 a3 a2][b1]\n * [d2]   [a2 a1 a0 a3][b2]\n * [d3]   [a3 a2 a1 a0][b3]\n *\n * Special polynomials defined by AES (0x02 == {02}):\n * a(x)    = {03}x^3 + {01}x^2 + {01}x + {02}\n * a^-1(x) = {0b}x^3 + {0d}x^2 + {09}x + {0e}.\n *\n * These polynomials are used in the MixColumns() and InverseMixColumns()\n * operations, respectively, to cause each element in the state to affect\n * the output (referred to as diffusing).\n *\n * RotWord() uses: a0 = a1 = a2 = {00} and a3 = {01}, which is the\n * polynomial x3.\n *\n * The ShiftRows() method modifies the last 3 rows in the state (where\n * the state is 4 words with 4 bytes per word) by shifting bytes cyclically.\n * The 1st byte in the second row is moved to the end of the row. The 1st\n * and 2nd bytes in the third row are moved to the end of the row. The 1st,\n * 2nd, and 3rd bytes are moved in the fourth row.\n *\n * More details on how AES arithmetic works:\n *\n * In the polynomial representation of binary numbers, XOR performs addition\n * and subtraction and multiplication in GF(2^8) denoted as GF(a, b)\n * corresponds with the multiplication of polynomials modulo an irreducible\n * polynomial of degree 8. In other words, for AES, GF(a, b) will multiply\n * polynomial 'a' with polynomial 'b' and then do a modular reduction by\n * an AES-specific irreducible polynomial of degree 8.\n *\n * A polynomial is irreducible if its only divisors are one and itself. For\n * the AES algorithm, this irreducible polynomial is:\n *\n * m(x) = x^8 + x^4 + x^3 + x + 1,\n *\n * or {01}{1b} in hexadecimal notation, where each coefficient is a bit:\n * 100011011 = 283 = 0x11b.\n *\n * For example, GF(0x57, 0x83) = 0xc1 because\n *\n * 0x57 = 87  = 01010111 = x^6 + x^4 + x^2 + x + 1\n * 0x85 = 131 = 10000101 = x^7 + x + 1\n *\n * (x^6 + x^4 + x^2 + x + 1) * (x^7 + x + 1)\n * =  x^13 + x^11 + x^9 + x^8 + x^7 +\n *    x^7 + x^5 + x^3 + x^2 + x +\n *    x^6 + x^4 + x^2 + x + 1\n * =  x^13 + x^11 + x^9 + x^8 + x^6 + x^5 + x^4 + x^3 + 1 = y\n *    y modulo (x^8 + x^4 + x^3 + x + 1)\n * =  x^7 + x^6 + 1.\n *\n * The modular reduction by m(x) guarantees the result will be a binary\n * polynomial of less than degree 8, so that it can fit in a byte.\n *\n * The operation to multiply a binary polynomial b with x (the polynomial\n * x in binary representation is 00000010) is:\n *\n * b_7x^8 + b_6x^7 + b_5x^6 + b_4x^5 + b_3x^4 + b_2x^3 + b_1x^2 + b_0x^1\n *\n * To get GF(b, x) we must reduce that by m(x). If b_7 is 0 (that is the\n * most significant bit is 0 in b) then the result is already reduced. If\n * it is 1, then we can reduce it by subtracting m(x) via an XOR.\n *\n * It follows that multiplication by x (00000010 or 0x02) can be implemented\n * by performing a left shift followed by a conditional bitwise XOR with\n * 0x1b. This operation on bytes is denoted by xtime(). Multiplication by\n * higher powers of x can be implemented by repeated application of xtime().\n *\n * By adding intermediate results, multiplication by any constant can be\n * implemented. For instance:\n *\n * GF(0x57, 0x13) = 0xfe because:\n *\n * xtime(b) = (b & 128) ? (b << 1 ^ 0x11b) : (b << 1)\n *\n * Note: We XOR with 0x11b instead of 0x1b because in javascript our\n * datatype for b can be larger than 1 byte, so a left shift will not\n * automatically eliminate bits that overflow a byte ... by XOR'ing the\n * overflow bit with 1 (the extra one from 0x11b) we zero it out.\n *\n * GF(0x57, 0x02) = xtime(0x57) = 0xae\n * GF(0x57, 0x04) = xtime(0xae) = 0x47\n * GF(0x57, 0x08) = xtime(0x47) = 0x8e\n * GF(0x57, 0x10) = xtime(0x8e) = 0x07\n *\n * GF(0x57, 0x13) = GF(0x57, (0x01 ^ 0x02 ^ 0x10))\n *\n * And by the distributive property (since XOR is addition and GF() is\n * multiplication):\n *\n * = GF(0x57, 0x01) ^ GF(0x57, 0x02) ^ GF(0x57, 0x10)\n * = 0x57 ^ 0xae ^ 0x07\n * = 0xfe.\n */\nfunction initialize() {\n  init = true;\n\n  /* Populate the Rcon table. These are the values given by\n    [x^(i-1),{00},{00},{00}] where x^(i-1) are powers of x (and x = 0x02)\n    in the field of GF(2^8), where i starts at 1.\n\n    rcon[0] = [0x00, 0x00, 0x00, 0x00]\n    rcon[1] = [0x01, 0x00, 0x00, 0x00] 2^(1-1) = 2^0 = 1\n    rcon[2] = [0x02, 0x00, 0x00, 0x00] 2^(2-1) = 2^1 = 2\n    ...\n    rcon[9]  = [0x1B, 0x00, 0x00, 0x00] 2^(9-1)  = 2^8 = 0x1B\n    rcon[10] = [0x36, 0x00, 0x00, 0x00] 2^(10-1) = 2^9 = 0x36\n\n    We only store the first byte because it is the only one used.\n  */\n  rcon = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1B, 0x36];\n\n  // compute xtime table which maps i onto GF(i, 0x02)\n  var xtime = new Array(256);\n  for(var i = 0; i < 128; ++i) {\n    xtime[i] = i << 1;\n    xtime[i + 128] = (i + 128) << 1 ^ 0x11B;\n  }\n\n  // compute all other tables\n  sbox = new Array(256);\n  isbox = new Array(256);\n  mix = new Array(4);\n  imix = new Array(4);\n  for(var i = 0; i < 4; ++i) {\n    mix[i] = new Array(256);\n    imix[i] = new Array(256);\n  }\n  var e = 0, ei = 0, e2, e4, e8, sx, sx2, me, ime;\n  for(var i = 0; i < 256; ++i) {\n    /* We need to generate the SubBytes() sbox and isbox tables so that\n      we can perform byte substitutions. This requires us to traverse\n      all of the elements in GF, find their multiplicative inverses,\n      and apply to each the following affine transformation:\n\n      bi' = bi ^ b(i + 4) mod 8 ^ b(i + 5) mod 8 ^ b(i + 6) mod 8 ^\n            b(i + 7) mod 8 ^ ci\n      for 0 <= i < 8, where bi is the ith bit of the byte, and ci is the\n      ith bit of a byte c with the value {63} or {01100011}.\n\n      It is possible to traverse every possible value in a Galois field\n      using what is referred to as a 'generator'. There are many\n      generators (128 out of 256): 3,5,6,9,11,82 to name a few. To fully\n      traverse GF we iterate 255 times, multiplying by our generator\n      each time.\n\n      On each iteration we can determine the multiplicative inverse for\n      the current element.\n\n      Suppose there is an element in GF 'e'. For a given generator 'g',\n      e = g^x. The multiplicative inverse of e is g^(255 - x). It turns\n      out that if use the inverse of a generator as another generator\n      it will produce all of the corresponding multiplicative inverses\n      at the same time. For this reason, we choose 5 as our inverse\n      generator because it only requires 2 multiplies and 1 add and its\n      inverse, 82, requires relatively few operations as well.\n\n      In order to apply the affine transformation, the multiplicative\n      inverse 'ei' of 'e' can be repeatedly XOR'd (4 times) with a\n      bit-cycling of 'ei'. To do this 'ei' is first stored in 's' and\n      'x'. Then 's' is left shifted and the high bit of 's' is made the\n      low bit. The resulting value is stored in 's'. Then 'x' is XOR'd\n      with 's' and stored in 'x'. On each subsequent iteration the same\n      operation is performed. When 4 iterations are complete, 'x' is\n      XOR'd with 'c' (0x63) and the transformed value is stored in 'x'.\n      For example:\n\n      s = 01000001\n      x = 01000001\n\n      iteration 1: s = 10000010, x ^= s\n      iteration 2: s = 00000101, x ^= s\n      iteration 3: s = 00001010, x ^= s\n      iteration 4: s = 00010100, x ^= s\n      x ^= 0x63\n\n      This can be done with a loop where s = (s << 1) | (s >> 7). However,\n      it can also be done by using a single 16-bit (in this case 32-bit)\n      number 'sx'. Since XOR is an associative operation, we can set 'sx'\n      to 'ei' and then XOR it with 'sx' left-shifted 1,2,3, and 4 times.\n      The most significant bits will flow into the high 8 bit positions\n      and be correctly XOR'd with one another. All that remains will be\n      to cycle the high 8 bits by XOR'ing them all with the lower 8 bits\n      afterwards.\n\n      At the same time we're populating sbox and isbox we can precompute\n      the multiplication we'll need to do to do MixColumns() later.\n    */\n\n    // apply affine transformation\n    sx = ei ^ (ei << 1) ^ (ei << 2) ^ (ei << 3) ^ (ei << 4);\n    sx = (sx >> 8) ^ (sx & 255) ^ 0x63;\n\n    // update tables\n    sbox[e] = sx;\n    isbox[sx] = e;\n\n    /* Mixing columns is done using matrix multiplication. The columns\n      that are to be mixed are each a single word in the current state.\n      The state has Nb columns (4 columns). Therefore each column is a\n      4 byte word. So to mix the columns in a single column 'c' where\n      its rows are r0, r1, r2, and r3, we use the following matrix\n      multiplication:\n\n      [2 3 1 1]*[r0,c]=[r'0,c]\n      [1 2 3 1] [r1,c] [r'1,c]\n      [1 1 2 3] [r2,c] [r'2,c]\n      [3 1 1 2] [r3,c] [r'3,c]\n\n      r0, r1, r2, and r3 are each 1 byte of one of the words in the\n      state (a column). To do matrix multiplication for each mixed\n      column c' we multiply the corresponding row from the left matrix\n      with the corresponding column from the right matrix. In total, we\n      get 4 equations:\n\n      r0,c' = 2*r0,c + 3*r1,c + 1*r2,c + 1*r3,c\n      r1,c' = 1*r0,c + 2*r1,c + 3*r2,c + 1*r3,c\n      r2,c' = 1*r0,c + 1*r1,c + 2*r2,c + 3*r3,c\n      r3,c' = 3*r0,c + 1*r1,c + 1*r2,c + 2*r3,c\n\n      As usual, the multiplication is as previously defined and the\n      addition is XOR. In order to optimize mixing columns we can store\n      the multiplication results in tables. If you think of the whole\n      column as a word (it might help to visualize by mentally rotating\n      the equations above by counterclockwise 90 degrees) then you can\n      see that it would be useful to map the multiplications performed on\n      each byte (r0, r1, r2, r3) onto a word as well. For instance, we\n      could map 2*r0,1*r0,1*r0,3*r0 onto a word by storing 2*r0 in the\n      highest 8 bits and 3*r0 in the lowest 8 bits (with the other two\n      respectively in the middle). This means that a table can be\n      constructed that uses r0 as an index to the word. We can do the\n      same with r1, r2, and r3, creating a total of 4 tables.\n\n      To construct a full c', we can just look up each byte of c in\n      their respective tables and XOR the results together.\n\n      Also, to build each table we only have to calculate the word\n      for 2,1,1,3 for every byte ... which we can do on each iteration\n      of this loop since we will iterate over every byte. After we have\n      calculated 2,1,1,3 we can get the results for the other tables\n      by cycling the byte at the end to the beginning. For instance\n      we can take the result of table 2,1,1,3 and produce table 3,2,1,1\n      by moving the right most byte to the left most position just like\n      how you can imagine the 3 moved out of 2,1,1,3 and to the front\n      to produce 3,2,1,1.\n\n      There is another optimization in that the same multiples of\n      the current element we need in order to advance our generator\n      to the next iteration can be reused in performing the 2,1,1,3\n      calculation. We also calculate the inverse mix column tables,\n      with e,9,d,b being the inverse of 2,1,1,3.\n\n      When we're done, and we need to actually mix columns, the first\n      byte of each state word should be put through mix[0] (2,1,1,3),\n      the second through mix[1] (3,2,1,1) and so forth. Then they should\n      be XOR'd together to produce the fully mixed column.\n    */\n\n    // calculate mix and imix table values\n    sx2 = xtime[sx];\n    e2 = xtime[e];\n    e4 = xtime[e2];\n    e8 = xtime[e4];\n    me =\n      (sx2 << 24) ^  // 2\n      (sx << 16) ^   // 1\n      (sx << 8) ^    // 1\n      (sx ^ sx2);    // 3\n    ime =\n      (e2 ^ e4 ^ e8) << 24 ^  // E (14)\n      (e ^ e8) << 16 ^        // 9\n      (e ^ e4 ^ e8) << 8 ^    // D (13)\n      (e ^ e2 ^ e8);          // B (11)\n    // produce each of the mix tables by rotating the 2,1,1,3 value\n    for(var n = 0; n < 4; ++n) {\n      mix[n][e] = me;\n      imix[n][sx] = ime;\n      // cycle the right most byte to the left most position\n      // ie: 2,1,1,3 becomes 3,2,1,1\n      me = me << 24 | me >>> 8;\n      ime = ime << 24 | ime >>> 8;\n    }\n\n    // get next element and inverse\n    if(e === 0) {\n      // 1 is the inverse of 1\n      e = ei = 1;\n    } else {\n      // e = 2e + 2*2*2*(10e)) = multiply e by 82 (chosen generator)\n      // ei = ei + 2*2*ei = multiply ei by 5 (inverse generator)\n      e = e2 ^ xtime[xtime[xtime[e2 ^ e8]]];\n      ei ^= xtime[xtime[ei]];\n    }\n  }\n}\n\n/**\n * Generates a key schedule using the AES key expansion algorithm.\n *\n * The AES algorithm takes the Cipher Key, K, and performs a Key Expansion\n * routine to generate a key schedule. The Key Expansion generates a total\n * of Nb*(Nr + 1) words: the algorithm requires an initial set of Nb words,\n * and each of the Nr rounds requires Nb words of key data. The resulting\n * key schedule consists of a linear array of 4-byte words, denoted [wi ],\n * with i in the range 0 <= i < Nb(Nr + 1).\n *\n * KeyExpansion(byte key[4*Nk], word w[Nb*(Nr+1)], Nk)\n * AES-128 (Nb=4, Nk=4, Nr=10)\n * AES-192 (Nb=4, Nk=6, Nr=12)\n * AES-256 (Nb=4, Nk=8, Nr=14)\n * Note: Nr=Nk+6.\n *\n * Nb is the number of columns (32-bit words) comprising the State (or\n * number of bytes in a block). For AES, Nb=4.\n *\n * @param key the key to schedule (as an array of 32-bit words).\n * @param decrypt true to modify the key schedule to decrypt, false not to.\n *\n * @return the generated key schedule.\n */\nfunction _expandKey(key, decrypt) {\n  // copy the key's words to initialize the key schedule\n  var w = key.slice(0);\n\n  /* RotWord() will rotate a word, moving the first byte to the last\n    byte's position (shifting the other bytes left).\n\n    We will be getting the value of Rcon at i / Nk. 'i' will iterate\n    from Nk to (Nb * Nr+1). Nk = 4 (4 byte key), Nb = 4 (4 words in\n    a block), Nr = Nk + 6 (10). Therefore 'i' will iterate from\n    4 to 44 (exclusive). Each time we iterate 4 times, i / Nk will\n    increase by 1. We use a counter iNk to keep track of this.\n   */\n\n  // go through the rounds expanding the key\n  var temp, iNk = 1;\n  var Nk = w.length;\n  var Nr1 = Nk + 6 + 1;\n  var end = Nb * Nr1;\n  for(var i = Nk; i < end; ++i) {\n    temp = w[i - 1];\n    if(i % Nk === 0) {\n      // temp = SubWord(RotWord(temp)) ^ Rcon[i / Nk]\n      temp =\n        sbox[temp >>> 16 & 255] << 24 ^\n        sbox[temp >>> 8 & 255] << 16 ^\n        sbox[temp & 255] << 8 ^\n        sbox[temp >>> 24] ^ (rcon[iNk] << 24);\n      iNk++;\n    } else if(Nk > 6 && (i % Nk === 4)) {\n      // temp = SubWord(temp)\n      temp =\n        sbox[temp >>> 24] << 24 ^\n        sbox[temp >>> 16 & 255] << 16 ^\n        sbox[temp >>> 8 & 255] << 8 ^\n        sbox[temp & 255];\n    }\n    w[i] = w[i - Nk] ^ temp;\n  }\n\n  /* When we are updating a cipher block we always use the code path for\n     encryption whether we are decrypting or not (to shorten code and\n     simplify the generation of look up tables). However, because there\n     are differences in the decryption algorithm, other than just swapping\n     in different look up tables, we must transform our key schedule to\n     account for these changes:\n\n     1. The decryption algorithm gets its key rounds in reverse order.\n     2. The decryption algorithm adds the round key before mixing columns\n       instead of afterwards.\n\n     We don't need to modify our key schedule to handle the first case,\n     we can just traverse the key schedule in reverse order when decrypting.\n\n     The second case requires a little work.\n\n     The tables we built for performing rounds will take an input and then\n     perform SubBytes() and MixColumns() or, for the decrypt version,\n     InvSubBytes() and InvMixColumns(). But the decrypt algorithm requires\n     us to AddRoundKey() before InvMixColumns(). This means we'll need to\n     apply some transformations to the round key to inverse-mix its columns\n     so they'll be correct for moving AddRoundKey() to after the state has\n     had its columns inverse-mixed.\n\n     To inverse-mix the columns of the state when we're decrypting we use a\n     lookup table that will apply InvSubBytes() and InvMixColumns() at the\n     same time. However, the round key's bytes are not inverse-substituted\n     in the decryption algorithm. To get around this problem, we can first\n     substitute the bytes in the round key so that when we apply the\n     transformation via the InvSubBytes()+InvMixColumns() table, it will\n     undo our substitution leaving us with the original value that we\n     want -- and then inverse-mix that value.\n\n     This change will correctly alter our key schedule so that we can XOR\n     each round key with our already transformed decryption state. This\n     allows us to use the same code path as the encryption algorithm.\n\n     We make one more change to the decryption key. Since the decryption\n     algorithm runs in reverse from the encryption algorithm, we reverse\n     the order of the round keys to avoid having to iterate over the key\n     schedule backwards when running the encryption algorithm later in\n     decryption mode. In addition to reversing the order of the round keys,\n     we also swap each round key's 2nd and 4th rows. See the comments\n     section where rounds are performed for more details about why this is\n     done. These changes are done inline with the other substitution\n     described above.\n  */\n  if(decrypt) {\n    var tmp;\n    var m0 = imix[0];\n    var m1 = imix[1];\n    var m2 = imix[2];\n    var m3 = imix[3];\n    var wnew = w.slice(0);\n    end = w.length;\n    for(var i = 0, wi = end - Nb; i < end; i += Nb, wi -= Nb) {\n      // do not sub the first or last round key (round keys are Nb\n      // words) as no column mixing is performed before they are added,\n      // but do change the key order\n      if(i === 0 || i === (end - Nb)) {\n        wnew[i] = w[wi];\n        wnew[i + 1] = w[wi + 3];\n        wnew[i + 2] = w[wi + 2];\n        wnew[i + 3] = w[wi + 1];\n      } else {\n        // substitute each round key byte because the inverse-mix\n        // table will inverse-substitute it (effectively cancel the\n        // substitution because round key bytes aren't sub'd in\n        // decryption mode) and swap indexes 3 and 1\n        for(var n = 0; n < Nb; ++n) {\n          tmp = w[wi + n];\n          wnew[i + (3&-n)] =\n            m0[sbox[tmp >>> 24]] ^\n            m1[sbox[tmp >>> 16 & 255]] ^\n            m2[sbox[tmp >>> 8 & 255]] ^\n            m3[sbox[tmp & 255]];\n        }\n      }\n    }\n    w = wnew;\n  }\n\n  return w;\n}\n\n/**\n * Updates a single block (16 bytes) using AES. The update will either\n * encrypt or decrypt the block.\n *\n * @param w the key schedule.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(w, input, output, decrypt) {\n  /*\n  Cipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[0, Nb-1])\n    for round = 1 step 1 to Nr-1\n      SubBytes(state)\n      ShiftRows(state)\n      MixColumns(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n    end for\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    out = state\n  end\n\n  InvCipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    for round = Nr-1 step -1 downto 1\n      InvShiftRows(state)\n      InvSubBytes(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n      InvMixColumns(state)\n    end for\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n    out = state\n  end\n  */\n\n  // Encrypt: AddRoundKey(state, w[0, Nb-1])\n  // Decrypt: AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n  var Nr = w.length / 4 - 1;\n  var m0, m1, m2, m3, sub;\n  if(decrypt) {\n    m0 = imix[0];\n    m1 = imix[1];\n    m2 = imix[2];\n    m3 = imix[3];\n    sub = isbox;\n  } else {\n    m0 = mix[0];\n    m1 = mix[1];\n    m2 = mix[2];\n    m3 = mix[3];\n    sub = sbox;\n  }\n  var a, b, c, d, a2, b2, c2;\n  a = input[0] ^ w[0];\n  b = input[decrypt ? 3 : 1] ^ w[1];\n  c = input[2] ^ w[2];\n  d = input[decrypt ? 1 : 3] ^ w[3];\n  var i = 3;\n\n  /* In order to share code we follow the encryption algorithm when both\n    encrypting and decrypting. To account for the changes required in the\n    decryption algorithm, we use different lookup tables when decrypting\n    and use a modified key schedule to account for the difference in the\n    order of transformations applied when performing rounds. We also get\n    key rounds in reverse order (relative to encryption). */\n  for(var round = 1; round < Nr; ++round) {\n    /* As described above, we'll be using table lookups to perform the\n      column mixing. Each column is stored as a word in the state (the\n      array 'input' has one column as a word at each index). In order to\n      mix a column, we perform these transformations on each row in c,\n      which is 1 byte in each word. The new column for c0 is c'0:\n\n               m0      m1      m2      m3\n      r0,c'0 = 2*r0,c0 + 3*r1,c0 + 1*r2,c0 + 1*r3,c0\n      r1,c'0 = 1*r0,c0 + 2*r1,c0 + 3*r2,c0 + 1*r3,c0\n      r2,c'0 = 1*r0,c0 + 1*r1,c0 + 2*r2,c0 + 3*r3,c0\n      r3,c'0 = 3*r0,c0 + 1*r1,c0 + 1*r2,c0 + 2*r3,c0\n\n      So using mix tables where c0 is a word with r0 being its upper\n      8 bits and r3 being its lower 8 bits:\n\n      m0[c0 >> 24] will yield this word: [2*r0,1*r0,1*r0,3*r0]\n      ...\n      m3[c0 & 255] will yield this word: [1*r3,1*r3,3*r3,2*r3]\n\n      Therefore to mix the columns in each word in the state we\n      do the following (& 255 omitted for brevity):\n      c'0,r0 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r1 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r2 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r3 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n\n      However, before mixing, the algorithm requires us to perform\n      ShiftRows(). The ShiftRows() transformation cyclically shifts the\n      last 3 rows of the state over different offsets. The first row\n      (r = 0) is not shifted.\n\n      s'_r,c = s_r,(c + shift(r, Nb) mod Nb\n      for 0 < r < 4 and 0 <= c < Nb and\n      shift(1, 4) = 1\n      shift(2, 4) = 2\n      shift(3, 4) = 3.\n\n      This causes the first byte in r = 1 to be moved to the end of\n      the row, the first 2 bytes in r = 2 to be moved to the end of\n      the row, the first 3 bytes in r = 3 to be moved to the end of\n      the row:\n\n      r1: [c0 c1 c2 c3] => [c1 c2 c3 c0]\n      r2: [c0 c1 c2 c3]    [c2 c3 c0 c1]\n      r3: [c0 c1 c2 c3]    [c3 c0 c1 c2]\n\n      We can make these substitutions inline with our column mixing to\n      generate an updated set of equations to produce each word in the\n      state (note the columns have changed positions):\n\n      c0 c1 c2 c3 => c0 c1 c2 c3\n      c0 c1 c2 c3    c1 c2 c3 c0  (cycled 1 byte)\n      c0 c1 c2 c3    c2 c3 c0 c1  (cycled 2 bytes)\n      c0 c1 c2 c3    c3 c0 c1 c2  (cycled 3 bytes)\n\n      Therefore:\n\n      c'0 = 2*r0,c0 + 3*r1,c1 + 1*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 2*r1,c1 + 3*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 1*r1,c1 + 2*r2,c2 + 3*r3,c3\n      c'0 = 3*r0,c0 + 1*r1,c1 + 1*r2,c2 + 2*r3,c3\n\n      c'1 = 2*r0,c1 + 3*r1,c2 + 1*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 2*r1,c2 + 3*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 1*r1,c2 + 2*r2,c3 + 3*r3,c0\n      c'1 = 3*r0,c1 + 1*r1,c2 + 1*r2,c3 + 2*r3,c0\n\n      ... and so forth for c'2 and c'3. The important distinction is\n      that the columns are cycling, with c0 being used with the m0\n      map when calculating c0, but c1 being used with the m0 map when\n      calculating c1 ... and so forth.\n\n      When performing the inverse we transform the mirror image and\n      skip the bottom row, instead of the top one, and move upwards:\n\n      c3 c2 c1 c0 => c0 c3 c2 c1  (cycled 3 bytes) *same as encryption\n      c3 c2 c1 c0    c1 c0 c3 c2  (cycled 2 bytes)\n      c3 c2 c1 c0    c2 c1 c0 c3  (cycled 1 byte)  *same as encryption\n      c3 c2 c1 c0    c3 c2 c1 c0\n\n      If you compare the resulting matrices for ShiftRows()+MixColumns()\n      and for InvShiftRows()+InvMixColumns() the 2nd and 4th columns are\n      different (in encrypt mode vs. decrypt mode). So in order to use\n      the same code to handle both encryption and decryption, we will\n      need to do some mapping.\n\n      If in encryption mode we let a=c0, b=c1, c=c2, d=c3, and r<N> be\n      a row number in the state, then the resulting matrix in encryption\n      mode for applying the above transformations would be:\n\n      r1: a b c d\n      r2: b c d a\n      r3: c d a b\n      r4: d a b c\n\n      If we did the same in decryption mode we would get:\n\n      r1: a d c b\n      r2: b a d c\n      r3: c b a d\n      r4: d c b a\n\n      If instead we swap d and b (set b=c3 and d=c1), then we get:\n\n      r1: a b c d\n      r2: d a b c\n      r3: c d a b\n      r4: b c d a\n\n      Now the 1st and 3rd rows are the same as the encryption matrix. All\n      we need to do then to make the mapping exactly the same is to swap\n      the 2nd and 4th rows when in decryption mode. To do this without\n      having to do it on each iteration, we swapped the 2nd and 4th rows\n      in the decryption key schedule. We also have to do the swap above\n      when we first pull in the input and when we set the final output. */\n    a2 =\n      m0[a >>> 24] ^\n      m1[b >>> 16 & 255] ^\n      m2[c >>> 8 & 255] ^\n      m3[d & 255] ^ w[++i];\n    b2 =\n      m0[b >>> 24] ^\n      m1[c >>> 16 & 255] ^\n      m2[d >>> 8 & 255] ^\n      m3[a & 255] ^ w[++i];\n    c2 =\n      m0[c >>> 24] ^\n      m1[d >>> 16 & 255] ^\n      m2[a >>> 8 & 255] ^\n      m3[b & 255] ^ w[++i];\n    d =\n      m0[d >>> 24] ^\n      m1[a >>> 16 & 255] ^\n      m2[b >>> 8 & 255] ^\n      m3[c & 255] ^ w[++i];\n    a = a2;\n    b = b2;\n    c = c2;\n  }\n\n  /*\n    Encrypt:\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n\n    Decrypt:\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n   */\n  // Note: rows are shifted inline\n  output[0] =\n    (sub[a >>> 24] << 24) ^\n    (sub[b >>> 16 & 255] << 16) ^\n    (sub[c >>> 8 & 255] << 8) ^\n    (sub[d & 255]) ^ w[++i];\n  output[decrypt ? 3 : 1] =\n    (sub[b >>> 24] << 24) ^\n    (sub[c >>> 16 & 255] << 16) ^\n    (sub[d >>> 8 & 255] << 8) ^\n    (sub[a & 255]) ^ w[++i];\n  output[2] =\n    (sub[c >>> 24] << 24) ^\n    (sub[d >>> 16 & 255] << 16) ^\n    (sub[a >>> 8 & 255] << 8) ^\n    (sub[b & 255]) ^ w[++i];\n  output[decrypt ? 1 : 3] =\n    (sub[d >>> 24] << 24) ^\n    (sub[a >>> 16 & 255] << 16) ^\n    (sub[b >>> 8 & 255] << 8) ^\n    (sub[c & 255]) ^ w[++i];\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('AES-<mode>', key);\n * forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates a deprecated AES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key and iv may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param options the options to use.\n *          key the symmetric key to use.\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'AES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n","/**\n * Javascript implementation of Abstract Syntax Notation Number One.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n *\n * An API for storing data using the Abstract Syntax Notation Number One\n * format using DER (Distinguished Encoding Rules) encoding. This encoding is\n * commonly used to store data for PKI, i.e. X.509 Certificates, and this\n * implementation exists for that purpose.\n *\n * Abstract Syntax Notation Number One (ASN.1) is used to define the abstract\n * syntax of information without restricting the way the information is encoded\n * for transmission. It provides a standard that allows for open systems\n * communication. ASN.1 defines the syntax of information data and a number of\n * simple data types as well as a notation for describing them and specifying\n * values for them.\n *\n * The RSA algorithm creates public and private keys that are often stored in\n * X.509 or PKCS#X formats -- which use ASN.1 (encoded in DER format). This\n * class provides the most basic functionality required to store and load DSA\n * keys that are encoded according to ASN.1.\n *\n * The most common binary encodings for ASN.1 are BER (Basic Encoding Rules)\n * and DER (Distinguished Encoding Rules). DER is just a subset of BER that\n * has stricter requirements for how data must be encoded.\n *\n * Each ASN.1 structure has a tag (a byte identifying the ASN.1 structure type)\n * and a byte array for the value of this ASN1 structure which may be data or a\n * list of ASN.1 structures.\n *\n * Each ASN.1 structure using BER is (Tag-Length-Value):\n *\n * | byte 0 | bytes X | bytes Y |\n * |--------|---------|----------\n * |  tag   | length  |  value  |\n *\n * ASN.1 allows for tags to be of \"High-tag-number form\" which allows a tag to\n * be two or more octets, but that is not supported by this class. A tag is\n * only 1 byte. Bits 1-5 give the tag number (ie the data type within a\n * particular 'class'), 6 indicates whether or not the ASN.1 value is\n * constructed from other ASN.1 values, and bits 7 and 8 give the 'class'. If\n * bits 7 and 8 are both zero, the class is UNIVERSAL. If only bit 7 is set,\n * then the class is APPLICATION. If only bit 8 is set, then the class is\n * CONTEXT_SPECIFIC. If both bits 7 and 8 are set, then the class is PRIVATE.\n * The tag numbers for the data types for the class UNIVERSAL are listed below:\n *\n * UNIVERSAL 0 Reserved for use by the encoding rules\n * UNIVERSAL 1 Boolean type\n * UNIVERSAL 2 Integer type\n * UNIVERSAL 3 Bitstring type\n * UNIVERSAL 4 Octetstring type\n * UNIVERSAL 5 Null type\n * UNIVERSAL 6 Object identifier type\n * UNIVERSAL 7 Object descriptor type\n * UNIVERSAL 8 External type and Instance-of type\n * UNIVERSAL 9 Real type\n * UNIVERSAL 10 Enumerated type\n * UNIVERSAL 11 Embedded-pdv type\n * UNIVERSAL 12 UTF8String type\n * UNIVERSAL 13 Relative object identifier type\n * UNIVERSAL 14-15 Reserved for future editions\n * UNIVERSAL 16 Sequence and Sequence-of types\n * UNIVERSAL 17 Set and Set-of types\n * UNIVERSAL 18-22, 25-30 Character string types\n * UNIVERSAL 23-24 Time types\n *\n * The length of an ASN.1 structure is specified after the tag identifier.\n * There is a definite form and an indefinite form. The indefinite form may\n * be used if the encoding is constructed and not all immediately available.\n * The indefinite form is encoded using a length byte with only the 8th bit\n * set. The end of the constructed object is marked using end-of-contents\n * octets (two zero bytes).\n *\n * The definite form looks like this:\n *\n * The length may take up 1 or more bytes, it depends on the length of the\n * value of the ASN.1 structure. DER encoding requires that if the ASN.1\n * structure has a value that has a length greater than 127, more than 1 byte\n * will be used to store its length, otherwise just one byte will be used.\n * This is strict.\n *\n * In the case that the length of the ASN.1 value is less than 127, 1 octet\n * (byte) is used to store the \"short form\" length. The 8th bit has a value of\n * 0 indicating the length is \"short form\" and not \"long form\" and bits 7-1\n * give the length of the data. (The 8th bit is the left-most, most significant\n * bit: also known as big endian or network format).\n *\n * In the case that the length of the ASN.1 value is greater than 127, 2 to\n * 127 octets (bytes) are used to store the \"long form\" length. The first\n * byte's 8th bit is set to 1 to indicate the length is \"long form.\" Bits 7-1\n * give the number of additional octets. All following octets are in base 256\n * with the most significant digit first (typical big-endian binary unsigned\n * integer storage). So, for instance, if the length of a value was 257, the\n * first byte would be set to:\n *\n * 10000010 = 130 = 0x82.\n *\n * This indicates there are 2 octets (base 256) for the length. The second and\n * third bytes (the octets just mentioned) would store the length in base 256:\n *\n * octet 2: 00000001 = 1 * 256^1 = 256\n * octet 3: 00000001 = 1 * 256^0 = 1\n * total = 257\n *\n * The algorithm for converting a js integer value of 257 to base-256 is:\n *\n * var value = 257;\n * var bytes = [];\n * bytes[0] = (value >>> 8) & 0xFF; // most significant byte first\n * bytes[1] = value & 0xFF;        // least significant byte last\n *\n * On the ASN.1 UNIVERSAL Object Identifier (OID) type:\n *\n * An OID can be written like: \"value1.value2.value3...valueN\"\n *\n * The DER encoding rules:\n *\n * The first byte has the value 40 * value1 + value2.\n * The following bytes, if any, encode the remaining values. Each value is\n * encoded in base 128, most significant digit first (big endian), with as\n * few digits as possible, and the most significant bit of each byte set\n * to 1 except the last in each value's encoding. For example: Given the\n * OID \"1.2.840.113549\", its DER encoding is (remember each byte except the\n * last one in each encoding is OR'd with 0x80):\n *\n * byte 1: 40 * 1 + 2 = 42 = 0x2A.\n * bytes 2-3: 128 * 6 + 72 = 840 = 6 72 = 6 72 = 0x0648 = 0x8648\n * bytes 4-6: 16384 * 6 + 128 * 119 + 13 = 6 119 13 = 0x06770D = 0x86F70D\n *\n * The final value is: 0x2A864886F70D.\n * The full OID (including ASN.1 tag and length of 6 bytes) is:\n * 0x06062A864886F70D\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./oids');\n\n/* ASN.1 API */\nvar asn1 = module.exports = forge.asn1 = forge.asn1 || {};\n\n/**\n * ASN.1 classes.\n */\nasn1.Class = {\n  UNIVERSAL:        0x00,\n  APPLICATION:      0x40,\n  CONTEXT_SPECIFIC: 0x80,\n  PRIVATE:          0xC0\n};\n\n/**\n * ASN.1 types. Not all types are supported by this implementation, only\n * those necessary to implement a simple PKI are implemented.\n */\nasn1.Type = {\n  NONE:             0,\n  BOOLEAN:          1,\n  INTEGER:          2,\n  BITSTRING:        3,\n  OCTETSTRING:      4,\n  NULL:             5,\n  OID:              6,\n  ODESC:            7,\n  EXTERNAL:         8,\n  REAL:             9,\n  ENUMERATED:      10,\n  EMBEDDED:        11,\n  UTF8:            12,\n  ROID:            13,\n  SEQUENCE:        16,\n  SET:             17,\n  PRINTABLESTRING: 19,\n  IA5STRING:       22,\n  UTCTIME:         23,\n  GENERALIZEDTIME: 24,\n  BMPSTRING:       30\n};\n\n/**\n * Creates a new asn1 object.\n *\n * @param tagClass the tag class for the object.\n * @param type the data type (tag number) for the object.\n * @param constructed true if the asn1 object is in constructed form.\n * @param value the value for the object, if it is not constructed.\n * @param [options] the options to use:\n *          [bitStringContents] the plain BIT STRING content including padding\n *            byte.\n *\n * @return the asn1 object.\n */\nasn1.create = function(tagClass, type, constructed, value, options) {\n  /* An asn1 object has a tagClass, a type, a constructed flag, and a\n    value. The value's type depends on the constructed flag. If\n    constructed, it will contain a list of other asn1 objects. If not,\n    it will contain the ASN.1 value as an array of bytes formatted\n    according to the ASN.1 data type. */\n\n  // remove undefined values\n  if(forge.util.isArray(value)) {\n    var tmp = [];\n    for(var i = 0; i < value.length; ++i) {\n      if(value[i] !== undefined) {\n        tmp.push(value[i]);\n      }\n    }\n    value = tmp;\n  }\n\n  var obj = {\n    tagClass: tagClass,\n    type: type,\n    constructed: constructed,\n    composed: constructed || forge.util.isArray(value),\n    value: value\n  };\n  if(options && 'bitStringContents' in options) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    obj.bitStringContents = options.bitStringContents;\n    // TODO: add readonly flag to avoid this overhead\n    // save copy to detect changes\n    obj.original = asn1.copy(obj);\n  }\n  return obj;\n};\n\n/**\n * Copies an asn1 object.\n *\n * @param obj the asn1 object.\n * @param [options] copy options:\n *          [excludeBitStringContents] true to not copy bitStringContents\n *\n * @return the a copy of the asn1 object.\n */\nasn1.copy = function(obj, options) {\n  var copy;\n\n  if(forge.util.isArray(obj)) {\n    copy = [];\n    for(var i = 0; i < obj.length; ++i) {\n      copy.push(asn1.copy(obj[i], options));\n    }\n    return copy;\n  }\n\n  if(typeof obj === 'string') {\n    // TODO: copy byte buffer if it's a buffer not a string\n    return obj;\n  }\n\n  copy = {\n    tagClass: obj.tagClass,\n    type: obj.type,\n    constructed: obj.constructed,\n    composed: obj.composed,\n    value: asn1.copy(obj.value, options)\n  };\n  if(options && !options.excludeBitStringContents) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    copy.bitStringContents = obj.bitStringContents;\n  }\n  return copy;\n};\n\n/**\n * Compares asn1 objects for equality.\n *\n * Note this function does not run in constant time.\n *\n * @param obj1 the first asn1 object.\n * @param obj2 the second asn1 object.\n * @param [options] compare options:\n *          [includeBitStringContents] true to compare bitStringContents\n *\n * @return true if the asn1 objects are equal.\n */\nasn1.equals = function(obj1, obj2, options) {\n  if(forge.util.isArray(obj1)) {\n    if(!forge.util.isArray(obj2)) {\n      return false;\n    }\n    if(obj1.length !== obj2.length) {\n      return false;\n    }\n    for(var i = 0; i < obj1.length; ++i) {\n      if(!asn1.equals(obj1[i], obj2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if(typeof obj1 !== typeof obj2) {\n    return false;\n  }\n\n  if(typeof obj1 === 'string') {\n    return obj1 === obj2;\n  }\n\n  var equal = obj1.tagClass === obj2.tagClass &&\n    obj1.type === obj2.type &&\n    obj1.constructed === obj2.constructed &&\n    obj1.composed === obj2.composed &&\n    asn1.equals(obj1.value, obj2.value);\n  if(options && options.includeBitStringContents) {\n    equal = equal && (obj1.bitStringContents === obj2.bitStringContents);\n  }\n\n  return equal;\n};\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param b the BER-encoded ASN.1 byte buffer, starting with the first\n *          length byte.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nasn1.getBerValueLength = function(b) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  var b2 = b.getByte();\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    length = b.getInt((b2 & 0x7F) << 3);\n  }\n  return length;\n};\n\n/**\n * Check if the byte buffer has enough bytes. Throws an Error if not.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n * @param n the number of bytes the buffer must have.\n */\nfunction _checkBufferLength(bytes, remaining, n) {\n  if(n > remaining) {\n    var error = new Error('Too few bytes to parse DER.');\n    error.available = bytes.length();\n    error.remaining = remaining;\n    error.requested = n;\n    throw error;\n  }\n}\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nvar _getValueLength = function(bytes, remaining) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  // fromDer already checked that this byte exists\n  var b2 = bytes.getByte();\n  remaining--;\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    var longFormBytes = b2 & 0x7F;\n    _checkBufferLength(bytes, remaining, longFormBytes);\n    length = bytes.getInt(longFormBytes << 3);\n  }\n  // FIXME: this will only happen for 32 bit getInt with high bit set\n  if(length < 0) {\n    throw new Error('Negative length: ' + length);\n  }\n  return length;\n};\n\n/**\n * Parses an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param [strict] true to be strict when checking value lengths, false to\n *          allow truncated values (default: true).\n * @param [options] object with options or boolean strict flag\n *          [strict] true to be strict when checking value lengths, false to\n *            allow truncated values (default: true).\n *          [parseAllBytes] true to ensure all bytes are parsed\n *            (default: true)\n *          [decodeBitStrings] true to attempt to decode the content of\n *            BIT STRINGs (not OCTET STRINGs) using strict mode. Note that\n *            without schema support to understand the data context this can\n *            erroneously decode values that happen to be valid ASN.1. This\n *            flag will be deprecated or removed as soon as schema support is\n *            available. (default: true)\n *\n * @throws Will throw an error for various malformed input conditions.\n *\n * @return the parsed asn1 object.\n */\nasn1.fromDer = function(bytes, options) {\n  if(options === undefined) {\n    options = {\n      strict: true,\n      parseAllBytes: true,\n      decodeBitStrings: true\n    };\n  }\n  if(typeof options === 'boolean') {\n    options = {\n      strict: options,\n      parseAllBytes: true,\n      decodeBitStrings: true\n    };\n  }\n  if(!('strict' in options)) {\n    options.strict = true;\n  }\n  if(!('parseAllBytes' in options)) {\n    options.parseAllBytes = true;\n  }\n  if(!('decodeBitStrings' in options)) {\n    options.decodeBitStrings = true;\n  }\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var byteCount = bytes.length();\n  var value = _fromDer(bytes, bytes.length(), 0, options);\n  if(options.parseAllBytes && bytes.length() !== 0) {\n    var error = new Error('Unparsed DER bytes remain after ASN.1 parsing.');\n    error.byteCount = byteCount;\n    error.remaining = bytes.length();\n    throw error;\n  }\n  return value;\n};\n\n/**\n * Internal function to parse an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the number of bytes remaining for this chunk.\n * @param depth the current parsing depth.\n * @param options object with same options as fromDer().\n *\n * @return the parsed asn1 object.\n */\nfunction _fromDer(bytes, remaining, depth, options) {\n  // temporary storage for consumption calculations\n  var start;\n\n  // minimum length for ASN.1 DER structure is 2\n  _checkBufferLength(bytes, remaining, 2);\n\n  // get the first byte\n  var b1 = bytes.getByte();\n  // consumed one byte\n  remaining--;\n\n  // get the tag class\n  var tagClass = (b1 & 0xC0);\n\n  // get the type (bits 1-5)\n  var type = b1 & 0x1F;\n\n  // get the variable value length and adjust remaining bytes\n  start = bytes.length();\n  var length = _getValueLength(bytes, remaining);\n  remaining -= start - bytes.length();\n\n  // ensure there are enough bytes to get the value\n  if(length !== undefined && length > remaining) {\n    if(options.strict) {\n      var error = new Error('Too few bytes to read ASN.1 value.');\n      error.available = bytes.length();\n      error.remaining = remaining;\n      error.requested = length;\n      throw error;\n    }\n    // Note: be lenient with truncated values and use remaining state bytes\n    length = remaining;\n  }\n\n  // value storage\n  var value;\n  // possible BIT STRING contents storage\n  var bitStringContents;\n\n  // constructed flag is bit 6 (32 = 0x20) of the first byte\n  var constructed = ((b1 & 0x20) === 0x20);\n  if(constructed) {\n    // parse child asn1 objects from the value\n    value = [];\n    if(length === undefined) {\n      // asn1 object of indefinite length, read until end tag\n      for(;;) {\n        _checkBufferLength(bytes, remaining, 2);\n        if(bytes.bytes(2) === String.fromCharCode(0, 0)) {\n          bytes.getBytes(2);\n          remaining -= 2;\n          break;\n        }\n        start = bytes.length();\n        value.push(_fromDer(bytes, remaining, depth + 1, options));\n        remaining -= start - bytes.length();\n      }\n    } else {\n      // parsing asn1 object of definite length\n      while(length > 0) {\n        start = bytes.length();\n        value.push(_fromDer(bytes, length, depth + 1, options));\n        remaining -= start - bytes.length();\n        length -= start - bytes.length();\n      }\n    }\n  }\n\n  // if a BIT STRING, save the contents including padding\n  if(value === undefined && tagClass === asn1.Class.UNIVERSAL &&\n    type === asn1.Type.BITSTRING) {\n    bitStringContents = bytes.bytes(length);\n  }\n\n  // determine if a non-constructed value should be decoded as a composed\n  // value that contains other ASN.1 objects. BIT STRINGs (and OCTET STRINGs)\n  // can be used this way.\n  if(value === undefined && options.decodeBitStrings &&\n    tagClass === asn1.Class.UNIVERSAL &&\n    // FIXME: OCTET STRINGs not yet supported here\n    // .. other parts of forge expect to decode OCTET STRINGs manually\n    (type === asn1.Type.BITSTRING /*|| type === asn1.Type.OCTETSTRING*/) &&\n    length > 1) {\n    // save read position\n    var savedRead = bytes.read;\n    var savedRemaining = remaining;\n    var unused = 0;\n    if(type === asn1.Type.BITSTRING) {\n      /* The first octet gives the number of bits by which the length of the\n        bit string is less than the next multiple of eight (this is called\n        the \"number of unused bits\").\n\n        The second and following octets give the value of the bit string\n        converted to an octet string. */\n      _checkBufferLength(bytes, remaining, 1);\n      unused = bytes.getByte();\n      remaining--;\n    }\n    // if all bits are used, maybe the BIT/OCTET STRING holds ASN.1 objs\n    if(unused === 0) {\n      try {\n        // attempt to parse child asn1 object from the value\n        // (stored in array to signal composed value)\n        start = bytes.length();\n        var subOptions = {\n          // enforce strict mode to avoid parsing ASN.1 from plain data\n          strict: true,\n          decodeBitStrings: true\n        };\n        var composed = _fromDer(bytes, remaining, depth + 1, subOptions);\n        var used = start - bytes.length();\n        remaining -= used;\n        if(type == asn1.Type.BITSTRING) {\n          used++;\n        }\n\n        // if the data all decoded and the class indicates UNIVERSAL or\n        // CONTEXT_SPECIFIC then assume we've got an encapsulated ASN.1 object\n        var tc = composed.tagClass;\n        if(used === length &&\n          (tc === asn1.Class.UNIVERSAL || tc === asn1.Class.CONTEXT_SPECIFIC)) {\n          value = [composed];\n        }\n      } catch(ex) {\n      }\n    }\n    if(value === undefined) {\n      // restore read position\n      bytes.read = savedRead;\n      remaining = savedRemaining;\n    }\n  }\n\n  if(value === undefined) {\n    // asn1 not constructed or composed, get raw value\n    // TODO: do DER to OID conversion and vice-versa in .toDer?\n\n    if(length === undefined) {\n      if(options.strict) {\n        throw new Error('Non-constructed ASN.1 object of indefinite length.');\n      }\n      // be lenient and use remaining state bytes\n      length = remaining;\n    }\n\n    if(type === asn1.Type.BMPSTRING) {\n      value = '';\n      for(; length > 0; length -= 2) {\n        _checkBufferLength(bytes, remaining, 2);\n        value += String.fromCharCode(bytes.getInt16());\n        remaining -= 2;\n      }\n    } else {\n      value = bytes.getBytes(length);\n      remaining -= length;\n    }\n  }\n\n  // add BIT STRING contents if available\n  var asn1Options = bitStringContents === undefined ? null : {\n    bitStringContents: bitStringContents\n  };\n\n  // create and return asn1 object\n  return asn1.create(tagClass, type, constructed, value, asn1Options);\n}\n\n/**\n * Converts the given asn1 object to a buffer of bytes in DER format.\n *\n * @param asn1 the asn1 object to convert to bytes.\n *\n * @return the buffer of bytes.\n */\nasn1.toDer = function(obj) {\n  var bytes = forge.util.createBuffer();\n\n  // build the first byte\n  var b1 = obj.tagClass | obj.type;\n\n  // for storing the ASN.1 value\n  var value = forge.util.createBuffer();\n\n  // use BIT STRING contents if available and data not changed\n  var useBitStringContents = false;\n  if('bitStringContents' in obj) {\n    useBitStringContents = true;\n    if(obj.original) {\n      useBitStringContents = asn1.equals(obj, obj.original);\n    }\n  }\n\n  if(useBitStringContents) {\n    value.putBytes(obj.bitStringContents);\n  } else if(obj.composed) {\n    // if composed, use each child asn1 object's DER bytes as value\n    // turn on 6th bit (0x20 = 32) to indicate asn1 is constructed\n    // from other asn1 objects\n    if(obj.constructed) {\n      b1 |= 0x20;\n    } else {\n      // type is a bit string, add unused bits of 0x00\n      value.putByte(0x00);\n    }\n\n    // add all of the child DER bytes together\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        value.putBuffer(asn1.toDer(obj.value[i]));\n      }\n    }\n  } else {\n    // use asn1.value directly\n    if(obj.type === asn1.Type.BMPSTRING) {\n      for(var i = 0; i < obj.value.length; ++i) {\n        value.putInt16(obj.value.charCodeAt(i));\n      }\n    } else {\n      // ensure integer is minimally-encoded\n      // TODO: should all leading bytes be stripped vs just one?\n      // .. ex '00 00 01' => '01'?\n      if(obj.type === asn1.Type.INTEGER &&\n        obj.value.length > 1 &&\n        // leading 0x00 for positive integer\n        ((obj.value.charCodeAt(0) === 0 &&\n        (obj.value.charCodeAt(1) & 0x80) === 0) ||\n        // leading 0xFF for negative integer\n        (obj.value.charCodeAt(0) === 0xFF &&\n        (obj.value.charCodeAt(1) & 0x80) === 0x80))) {\n        value.putBytes(obj.value.substr(1));\n      } else {\n        value.putBytes(obj.value);\n      }\n    }\n  }\n\n  // add tag byte\n  bytes.putByte(b1);\n\n  // use \"short form\" encoding\n  if(value.length() <= 127) {\n    // one byte describes the length\n    // bit 8 = 0 and bits 7-1 = length\n    bytes.putByte(value.length() & 0x7F);\n  } else {\n    // use \"long form\" encoding\n    // 2 to 127 bytes describe the length\n    // first byte: bit 8 = 1 and bits 7-1 = # of additional bytes\n    // other bytes: length in base 256, big-endian\n    var len = value.length();\n    var lenBytes = '';\n    do {\n      lenBytes += String.fromCharCode(len & 0xFF);\n      len = len >>> 8;\n    } while(len > 0);\n\n    // set first byte to # bytes used to store the length and turn on\n    // bit 8 to indicate long-form length is used\n    bytes.putByte(lenBytes.length | 0x80);\n\n    // concatenate length bytes in reverse since they were generated\n    // little endian and we need big endian\n    for(var i = lenBytes.length - 1; i >= 0; --i) {\n      bytes.putByte(lenBytes.charCodeAt(i));\n    }\n  }\n\n  // concatenate value bytes\n  bytes.putBuffer(value);\n  return bytes;\n};\n\n/**\n * Converts an OID dot-separated string to a byte buffer. The byte buffer\n * contains only the DER-encoded value, not any tag or length bytes.\n *\n * @param oid the OID dot-separated string.\n *\n * @return the byte buffer.\n */\nasn1.oidToDer = function(oid) {\n  // split OID into individual values\n  var values = oid.split('.');\n  var bytes = forge.util.createBuffer();\n\n  // first byte is 40 * value1 + value2\n  bytes.putByte(40 * parseInt(values[0], 10) + parseInt(values[1], 10));\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var last, valueBytes, value, b;\n  for(var i = 2; i < values.length; ++i) {\n    // produce value bytes in reverse because we don't know how many\n    // bytes it will take to store the value\n    last = true;\n    valueBytes = [];\n    value = parseInt(values[i], 10);\n    do {\n      b = value & 0x7F;\n      value = value >>> 7;\n      // if value is not last, then turn on 8th bit\n      if(!last) {\n        b |= 0x80;\n      }\n      valueBytes.push(b);\n      last = false;\n    } while(value > 0);\n\n    // add value bytes in reverse (needs to be in big endian)\n    for(var n = valueBytes.length - 1; n >= 0; --n) {\n      bytes.putByte(valueBytes[n]);\n    }\n  }\n\n  return bytes;\n};\n\n/**\n * Converts a DER-encoded byte buffer to an OID dot-separated string. The\n * byte buffer should contain only the DER-encoded value, not any tag or\n * length bytes.\n *\n * @param bytes the byte buffer.\n *\n * @return the OID dot-separated string.\n */\nasn1.derToOid = function(bytes) {\n  var oid;\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  // first byte is 40 * value1 + value2\n  var b = bytes.getByte();\n  oid = Math.floor(b / 40) + '.' + (b % 40);\n\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var value = 0;\n  while(bytes.length() > 0) {\n    b = bytes.getByte();\n    value = value << 7;\n    // not the last byte for the value\n    if(b & 0x80) {\n      value += b & 0x7F;\n    } else {\n      // last byte\n      oid += '.' + (value + b);\n      value = 0;\n    }\n  }\n\n  return oid;\n};\n\n/**\n * Converts a UTCTime value to a date.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Parsing that structure hasn't been implemented yet.\n *\n * @param utc the UTCTime value to convert.\n *\n * @return the date.\n */\nasn1.utcTimeToDate = function(utc) {\n  /* The following formats can be used:\n\n    YYMMDDhhmmZ\n    YYMMDDhhmm+hh'mm'\n    YYMMDDhhmm-hh'mm'\n    YYMMDDhhmmssZ\n    YYMMDDhhmmss+hh'mm'\n    YYMMDDhhmmss-hh'mm'\n\n    Where:\n\n    YY is the least significant two digits of the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  // if YY >= 50 use 19xx, if YY < 50 use 20xx\n  var year = parseInt(utc.substr(0, 2), 10);\n  year = (year >= 50) ? 1900 + year : 2000 + year;\n  var MM = parseInt(utc.substr(2, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(utc.substr(4, 2), 10);\n  var hh = parseInt(utc.substr(6, 2), 10);\n  var mm = parseInt(utc.substr(8, 2), 10);\n  var ss = 0;\n\n  // not just YYMMDDhhmmZ\n  if(utc.length > 11) {\n    // get character after minutes\n    var c = utc.charAt(10);\n    var end = 10;\n\n    // see if seconds are present\n    if(c !== '+' && c !== '-') {\n      // get seconds\n      ss = parseInt(utc.substr(10, 2), 10);\n      end += 2;\n    }\n  }\n\n  // update date\n  date.setUTCFullYear(year, MM, DD);\n  date.setUTCHours(hh, mm, ss, 0);\n\n  if(end) {\n    // get +/- after end of time\n    c = utc.charAt(end);\n    if(c === '+' || c === '-') {\n      // get hours+minutes offset\n      var hhoffset = parseInt(utc.substr(end + 1, 2), 10);\n      var mmoffset = parseInt(utc.substr(end + 4, 2), 10);\n\n      // calculate offset in milliseconds\n      var offset = hhoffset * 60 + mmoffset;\n      offset *= 60000;\n\n      // apply offset\n      if(c === '+') {\n        date.setTime(+date - offset);\n      } else {\n        date.setTime(+date + offset);\n      }\n    }\n  }\n\n  return date;\n};\n\n/**\n * Converts a GeneralizedTime value to a date.\n *\n * @param gentime the GeneralizedTime value to convert.\n *\n * @return the date.\n */\nasn1.generalizedTimeToDate = function(gentime) {\n  /* The following formats can be used:\n\n    YYYYMMDDHHMMSS\n    YYYYMMDDHHMMSS.fff\n    YYYYMMDDHHMMSSZ\n    YYYYMMDDHHMMSS.fffZ\n    YYYYMMDDHHMMSS+hh'mm'\n    YYYYMMDDHHMMSS.fff+hh'mm'\n    YYYYMMDDHHMMSS-hh'mm'\n    YYYYMMDDHHMMSS.fff-hh'mm'\n\n    Where:\n\n    YYYY is the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    .fff is the second fraction, accurate to three decimal places\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  var YYYY = parseInt(gentime.substr(0, 4), 10);\n  var MM = parseInt(gentime.substr(4, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(gentime.substr(6, 2), 10);\n  var hh = parseInt(gentime.substr(8, 2), 10);\n  var mm = parseInt(gentime.substr(10, 2), 10);\n  var ss = parseInt(gentime.substr(12, 2), 10);\n  var fff = 0;\n  var offset = 0;\n  var isUTC = false;\n\n  if(gentime.charAt(gentime.length - 1) === 'Z') {\n    isUTC = true;\n  }\n\n  var end = gentime.length - 5, c = gentime.charAt(end);\n  if(c === '+' || c === '-') {\n    // get hours+minutes offset\n    var hhoffset = parseInt(gentime.substr(end + 1, 2), 10);\n    var mmoffset = parseInt(gentime.substr(end + 4, 2), 10);\n\n    // calculate offset in milliseconds\n    offset = hhoffset * 60 + mmoffset;\n    offset *= 60000;\n\n    // apply offset\n    if(c === '+') {\n      offset *= -1;\n    }\n\n    isUTC = true;\n  }\n\n  // check for second fraction\n  if(gentime.charAt(14) === '.') {\n    fff = parseFloat(gentime.substr(14), 10) * 1000;\n  }\n\n  if(isUTC) {\n    date.setUTCFullYear(YYYY, MM, DD);\n    date.setUTCHours(hh, mm, ss, fff);\n\n    // apply offset\n    date.setTime(+date + offset);\n  } else {\n    date.setFullYear(YYYY, MM, DD);\n    date.setHours(hh, mm, ss, fff);\n  }\n\n  return date;\n};\n\n/**\n * Converts a date to a UTCTime value.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Converting to a GeneralizedTime hasn't been\n * implemented yet.\n *\n * @param date the date to convert.\n *\n * @return the UTCTime value.\n */\nasn1.dateToUtcTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYMMDDhhmmssZ\n  var format = [];\n  format.push(('' + date.getUTCFullYear()).substr(2));\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a date to a GeneralizedTime value.\n *\n * @param date the date to convert.\n *\n * @return the GeneralizedTime value as a string.\n */\nasn1.dateToGeneralizedTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYYYMMDDHHMMSSZ\n  var format = [];\n  format.push('' + date.getUTCFullYear());\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a javascript integer to a DER-encoded byte buffer to be used\n * as the value for an INTEGER type.\n *\n * @param x the integer.\n *\n * @return the byte buffer.\n */\nasn1.integerToDer = function(x) {\n  var rval = forge.util.createBuffer();\n  if(x >= -0x80 && x < 0x80) {\n    return rval.putSignedInt(x, 8);\n  }\n  if(x >= -0x8000 && x < 0x8000) {\n    return rval.putSignedInt(x, 16);\n  }\n  if(x >= -0x800000 && x < 0x800000) {\n    return rval.putSignedInt(x, 24);\n  }\n  if(x >= -0x80000000 && x < 0x80000000) {\n    return rval.putSignedInt(x, 32);\n  }\n  var error = new Error('Integer too large; max is 32-bits.');\n  error.integer = x;\n  throw error;\n};\n\n/**\n * Converts a DER-encoded byte buffer to a javascript integer. This is\n * typically used to decode the value of an INTEGER type.\n *\n * @param bytes the byte buffer.\n *\n * @return the integer.\n */\nasn1.derToInteger = function(bytes) {\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var n = bytes.length() * 8;\n  if(n > 32) {\n    throw new Error('Integer too large; max is 32-bits.');\n  }\n  return bytes.getSignedInt(n);\n};\n\n/**\n * Validates that the given ASN.1 object is at least a super set of the\n * given ASN.1 structure. Only tag classes and types are checked. An\n * optional map may also be provided to capture ASN.1 values while the\n * structure is checked.\n *\n * To capture an ASN.1 value, set an object in the validator's 'capture'\n * parameter to the key to use in the capture map. To capture the full\n * ASN.1 object, specify 'captureAsn1'. To capture BIT STRING bytes, including\n * the leading unused bits counter byte, specify 'captureBitStringContents'.\n * To capture BIT STRING bytes, without the leading unused bits counter byte,\n * specify 'captureBitStringValue'.\n *\n * Objects in the validator may set a field 'optional' to true to indicate\n * that it isn't necessary to pass validation.\n *\n * @param obj the ASN.1 object to validate.\n * @param v the ASN.1 structure validator.\n * @param capture an optional map to capture values in.\n * @param errors an optional array for storing validation errors.\n *\n * @return true on success, false on failure.\n */\nasn1.validate = function(obj, v, capture, errors) {\n  var rval = false;\n\n  // ensure tag class and type are the same if specified\n  if((obj.tagClass === v.tagClass || typeof(v.tagClass) === 'undefined') &&\n    (obj.type === v.type || typeof(v.type) === 'undefined')) {\n    // ensure constructed flag is the same if specified\n    if(obj.constructed === v.constructed ||\n      typeof(v.constructed) === 'undefined') {\n      rval = true;\n\n      // handle sub values\n      if(v.value && forge.util.isArray(v.value)) {\n        var j = 0;\n        for(var i = 0; rval && i < v.value.length; ++i) {\n          rval = v.value[i].optional || false;\n          if(obj.value[j]) {\n            rval = asn1.validate(obj.value[j], v.value[i], capture, errors);\n            if(rval) {\n              ++j;\n            } else if(v.value[i].optional) {\n              rval = true;\n            }\n          }\n          if(!rval && errors) {\n            errors.push(\n              '[' + v.name + '] ' +\n              'Tag class \"' + v.tagClass + '\", type \"' +\n              v.type + '\" expected value length \"' +\n              v.value.length + '\", got \"' +\n              obj.value.length + '\"');\n          }\n        }\n      }\n\n      if(rval && capture) {\n        if(v.capture) {\n          capture[v.capture] = obj.value;\n        }\n        if(v.captureAsn1) {\n          capture[v.captureAsn1] = obj;\n        }\n        if(v.captureBitStringContents && 'bitStringContents' in obj) {\n          capture[v.captureBitStringContents] = obj.bitStringContents;\n        }\n        if(v.captureBitStringValue && 'bitStringContents' in obj) {\n          var value;\n          if(obj.bitStringContents.length < 2) {\n            capture[v.captureBitStringValue] = '';\n          } else {\n            // FIXME: support unused bits with data shifting\n            var unused = obj.bitStringContents.charCodeAt(0);\n            if(unused !== 0) {\n              throw new Error(\n                'captureBitStringValue only supported for zero unused bits');\n            }\n            capture[v.captureBitStringValue] = obj.bitStringContents.slice(1);\n          }\n        }\n      }\n    } else if(errors) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected constructed \"' + v.constructed + '\", got \"' +\n        obj.constructed + '\"');\n    }\n  } else if(errors) {\n    if(obj.tagClass !== v.tagClass) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected tag class \"' + v.tagClass + '\", got \"' +\n        obj.tagClass + '\"');\n    }\n    if(obj.type !== v.type) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected type \"' + v.type + '\", got \"' + obj.type + '\"');\n    }\n  }\n  return rval;\n};\n\n// regex for testing for non-latin characters\nvar _nonLatinRegex = /[^\\\\u0000-\\\\u00ff]/;\n\n/**\n * Pretty prints an ASN.1 object to a string.\n *\n * @param obj the object to write out.\n * @param level the level in the tree.\n * @param indentation the indentation to use.\n *\n * @return the string.\n */\nasn1.prettyPrint = function(obj, level, indentation) {\n  var rval = '';\n\n  // set default level and indentation\n  level = level || 0;\n  indentation = indentation || 2;\n\n  // start new line for deep levels\n  if(level > 0) {\n    rval += '\\n';\n  }\n\n  // create indent\n  var indent = '';\n  for(var i = 0; i < level * indentation; ++i) {\n    indent += ' ';\n  }\n\n  // print class:type\n  rval += indent + 'Tag: ';\n  switch(obj.tagClass) {\n  case asn1.Class.UNIVERSAL:\n    rval += 'Universal:';\n    break;\n  case asn1.Class.APPLICATION:\n    rval += 'Application:';\n    break;\n  case asn1.Class.CONTEXT_SPECIFIC:\n    rval += 'Context-Specific:';\n    break;\n  case asn1.Class.PRIVATE:\n    rval += 'Private:';\n    break;\n  }\n\n  if(obj.tagClass === asn1.Class.UNIVERSAL) {\n    rval += obj.type;\n\n    // known types\n    switch(obj.type) {\n    case asn1.Type.NONE:\n      rval += ' (None)';\n      break;\n    case asn1.Type.BOOLEAN:\n      rval += ' (Boolean)';\n      break;\n    case asn1.Type.INTEGER:\n      rval += ' (Integer)';\n      break;\n    case asn1.Type.BITSTRING:\n      rval += ' (Bit string)';\n      break;\n    case asn1.Type.OCTETSTRING:\n      rval += ' (Octet string)';\n      break;\n    case asn1.Type.NULL:\n      rval += ' (Null)';\n      break;\n    case asn1.Type.OID:\n      rval += ' (Object Identifier)';\n      break;\n    case asn1.Type.ODESC:\n      rval += ' (Object Descriptor)';\n      break;\n    case asn1.Type.EXTERNAL:\n      rval += ' (External or Instance of)';\n      break;\n    case asn1.Type.REAL:\n      rval += ' (Real)';\n      break;\n    case asn1.Type.ENUMERATED:\n      rval += ' (Enumerated)';\n      break;\n    case asn1.Type.EMBEDDED:\n      rval += ' (Embedded PDV)';\n      break;\n    case asn1.Type.UTF8:\n      rval += ' (UTF8)';\n      break;\n    case asn1.Type.ROID:\n      rval += ' (Relative Object Identifier)';\n      break;\n    case asn1.Type.SEQUENCE:\n      rval += ' (Sequence)';\n      break;\n    case asn1.Type.SET:\n      rval += ' (Set)';\n      break;\n    case asn1.Type.PRINTABLESTRING:\n      rval += ' (Printable String)';\n      break;\n    case asn1.Type.IA5String:\n      rval += ' (IA5String (ASCII))';\n      break;\n    case asn1.Type.UTCTIME:\n      rval += ' (UTC time)';\n      break;\n    case asn1.Type.GENERALIZEDTIME:\n      rval += ' (Generalized time)';\n      break;\n    case asn1.Type.BMPSTRING:\n      rval += ' (BMP String)';\n      break;\n    }\n  } else {\n    rval += obj.type;\n  }\n\n  rval += '\\n';\n  rval += indent + 'Constructed: ' + obj.constructed + '\\n';\n\n  if(obj.composed) {\n    var subvalues = 0;\n    var sub = '';\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        subvalues += 1;\n        sub += asn1.prettyPrint(obj.value[i], level + 1, indentation);\n        if((i + 1) < obj.value.length) {\n          sub += ',';\n        }\n      }\n    }\n    rval += indent + 'Sub values: ' + subvalues + sub;\n  } else {\n    rval += indent + 'Value: ';\n    if(obj.type === asn1.Type.OID) {\n      var oid = asn1.derToOid(obj.value);\n      rval += oid;\n      if(forge.pki && forge.pki.oids) {\n        if(oid in forge.pki.oids) {\n          rval += ' (' + forge.pki.oids[oid] + ') ';\n        }\n      }\n    }\n    if(obj.type === asn1.Type.INTEGER) {\n      try {\n        rval += asn1.derToInteger(obj.value);\n      } catch(ex) {\n        rval += '0x' + forge.util.bytesToHex(obj.value);\n      }\n    } else if(obj.type === asn1.Type.BITSTRING) {\n      // TODO: shift bits as needed to display without padding\n      if(obj.value.length > 1) {\n        // remove unused bits field\n        rval += '0x' + forge.util.bytesToHex(obj.value.slice(1));\n      } else {\n        rval += '(none)';\n      }\n      // show unused bit count\n      if(obj.value.length > 0) {\n        var unused = obj.value.charCodeAt(0);\n        if(unused == 1) {\n          rval += ' (1 unused bit shown)';\n        } else if(unused > 1) {\n          rval += ' (' + unused + ' unused bits shown)';\n        }\n      }\n    } else if(obj.type === asn1.Type.OCTETSTRING) {\n      if(!_nonLatinRegex.test(obj.value)) {\n        rval += '(' + obj.value + ') ';\n      }\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.type === asn1.Type.UTF8) {\n      try {\n        rval += forge.util.decodeUtf8(obj.value);\n      } catch(e) {\n        if(e.message === 'URI malformed') {\n          rval +=\n            '0x' + forge.util.bytesToHex(obj.value) + ' (malformed UTF8)';\n        } else {\n          throw e;\n        }\n      }\n    } else if(obj.type === asn1.Type.PRINTABLESTRING ||\n      obj.type === asn1.Type.IA5String) {\n      rval += obj.value;\n    } else if(_nonLatinRegex.test(obj.value)) {\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.value.length === 0) {\n      rval += '[null]';\n    } else {\n      rval += obj.value;\n    }\n  }\n\n  return rval;\n};\n","/**\n * Base-N/Base-X encoding/decoding functions.\n *\n * Original implementation from base-x:\n * https://github.com/cryptocoinjs/base-x\n *\n * Which is MIT licensed:\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nvar api = {};\nmodule.exports = api;\n\n// baseN alphabet indexes\nvar _reverseAlphabets = {};\n\n/**\n * BaseN-encodes a Uint8Array using the given alphabet.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the baseN-encoded output string.\n */\napi.encode = function(input, alphabet, maxline) {\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n  if(maxline !== undefined && typeof maxline !== 'number') {\n    throw new TypeError('\"maxline\" must be a number.');\n  }\n\n  var output = '';\n\n  if(!(input instanceof Uint8Array)) {\n    // assume forge byte buffer\n    output = _encodeWithByteBuffer(input, alphabet);\n  } else {\n    var i = 0;\n    var base = alphabet.length;\n    var first = alphabet.charAt(0);\n    var digits = [0];\n    for(i = 0; i < input.length; ++i) {\n      for(var j = 0, carry = input[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8;\n        digits[j] = carry % base;\n        carry = (carry / base) | 0;\n      }\n\n      while(carry > 0) {\n        digits.push(carry % base);\n        carry = (carry / base) | 0;\n      }\n    }\n\n    // deal with leading zeros\n    for(i = 0; input[i] === 0 && i < input.length - 1; ++i) {\n      output += first;\n    }\n    // convert digits to a string\n    for(i = digits.length - 1; i >= 0; --i) {\n      output += alphabet[digits[i]];\n    }\n  }\n\n  if(maxline) {\n    var regex = new RegExp('.{1,' + maxline + '}', 'g');\n    output = output.match(regex).join('\\r\\n');\n  }\n\n  return output;\n};\n\n/**\n * Decodes a baseN-encoded (using the given alphabet) string to a\n * Uint8Array.\n *\n * @param input the baseN-encoded input string.\n *\n * @return the Uint8Array.\n */\napi.decode = function(input, alphabet) {\n  if(typeof input !== 'string') {\n    throw new TypeError('\"input\" must be a string.');\n  }\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n\n  var table = _reverseAlphabets[alphabet];\n  if(!table) {\n    // compute reverse alphabet\n    table = _reverseAlphabets[alphabet] = [];\n    for(var i = 0; i < alphabet.length; ++i) {\n      table[alphabet.charCodeAt(i)] = i;\n    }\n  }\n\n  // remove whitespace characters\n  input = input.replace(/\\s/g, '');\n\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var bytes = [0];\n  for(var i = 0; i < input.length; i++) {\n    var value = table[input.charCodeAt(i)];\n    if(value === undefined) {\n      return;\n    }\n\n    for(var j = 0, carry = value; j < bytes.length; ++j) {\n      carry += bytes[j] * base;\n      bytes[j] = carry & 0xff;\n      carry >>= 8;\n    }\n\n    while(carry > 0) {\n      bytes.push(carry & 0xff);\n      carry >>= 8;\n    }\n  }\n\n  // deal with leading zeros\n  for(var k = 0; input[k] === first && k < input.length - 1; ++k) {\n    bytes.push(0);\n  }\n\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(bytes.reverse());\n  }\n\n  return new Uint8Array(bytes.reverse());\n};\n\nfunction _encodeWithByteBuffer(input, alphabet) {\n  var i = 0;\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var digits = [0];\n  for(i = 0; i < input.length(); ++i) {\n    for(var j = 0, carry = input.at(i); j < digits.length; ++j) {\n      carry += digits[j] << 8;\n      digits[j] = carry % base;\n      carry = (carry / base) | 0;\n    }\n\n    while(carry > 0) {\n      digits.push(carry % base);\n      carry = (carry / base) | 0;\n    }\n  }\n\n  var output = '';\n\n  // deal with leading zeros\n  for(i = 0; input.at(i) === 0 && i < input.length() - 1; ++i) {\n    output += first;\n  }\n  // convert digits to a string\n  for(i = digits.length - 1; i >= 0; --i) {\n    output += alphabet[digits[i]];\n  }\n\n  return output;\n}\n","/**\n * Cipher base API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nmodule.exports = forge.cipher = forge.cipher || {};\n\n// registered algorithms\nforge.cipher.algorithms = forge.cipher.algorithms || {};\n\n/**\n * Creates a cipher object that can be used to encrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createCipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: false\n  });\n};\n\n/**\n * Creates a decipher object that can be used to decrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createDecipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: true\n  });\n};\n\n/**\n * Registers an algorithm by name. If the name was already registered, the\n * algorithm API object will be overwritten.\n *\n * @param name the name of the algorithm.\n * @param algorithm the algorithm API object.\n */\nforge.cipher.registerAlgorithm = function(name, algorithm) {\n  name = name.toUpperCase();\n  forge.cipher.algorithms[name] = algorithm;\n};\n\n/**\n * Gets a registered algorithm by name.\n *\n * @param name the name of the algorithm.\n *\n * @return the algorithm, if found, null if not.\n */\nforge.cipher.getAlgorithm = function(name) {\n  name = name.toUpperCase();\n  if(name in forge.cipher.algorithms) {\n    return forge.cipher.algorithms[name];\n  }\n  return null;\n};\n\nvar BlockCipher = forge.cipher.BlockCipher = function(options) {\n  this.algorithm = options.algorithm;\n  this.mode = this.algorithm.mode;\n  this.blockSize = this.mode.blockSize;\n  this._finish = false;\n  this._input = null;\n  this.output = null;\n  this._op = options.decrypt ? this.mode.decrypt : this.mode.encrypt;\n  this._decrypt = options.decrypt;\n  this.algorithm.initialize(options);\n};\n\n/**\n * Starts or restarts the encryption or decryption process, whichever\n * was previously configured.\n *\n * For non-GCM mode, the IV may be a binary-encoded string of bytes, an array\n * of bytes, a byte buffer, or an array of 32-bit integers. If the IV is in\n * bytes, then it must be Nb (16) bytes in length. If the IV is given in as\n * 32-bit integers, then it must be 4 integers long.\n *\n * Note: an IV is not required or used in ECB mode.\n *\n * For GCM-mode, the IV must be given as a binary-encoded string of bytes or\n * a byte buffer. The number of bytes should be 12 (96 bits) as recommended\n * by NIST SP-800-38D but another length may be given.\n *\n * @param options the options to use:\n *          iv the initialization vector to use as a binary-encoded string of\n *            bytes, null to reuse the last ciphered block from a previous\n *            update() (this \"residue\" method is for legacy support only).\n *          additionalData additional authentication data as a binary-encoded\n *            string of bytes, for 'GCM' mode, (default: none).\n *          tagLength desired length of authentication tag, in bits, for\n *            'GCM' mode (0-128, default: 128).\n *          tag the authentication tag to check if decrypting, as a\n *             binary-encoded string of bytes.\n *          output the output the buffer to write to, null to create one.\n */\nBlockCipher.prototype.start = function(options) {\n  options = options || {};\n  var opts = {};\n  for(var key in options) {\n    opts[key] = options[key];\n  }\n  opts.decrypt = this._decrypt;\n  this._finish = false;\n  this._input = forge.util.createBuffer();\n  this.output = options.output || forge.util.createBuffer();\n  this.mode.start(opts);\n};\n\n/**\n * Updates the next block according to the cipher mode.\n *\n * @param input the buffer to read from.\n */\nBlockCipher.prototype.update = function(input) {\n  if(input) {\n    // input given, so empty it into the input buffer\n    this._input.putBuffer(input);\n  }\n\n  // do cipher operation until it needs more input and not finished\n  while(!this._op.call(this.mode, this._input, this.output, this._finish) &&\n    !this._finish) {}\n\n  // free consumed memory from input buffer\n  this._input.compact();\n};\n\n/**\n * Finishes encrypting or decrypting.\n *\n * @param pad a padding function to use in CBC mode, null for default,\n *          signature(blockSize, buffer, decrypt).\n *\n * @return true if successful, false on error.\n */\nBlockCipher.prototype.finish = function(pad) {\n  // backwards-compatibility w/deprecated padding API\n  // Note: will overwrite padding functions even after another start() call\n  if(pad && (this.mode.name === 'ECB' || this.mode.name === 'CBC')) {\n    this.mode.pad = function(input) {\n      return pad(this.blockSize, input, false);\n    };\n    this.mode.unpad = function(output) {\n      return pad(this.blockSize, output, true);\n    };\n  }\n\n  // build options for padding and afterFinish functions\n  var options = {};\n  options.decrypt = this._decrypt;\n\n  // get # of bytes that won't fill a block\n  options.overflow = this._input.length() % this.blockSize;\n\n  if(!this._decrypt && this.mode.pad) {\n    if(!this.mode.pad(this._input, options)) {\n      return false;\n    }\n  }\n\n  // do final update\n  this._finish = true;\n  this.update();\n\n  if(this._decrypt && this.mode.unpad) {\n    if(!this.mode.unpad(this.output, options)) {\n      return false;\n    }\n  }\n\n  if(this.mode.afterFinish) {\n    if(!this.mode.afterFinish(this.output, options)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","/**\n * Supported cipher modes.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.cipher = forge.cipher || {};\n\n// supported cipher modes\nvar modes = module.exports = forge.cipher.modes = forge.cipher.modes || {};\n\n/** Electronic codebook (ECB) (Don't use this; it's not secure) **/\n\nmodes.ecb = function(options) {\n  options = options || {};\n  this.name = 'ECB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.ecb.prototype.start = function(options) {};\n\nmodes.ecb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.ecb.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher-block Chaining (CBC) **/\n\nmodes.cbc = function(options) {\n  options = options || {};\n  this.name = 'CBC';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.cbc.prototype.start = function(options) {\n  // Note: legacy support for using IV residue (has security flaws)\n  // if IV is null, reuse block from previous processing\n  if(options.iv === null) {\n    // must have a previous block\n    if(!this._prev) {\n      throw new Error('Invalid IV parameter.');\n    }\n    this._iv = this._prev.slice(0);\n  } else if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  } else {\n    // save IV as \"previous\" block\n    this._iv = transformIV(options.iv, this.blockSize);\n    this._prev = this._iv.slice(0);\n  }\n};\n\nmodes.cbc.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  // CBC XOR's IV (or previous block) with plaintext\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = this._prev[i] ^ input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous block\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n  this._prev = this._outBlock;\n};\n\nmodes.cbc.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous ciphered block\n  // CBC XOR's IV (or previous block) with ciphertext\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._prev[i] ^ this._outBlock[i]);\n  }\n  this._prev = this._inBlock.slice(0);\n};\n\nmodes.cbc.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.cbc.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher feedback (CFB) **/\n\nmodes.cfb = function(options) {\n  options = options || {};\n  this.name = 'CFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32() ^ this._outBlock[i];\n      output.putInt32(this._inBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32() ^ this._outBlock[i];\n    this._partialOutput.putInt32(this._partialBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32();\n      output.putInt32(this._inBlock[i] ^ this._outBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32();\n    this._partialOutput.putInt32(this._partialBlock[i] ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\n/** Output feedback (OFB) **/\n\nmodes.ofb = function(options) {\n  options = options || {};\n  this.name = 'OFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(input.length() === 0) {\n    return true;\n  }\n\n  // encrypt block (OFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output and update next input\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n      this._inBlock[i] = this._outBlock[i];\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._outBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.decrypt = modes.ofb.prototype.encrypt;\n\n/** Counter (CTR) **/\n\nmodes.ctr = function(options) {\n  options = options || {};\n  this.name = 'CTR';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CTR always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes > 0) {\n      // block still incomplete, restore input buffer\n      input.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // block complete, increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.ctr.prototype.decrypt = modes.ctr.prototype.encrypt;\n\n/** Galois/Counter Mode (GCM) **/\n\nmodes.gcm = function(options) {\n  options = options || {};\n  this.name = 'GCM';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n\n  // R is actually this value concatenated with 120 more zero bits, but\n  // we only XOR against R so the other zeros have no effect -- we just\n  // apply this value to the first integer in a block\n  this._R = 0xE1000000;\n};\n\nmodes.gcm.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // ensure IV is a byte buffer\n  var iv = forge.util.createBuffer(options.iv);\n\n  // no ciphered data processed yet\n  this._cipherLength = 0;\n\n  // default additional data is none\n  var additionalData;\n  if('additionalData' in options) {\n    additionalData = forge.util.createBuffer(options.additionalData);\n  } else {\n    additionalData = forge.util.createBuffer();\n  }\n\n  // default tag length is 128 bits\n  if('tagLength' in options) {\n    this._tagLength = options.tagLength;\n  } else {\n    this._tagLength = 128;\n  }\n\n  // if tag is given, ensure tag matches tag length\n  this._tag = null;\n  if(options.decrypt) {\n    // save tag to check later\n    this._tag = forge.util.createBuffer(options.tag).getBytes();\n    if(this._tag.length !== (this._tagLength / 8)) {\n      throw new Error('Authentication tag does not match tag length.');\n    }\n  }\n\n  // create tmp storage for hash calculation\n  this._hashBlock = new Array(this._ints);\n\n  // no tag generated yet\n  this.tag = null;\n\n  // generate hash subkey\n  // (apply block cipher to \"zero\" block)\n  this._hashSubkey = new Array(this._ints);\n  this.cipher.encrypt([0, 0, 0, 0], this._hashSubkey);\n\n  // generate table M\n  // use 4-bit tables (32 component decomposition of a 16 byte value)\n  // 8-bit tables take more space and are known to have security\n  // vulnerabilities (in native implementations)\n  this.componentBits = 4;\n  this._m = this.generateHashTable(this._hashSubkey, this.componentBits);\n\n  // Note: support IV length different from 96 bits? (only supporting\n  // 96 bits is recommended by NIST SP-800-38D)\n  // generate J_0\n  var ivLength = iv.length();\n  if(ivLength === 12) {\n    // 96-bit IV\n    this._j0 = [iv.getInt32(), iv.getInt32(), iv.getInt32(), 1];\n  } else {\n    // IV is NOT 96-bits\n    this._j0 = [0, 0, 0, 0];\n    while(iv.length() > 0) {\n      this._j0 = this.ghash(\n        this._hashSubkey, this._j0,\n        [iv.getInt32(), iv.getInt32(), iv.getInt32(), iv.getInt32()]);\n    }\n    this._j0 = this.ghash(\n      this._hashSubkey, this._j0, [0, 0].concat(from64To32(ivLength * 8)));\n  }\n\n  // generate ICB (initial counter block)\n  this._inBlock = this._j0.slice(0);\n  inc32(this._inBlock);\n  this._partialBytes = 0;\n\n  // consume authentication data\n  additionalData = forge.util.createBuffer(additionalData);\n  // save additional data length as a BE 64-bit number\n  this._aDataLength = from64To32(additionalData.length() * 8);\n  // pad additional data to 128 bit (16 byte) block size\n  var overflow = additionalData.length() % this.blockSize;\n  if(overflow) {\n    additionalData.fillWithByte(0, this.blockSize - overflow);\n  }\n  this._s = [0, 0, 0, 0];\n  while(additionalData.length() > 0) {\n    this._s = this.ghash(this._hashSubkey, this._s, [\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32()\n    ]);\n  }\n};\n\nmodes.gcm.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(this._outBlock[i] ^= input.getInt32());\n    }\n    this._cipherLength += this.blockSize;\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes <= 0 || finish) {\n      // handle overflow prior to hashing\n      if(finish) {\n        // get block overflow\n        var overflow = inputLength % this.blockSize;\n        this._cipherLength += overflow;\n        // truncate for hash function\n        this._partialOutput.truncate(this.blockSize - overflow);\n      } else {\n        this._cipherLength += this.blockSize;\n      }\n\n      // get output block for hashing\n      for(var i = 0; i < this._ints; ++i) {\n        this._outBlock[i] = this._partialOutput.getInt32();\n      }\n      this._partialOutput.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      // block still incomplete, restore input buffer, get partial output,\n      // and return early\n      input.read -= this.blockSize;\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // update hash block S\n  this._s = this.ghash(this._hashSubkey, this._s, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.gcm.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength < this.blockSize && !(finish && inputLength > 0)) {\n    return true;\n  }\n\n  // encrypt block (GCM always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n\n  // update hash block S\n  this._hashBlock[0] = input.getInt32();\n  this._hashBlock[1] = input.getInt32();\n  this._hashBlock[2] = input.getInt32();\n  this._hashBlock[3] = input.getInt32();\n  this._s = this.ghash(this._hashSubkey, this._s, this._hashBlock);\n\n  // XOR hash input with output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i] ^ this._hashBlock[i]);\n  }\n\n  // increment cipher data length\n  if(inputLength < this.blockSize) {\n    this._cipherLength += inputLength % this.blockSize;\n  } else {\n    this._cipherLength += this.blockSize;\n  }\n};\n\nmodes.gcm.prototype.afterFinish = function(output, options) {\n  var rval = true;\n\n  // handle overflow\n  if(options.decrypt && options.overflow) {\n    output.truncate(this.blockSize - options.overflow);\n  }\n\n  // handle authentication tag\n  this.tag = forge.util.createBuffer();\n\n  // concatenate additional data length with cipher length\n  var lengths = this._aDataLength.concat(from64To32(this._cipherLength * 8));\n\n  // include lengths in hash\n  this._s = this.ghash(this._hashSubkey, this._s, lengths);\n\n  // do GCTR(J_0, S)\n  var tag = [];\n  this.cipher.encrypt(this._j0, tag);\n  for(var i = 0; i < this._ints; ++i) {\n    this.tag.putInt32(this._s[i] ^ tag[i]);\n  }\n\n  // trim tag to length\n  this.tag.truncate(this.tag.length() % (this._tagLength / 8));\n\n  // check authentication tag\n  if(options.decrypt && this.tag.bytes() !== this._tag) {\n    rval = false;\n  }\n\n  return rval;\n};\n\n/**\n * See NIST SP-800-38D 6.3 (Algorithm 1). This function performs Galois\n * field multiplication. The field, GF(2^128), is defined by the polynomial:\n *\n * x^128 + x^7 + x^2 + x + 1\n *\n * Which is represented in little-endian binary form as: 11100001 (0xe1). When\n * the value of a coefficient is 1, a bit is set. The value R, is the\n * concatenation of this value and 120 zero bits, yielding a 128-bit value\n * which matches the block size.\n *\n * This function will multiply two elements (vectors of bytes), X and Y, in\n * the field GF(2^128). The result is initialized to zero. For each bit of\n * X (out of 128), x_i, if x_i is set, then the result is multiplied (XOR'd)\n * by the current value of Y. For each bit, the value of Y will be raised by\n * a power of x (multiplied by the polynomial x). This can be achieved by\n * shifting Y once to the right. If the current value of Y, prior to being\n * multiplied by x, has 0 as its LSB, then it is a 127th degree polynomial.\n * Otherwise, we must divide by R after shifting to find the remainder.\n *\n * @param x the first block to multiply by the second.\n * @param y the second block to multiply by the first.\n *\n * @return the block result of the multiplication.\n */\nmodes.gcm.prototype.multiply = function(x, y) {\n  var z_i = [0, 0, 0, 0];\n  var v_i = y.slice(0);\n\n  // calculate Z_128 (block has 128 bits)\n  for(var i = 0; i < 128; ++i) {\n    // if x_i is 0, Z_{i+1} = Z_i (unchanged)\n    // else Z_{i+1} = Z_i ^ V_i\n    // get x_i by finding 32-bit int position, then left shift 1 by remainder\n    var x_i = x[(i / 32) | 0] & (1 << (31 - i % 32));\n    if(x_i) {\n      z_i[0] ^= v_i[0];\n      z_i[1] ^= v_i[1];\n      z_i[2] ^= v_i[2];\n      z_i[3] ^= v_i[3];\n    }\n\n    // if LSB(V_i) is 1, V_i = V_i >> 1\n    // else V_i = (V_i >> 1) ^ R\n    this.pow(v_i, v_i);\n  }\n\n  return z_i;\n};\n\nmodes.gcm.prototype.pow = function(x, out) {\n  // if LSB(x) is 1, x = x >>> 1\n  // else x = (x >>> 1) ^ R\n  var lsb = x[3] & 1;\n\n  // always do x >>> 1:\n  // starting with the rightmost integer, shift each integer to the right\n  // one bit, pulling in the bit from the integer to the left as its top\n  // most bit (do this for the last 3 integers)\n  for(var i = 3; i > 0; --i) {\n    out[i] = (x[i] >>> 1) | ((x[i - 1] & 1) << 31);\n  }\n  // shift the first integer normally\n  out[0] = x[0] >>> 1;\n\n  // if lsb was not set, then polynomial had a degree of 127 and doesn't\n  // need to divided; otherwise, XOR with R to find the remainder; we only\n  // need to XOR the first integer since R technically ends w/120 zero bits\n  if(lsb) {\n    out[0] ^= this._R;\n  }\n};\n\nmodes.gcm.prototype.tableMultiply = function(x) {\n  // assumes 4-bit tables are used\n  var z = [0, 0, 0, 0];\n  for(var i = 0; i < 32; ++i) {\n    var idx = (i / 8) | 0;\n    var x_i = (x[idx] >>> ((7 - (i % 8)) * 4)) & 0xF;\n    var ah = this._m[i][x_i];\n    z[0] ^= ah[0];\n    z[1] ^= ah[1];\n    z[2] ^= ah[2];\n    z[3] ^= ah[3];\n  }\n  return z;\n};\n\n/**\n * A continuing version of the GHASH algorithm that operates on a single\n * block. The hash block, last hash value (Ym) and the new block to hash\n * are given.\n *\n * @param h the hash block.\n * @param y the previous value for Ym, use [0, 0, 0, 0] for a new hash.\n * @param x the block to hash.\n *\n * @return the hashed value (Ym).\n */\nmodes.gcm.prototype.ghash = function(h, y, x) {\n  y[0] ^= x[0];\n  y[1] ^= x[1];\n  y[2] ^= x[2];\n  y[3] ^= x[3];\n  return this.tableMultiply(y);\n  //return this.multiply(y, h);\n};\n\n/**\n * Precomputes a table for multiplying against the hash subkey. This\n * mechanism provides a substantial speed increase over multiplication\n * performed without a table. The table-based multiplication this table is\n * for solves X * H by multiplying each component of X by H and then\n * composing the results together using XOR.\n *\n * This function can be used to generate tables with different bit sizes\n * for the components, however, this implementation assumes there are\n * 32 components of X (which is a 16 byte vector), therefore each component\n * takes 4-bits (so the table is constructed with bits=4).\n *\n * @param h the hash subkey.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateHashTable = function(h, bits) {\n  // TODO: There are further optimizations that would use only the\n  // first table M_0 (or some variant) along with a remainder table;\n  // this can be explored in the future\n  var multiplier = 8 / bits;\n  var perInt = 4 * multiplier;\n  var size = 16 * multiplier;\n  var m = new Array(size);\n  for(var i = 0; i < size; ++i) {\n    var tmp = [0, 0, 0, 0];\n    var idx = (i / perInt) | 0;\n    var shft = ((perInt - 1 - (i % perInt)) * bits);\n    tmp[idx] = (1 << (bits - 1)) << shft;\n    m[i] = this.generateSubHashTable(this.multiply(tmp, h), bits);\n  }\n  return m;\n};\n\n/**\n * Generates a table for multiplying against the hash subkey for one\n * particular component (out of all possible component values).\n *\n * @param mid the pre-multiplied value for the middle key of the table.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateSubHashTable = function(mid, bits) {\n  // compute the table quickly by minimizing the number of\n  // POW operations -- they only need to be performed for powers of 2,\n  // all other entries can be composed from those powers using XOR\n  var size = 1 << bits;\n  var half = size >>> 1;\n  var m = new Array(size);\n  m[half] = mid.slice(0);\n  var i = half >>> 1;\n  while(i > 0) {\n    // raise m0[2 * i] and store in m0[i]\n    this.pow(m[2 * i], m[i] = []);\n    i >>= 1;\n  }\n  i = 2;\n  while(i < half) {\n    for(var j = 1; j < i; ++j) {\n      var m_i = m[i];\n      var m_j = m[j];\n      m[i + j] = [\n        m_i[0] ^ m_j[0],\n        m_i[1] ^ m_j[1],\n        m_i[2] ^ m_j[2],\n        m_i[3] ^ m_j[3]\n      ];\n    }\n    i *= 2;\n  }\n  m[0] = [0, 0, 0, 0];\n  /* Note: We could avoid storing these by doing composition during multiply\n  calculate top half using composition by speed is preferred. */\n  for(i = half + 1; i < size; ++i) {\n    var c = m[i ^ half];\n    m[i] = [mid[0] ^ c[0], mid[1] ^ c[1], mid[2] ^ c[2], mid[3] ^ c[3]];\n  }\n  return m;\n};\n\n/** Utility functions */\n\nfunction transformIV(iv, blockSize) {\n  if(typeof iv === 'string') {\n    // convert iv string into byte buffer\n    iv = forge.util.createBuffer(iv);\n  }\n\n  if(forge.util.isArray(iv) && iv.length > 4) {\n    // convert iv byte array into byte buffer\n    var tmp = iv;\n    iv = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      iv.putByte(tmp[i]);\n    }\n  }\n\n  if(iv.length() < blockSize) {\n    throw new Error(\n      'Invalid IV length; got ' + iv.length() +\n      ' bytes and expected ' + blockSize + ' bytes.');\n  }\n\n  if(!forge.util.isArray(iv)) {\n    // convert iv byte buffer into 32-bit integer array\n    var ints = [];\n    var blocks = blockSize / 4;\n    for(var i = 0; i < blocks; ++i) {\n      ints.push(iv.getInt32());\n    }\n    iv = ints;\n  }\n\n  return iv;\n}\n\nfunction inc32(block) {\n  // increment last 32 bits of block only\n  block[block.length - 1] = (block[block.length - 1] + 1) & 0xFFFFFFFF;\n}\n\nfunction from64To32(num) {\n  // convert 64-bit number to two BE Int32s\n  return [(num / 0x100000000) | 0, num & 0xFFFFFFFF];\n}\n","/**\n * DES (Data Encryption Standard) implementation.\n *\n * This implementation supports DES as well as 3DES-EDE in ECB and CBC mode.\n * It is based on the BSD-licensed implementation by Paul Tero:\n *\n * Paul Tero, July 2001\n * http://www.tero.co.uk/des/\n *\n * Optimised for performance with large blocks by\n * Michael Hayworth, November 2001\n * http://www.netdealing.com\n *\n * THIS SOFTWARE IS PROVIDED \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./cipher');\nrequire('./cipherModes');\nrequire('./util');\n\n/* DES API */\nmodule.exports = forge.des = forge.des || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new DES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the DES algorithm object.\n */\nforge.des.Algorithm = function(name, mode) {\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 8,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this DES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.des.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = forge.util.createBuffer(options.key);\n  if(this.name.indexOf('3DES') === 0) {\n    if(key.length() !== 24) {\n      throw new Error('Invalid Triple-DES key size: ' + key.length() * 8);\n    }\n  }\n\n  // do key expansion to 16 or 48 subkeys (single or triple DES)\n  this._keys = _createKeys(key);\n  this._init = true;\n};\n\n/** Register DES algorithms **/\n\nregisterAlgorithm('DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('DES-CTR', forge.cipher.modes.ctr);\n\nregisterAlgorithm('3DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('3DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('3DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('3DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('3DES-CTR', forge.cipher.modes.ctr);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.des.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** DES implementation **/\n\nvar spfunction1 = [0x1010400,0,0x10000,0x1010404,0x1010004,0x10404,0x4,0x10000,0x400,0x1010400,0x1010404,0x400,0x1000404,0x1010004,0x1000000,0x4,0x404,0x1000400,0x1000400,0x10400,0x10400,0x1010000,0x1010000,0x1000404,0x10004,0x1000004,0x1000004,0x10004,0,0x404,0x10404,0x1000000,0x10000,0x1010404,0x4,0x1010000,0x1010400,0x1000000,0x1000000,0x400,0x1010004,0x10000,0x10400,0x1000004,0x400,0x4,0x1000404,0x10404,0x1010404,0x10004,0x1010000,0x1000404,0x1000004,0x404,0x10404,0x1010400,0x404,0x1000400,0x1000400,0,0x10004,0x10400,0,0x1010004];\nvar spfunction2 = [-0x7fef7fe0,-0x7fff8000,0x8000,0x108020,0x100000,0x20,-0x7fefffe0,-0x7fff7fe0,-0x7fffffe0,-0x7fef7fe0,-0x7fef8000,-0x80000000,-0x7fff8000,0x100000,0x20,-0x7fefffe0,0x108000,0x100020,-0x7fff7fe0,0,-0x80000000,0x8000,0x108020,-0x7ff00000,0x100020,-0x7fffffe0,0,0x108000,0x8020,-0x7fef8000,-0x7ff00000,0x8020,0,0x108020,-0x7fefffe0,0x100000,-0x7fff7fe0,-0x7ff00000,-0x7fef8000,0x8000,-0x7ff00000,-0x7fff8000,0x20,-0x7fef7fe0,0x108020,0x20,0x8000,-0x80000000,0x8020,-0x7fef8000,0x100000,-0x7fffffe0,0x100020,-0x7fff7fe0,-0x7fffffe0,0x100020,0x108000,0,-0x7fff8000,0x8020,-0x80000000,-0x7fefffe0,-0x7fef7fe0,0x108000];\nvar spfunction3 = [0x208,0x8020200,0,0x8020008,0x8000200,0,0x20208,0x8000200,0x20008,0x8000008,0x8000008,0x20000,0x8020208,0x20008,0x8020000,0x208,0x8000000,0x8,0x8020200,0x200,0x20200,0x8020000,0x8020008,0x20208,0x8000208,0x20200,0x20000,0x8000208,0x8,0x8020208,0x200,0x8000000,0x8020200,0x8000000,0x20008,0x208,0x20000,0x8020200,0x8000200,0,0x200,0x20008,0x8020208,0x8000200,0x8000008,0x200,0,0x8020008,0x8000208,0x20000,0x8000000,0x8020208,0x8,0x20208,0x20200,0x8000008,0x8020000,0x8000208,0x208,0x8020000,0x20208,0x8,0x8020008,0x20200];\nvar spfunction4 = [0x802001,0x2081,0x2081,0x80,0x802080,0x800081,0x800001,0x2001,0,0x802000,0x802000,0x802081,0x81,0,0x800080,0x800001,0x1,0x2000,0x800000,0x802001,0x80,0x800000,0x2001,0x2080,0x800081,0x1,0x2080,0x800080,0x2000,0x802080,0x802081,0x81,0x800080,0x800001,0x802000,0x802081,0x81,0,0,0x802000,0x2080,0x800080,0x800081,0x1,0x802001,0x2081,0x2081,0x80,0x802081,0x81,0x1,0x2000,0x800001,0x2001,0x802080,0x800081,0x2001,0x2080,0x800000,0x802001,0x80,0x800000,0x2000,0x802080];\nvar spfunction5 = [0x100,0x2080100,0x2080000,0x42000100,0x80000,0x100,0x40000000,0x2080000,0x40080100,0x80000,0x2000100,0x40080100,0x42000100,0x42080000,0x80100,0x40000000,0x2000000,0x40080000,0x40080000,0,0x40000100,0x42080100,0x42080100,0x2000100,0x42080000,0x40000100,0,0x42000000,0x2080100,0x2000000,0x42000000,0x80100,0x80000,0x42000100,0x100,0x2000000,0x40000000,0x2080000,0x42000100,0x40080100,0x2000100,0x40000000,0x42080000,0x2080100,0x40080100,0x100,0x2000000,0x42080000,0x42080100,0x80100,0x42000000,0x42080100,0x2080000,0,0x40080000,0x42000000,0x80100,0x2000100,0x40000100,0x80000,0,0x40080000,0x2080100,0x40000100];\nvar spfunction6 = [0x20000010,0x20400000,0x4000,0x20404010,0x20400000,0x10,0x20404010,0x400000,0x20004000,0x404010,0x400000,0x20000010,0x400010,0x20004000,0x20000000,0x4010,0,0x400010,0x20004010,0x4000,0x404000,0x20004010,0x10,0x20400010,0x20400010,0,0x404010,0x20404000,0x4010,0x404000,0x20404000,0x20000000,0x20004000,0x10,0x20400010,0x404000,0x20404010,0x400000,0x4010,0x20000010,0x400000,0x20004000,0x20000000,0x4010,0x20000010,0x20404010,0x404000,0x20400000,0x404010,0x20404000,0,0x20400010,0x10,0x4000,0x20400000,0x404010,0x4000,0x400010,0x20004010,0,0x20404000,0x20000000,0x400010,0x20004010];\nvar spfunction7 = [0x200000,0x4200002,0x4000802,0,0x800,0x4000802,0x200802,0x4200800,0x4200802,0x200000,0,0x4000002,0x2,0x4000000,0x4200002,0x802,0x4000800,0x200802,0x200002,0x4000800,0x4000002,0x4200000,0x4200800,0x200002,0x4200000,0x800,0x802,0x4200802,0x200800,0x2,0x4000000,0x200800,0x4000000,0x200800,0x200000,0x4000802,0x4000802,0x4200002,0x4200002,0x2,0x200002,0x4000000,0x4000800,0x200000,0x4200800,0x802,0x200802,0x4200800,0x802,0x4000002,0x4200802,0x4200000,0x200800,0,0x2,0x4200802,0,0x200802,0x4200000,0x800,0x4000002,0x4000800,0x800,0x200002];\nvar spfunction8 = [0x10001040,0x1000,0x40000,0x10041040,0x10000000,0x10001040,0x40,0x10000000,0x40040,0x10040000,0x10041040,0x41000,0x10041000,0x41040,0x1000,0x40,0x10040000,0x10000040,0x10001000,0x1040,0x41000,0x40040,0x10040040,0x10041000,0x1040,0,0,0x10040040,0x10000040,0x10001000,0x41040,0x40000,0x41040,0x40000,0x10041000,0x1000,0x40,0x10040040,0x1000,0x41040,0x10001000,0x40,0x10000040,0x10040000,0x10040040,0x10000000,0x40000,0x10001040,0,0x10041040,0x40040,0x10000040,0x10040000,0x10001000,0x10001040,0,0x10041040,0x41000,0x41000,0x1040,0x1040,0x40040,0x10000000,0x10041000];\n\n/**\n * Create necessary sub keys.\n *\n * @param key the 64-bit or 192-bit key.\n *\n * @return the expanded keys.\n */\nfunction _createKeys(key) {\n  var pc2bytes0  = [0,0x4,0x20000000,0x20000004,0x10000,0x10004,0x20010000,0x20010004,0x200,0x204,0x20000200,0x20000204,0x10200,0x10204,0x20010200,0x20010204],\n      pc2bytes1  = [0,0x1,0x100000,0x100001,0x4000000,0x4000001,0x4100000,0x4100001,0x100,0x101,0x100100,0x100101,0x4000100,0x4000101,0x4100100,0x4100101],\n      pc2bytes2  = [0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808,0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808],\n      pc2bytes3  = [0,0x200000,0x8000000,0x8200000,0x2000,0x202000,0x8002000,0x8202000,0x20000,0x220000,0x8020000,0x8220000,0x22000,0x222000,0x8022000,0x8222000],\n      pc2bytes4  = [0,0x40000,0x10,0x40010,0,0x40000,0x10,0x40010,0x1000,0x41000,0x1010,0x41010,0x1000,0x41000,0x1010,0x41010],\n      pc2bytes5  = [0,0x400,0x20,0x420,0,0x400,0x20,0x420,0x2000000,0x2000400,0x2000020,0x2000420,0x2000000,0x2000400,0x2000020,0x2000420],\n      pc2bytes6  = [0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002,0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002],\n      pc2bytes7  = [0,0x10000,0x800,0x10800,0x20000000,0x20010000,0x20000800,0x20010800,0x20000,0x30000,0x20800,0x30800,0x20020000,0x20030000,0x20020800,0x20030800],\n      pc2bytes8  = [0,0x40000,0,0x40000,0x2,0x40002,0x2,0x40002,0x2000000,0x2040000,0x2000000,0x2040000,0x2000002,0x2040002,0x2000002,0x2040002],\n      pc2bytes9  = [0,0x10000000,0x8,0x10000008,0,0x10000000,0x8,0x10000008,0x400,0x10000400,0x408,0x10000408,0x400,0x10000400,0x408,0x10000408],\n      pc2bytes10 = [0,0x20,0,0x20,0x100000,0x100020,0x100000,0x100020,0x2000,0x2020,0x2000,0x2020,0x102000,0x102020,0x102000,0x102020],\n      pc2bytes11 = [0,0x1000000,0x200,0x1000200,0x200000,0x1200000,0x200200,0x1200200,0x4000000,0x5000000,0x4000200,0x5000200,0x4200000,0x5200000,0x4200200,0x5200200],\n      pc2bytes12 = [0,0x1000,0x8000000,0x8001000,0x80000,0x81000,0x8080000,0x8081000,0x10,0x1010,0x8000010,0x8001010,0x80010,0x81010,0x8080010,0x8081010],\n      pc2bytes13 = [0,0x4,0x100,0x104,0,0x4,0x100,0x104,0x1,0x5,0x101,0x105,0x1,0x5,0x101,0x105];\n\n  // how many iterations (1 for des, 3 for triple des)\n  // changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys\n  var iterations = key.length() > 8 ? 3 : 1;\n\n  // stores the return keys\n  var keys = [];\n\n  // now define the left shifts which need to be done\n  var shifts = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0];\n\n  var n = 0, tmp;\n  for(var j = 0; j < iterations; j++) {\n    var left = key.getInt32();\n    var right = key.getInt32();\n\n    tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n    right ^= tmp;\n    left ^= (tmp << 4);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 2) ^ right) & 0x33333333;\n    right ^= tmp;\n    left ^= (tmp << 2);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n    left ^= tmp;\n    right ^= (tmp << 8);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    // right needs to be shifted and OR'd with last four bits of left\n    tmp = (left << 8) | ((right >>> 20) & 0x000000f0);\n\n    // left needs to be put upside down\n    left = ((right << 24) | ((right << 8) & 0xff0000) |\n      ((right >>> 8) & 0xff00) | ((right >>> 24) & 0xf0));\n    right = tmp;\n\n    // now go through and perform these shifts on the left and right keys\n    for(var i = 0; i < shifts.length; ++i) {\n      //shift the keys either one or two bits to the left\n      if(shifts[i]) {\n        left = (left << 2) | (left >>> 26);\n        right = (right << 2) | (right >>> 26);\n      } else {\n        left = (left << 1) | (left >>> 27);\n        right = (right << 1) | (right >>> 27);\n      }\n      left &= -0xf;\n      right &= -0xf;\n\n      // now apply PC-2, in such a way that E is easier when encrypting or\n      // decrypting this conversion will look like PC-2 except only the last 6\n      // bits of each byte are used rather than 48 consecutive bits and the\n      // order of lines will be according to how the S selection functions will\n      // be applied: S2, S4, S6, S8, S1, S3, S5, S7\n      var lefttmp = (\n        pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 0xf] |\n        pc2bytes2[(left >>> 20) & 0xf] | pc2bytes3[(left >>> 16) & 0xf] |\n        pc2bytes4[(left >>> 12) & 0xf] | pc2bytes5[(left >>> 8) & 0xf] |\n        pc2bytes6[(left >>> 4) & 0xf]);\n      var righttmp = (\n        pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 0xf] |\n        pc2bytes9[(right >>> 20) & 0xf] | pc2bytes10[(right >>> 16) & 0xf] |\n        pc2bytes11[(right >>> 12) & 0xf] | pc2bytes12[(right >>> 8) & 0xf] |\n        pc2bytes13[(right >>> 4) & 0xf]);\n      tmp = ((righttmp >>> 16) ^ lefttmp) & 0x0000ffff;\n      keys[n++] = lefttmp ^ tmp;\n      keys[n++] = righttmp ^ (tmp << 16);\n    }\n  }\n\n  return keys;\n}\n\n/**\n * Updates a single block (1 byte) using DES. The update will either\n * encrypt or decrypt the block.\n *\n * @param keys the expanded keys.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(keys, input, output, decrypt) {\n  // set up loops for single or triple DES\n  var iterations = keys.length === 32 ? 3 : 9;\n  var looping;\n  if(iterations === 3) {\n    looping = decrypt ? [30, -2, -2] : [0, 32, 2];\n  } else {\n    looping = (decrypt ?\n      [94, 62, -2, 32, 64, 2, 30, -2, -2] :\n      [0, 32, 2, 62, 30, -2, 64, 96, 2]);\n  }\n\n  var tmp;\n\n  var left = input[0];\n  var right = input[1];\n\n  // first each 64 bit chunk of the message must be permuted according to IP\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  // rotate left 1 bit\n  left = ((left << 1) | (left >>> 31));\n  right = ((right << 1) | (right >>> 31));\n\n  for(var j = 0; j < iterations; j += 3) {\n    var endloop = looping[j + 1];\n    var loopinc = looping[j + 2];\n\n    // now go through and perform the encryption or decryption\n    for(var i = looping[j]; i != endloop; i += loopinc) {\n      var right1 = right ^ keys[i];\n      var right2 = ((right >>> 4) | (right << 28)) ^ keys[i + 1];\n\n      // passing these bytes through the S selection functions\n      tmp = left;\n      left = right;\n      right = tmp ^ (\n        spfunction2[(right1 >>> 24) & 0x3f] |\n        spfunction4[(right1 >>> 16) & 0x3f] |\n        spfunction6[(right1 >>>  8) & 0x3f] |\n        spfunction8[right1 & 0x3f] |\n        spfunction1[(right2 >>> 24) & 0x3f] |\n        spfunction3[(right2 >>> 16) & 0x3f] |\n        spfunction5[(right2 >>>  8) & 0x3f] |\n        spfunction7[right2 & 0x3f]);\n    }\n    // unreverse left and right\n    tmp = left;\n    left = right;\n    right = tmp;\n  }\n\n  // rotate right 1 bit\n  left = ((left >>> 1) | (left << 31));\n  right = ((right >>> 1) | (right << 31));\n\n  // now perform IP-1, which is IP in the opposite direction\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  output[0] = left;\n  output[1] = right;\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('DES-<mode>', key);\n * forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates a deprecated DES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param options the options to use.\n *          key the symmetric key to use (64 or 192 bits).\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'DES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n","/**\n * Node.js module for Forge.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2016 Digital Bazaar, Inc.\n */\nmodule.exports = {\n  // default options\n  options: {\n    usePureJavaScript: false\n  }\n};\n","/**\n * Hash-based Message Authentication Code implementation. Requires a message\n * digest object that can be obtained, for example, from forge.md.sha1 or\n * forge.md.md5.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2012 Digital Bazaar, Inc. All rights reserved.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\n/* HMAC API */\nvar hmac = module.exports = forge.hmac = forge.hmac || {};\n\n/**\n * Creates an HMAC object that uses the given message digest object.\n *\n * @return an HMAC object.\n */\nhmac.create = function() {\n  // the hmac key to use\n  var _key = null;\n\n  // the message digest to use\n  var _md = null;\n\n  // the inner padding\n  var _ipadding = null;\n\n  // the outer padding\n  var _opadding = null;\n\n  // hmac context\n  var ctx = {};\n\n  /**\n   * Starts or restarts the HMAC with the given key and message digest.\n   *\n   * @param md the message digest to use, null to reuse the previous one,\n   *           a string to use builtin 'sha1', 'md5', 'sha256'.\n   * @param key the key to use as a string, array of bytes, byte buffer,\n   *           or null to reuse the previous key.\n   */\n  ctx.start = function(md, key) {\n    if(md !== null) {\n      if(typeof md === 'string') {\n        // create builtin message digest\n        md = md.toLowerCase();\n        if(md in forge.md.algorithms) {\n          _md = forge.md.algorithms[md].create();\n        } else {\n          throw new Error('Unknown hash algorithm \"' + md + '\"');\n        }\n      } else {\n        // store message digest\n        _md = md;\n      }\n    }\n\n    if(key === null) {\n      // reuse previous key\n      key = _key;\n    } else {\n      if(typeof key === 'string') {\n        // convert string into byte buffer\n        key = forge.util.createBuffer(key);\n      } else if(forge.util.isArray(key)) {\n        // convert byte array into byte buffer\n        var tmp = key;\n        key = forge.util.createBuffer();\n        for(var i = 0; i < tmp.length; ++i) {\n          key.putByte(tmp[i]);\n        }\n      }\n\n      // if key is longer than blocksize, hash it\n      var keylen = key.length();\n      if(keylen > _md.blockLength) {\n        _md.start();\n        _md.update(key.bytes());\n        key = _md.digest();\n      }\n\n      // mix key into inner and outer padding\n      // ipadding = [0x36 * blocksize] ^ key\n      // opadding = [0x5C * blocksize] ^ key\n      _ipadding = forge.util.createBuffer();\n      _opadding = forge.util.createBuffer();\n      keylen = key.length();\n      for(var i = 0; i < keylen; ++i) {\n        var tmp = key.at(i);\n        _ipadding.putByte(0x36 ^ tmp);\n        _opadding.putByte(0x5C ^ tmp);\n      }\n\n      // if key is shorter than blocksize, add additional padding\n      if(keylen < _md.blockLength) {\n        var tmp = _md.blockLength - keylen;\n        for(var i = 0; i < tmp; ++i) {\n          _ipadding.putByte(0x36);\n          _opadding.putByte(0x5C);\n        }\n      }\n      _key = key;\n      _ipadding = _ipadding.bytes();\n      _opadding = _opadding.bytes();\n    }\n\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n\n    // prepare to do inner hash\n    // hash(ipadding | message)\n    _md.start();\n    _md.update(_ipadding);\n  };\n\n  /**\n   * Updates the HMAC with the given message bytes.\n   *\n   * @param bytes the bytes to update with.\n   */\n  ctx.update = function(bytes) {\n    _md.update(bytes);\n  };\n\n  /**\n   * Produces the Message Authentication Code (MAC).\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  ctx.getMac = function() {\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n    // here we do the outer hashing\n    var inner = _md.digest().bytes();\n    _md.start();\n    _md.update(_opadding);\n    _md.update(inner);\n    return _md.digest();\n  };\n  // alias for getMac\n  ctx.digest = ctx.getMac;\n\n  return ctx;\n};\n","// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n/*\nLicensing (LICENSE)\n-------------------\n\nThis software is covered under the following copyright:\n*/\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n/*\nAddress all questions regarding this license to:\n\n  Tom Wu\n  tjw@cs.Stanford.EDU\n*/\nvar forge = require('./forge');\n\nmodule.exports = forge.jsbn = forge.jsbn || {};\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nfunction BigInteger(a,b,c) {\n  this.data = [];\n  if(a != null)\n    if(\"number\" == typeof a) this.fromNumber(a,b,c);\n    else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n    else this.fromString(a,b);\n}\nforge.jsbn.BigInteger = BigInteger;\n\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this.data[i++]+w.data[j]+c;\n    c = Math.floor(v/0x4000000);\n    w.data[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this.data[i]&0x7fff;\n    var h = this.data[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w.data[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w.data[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this.data[i]&0x3fff;\n    var h = this.data[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w.data[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w.data[j++] = l&0xfffffff;\n  }\n  return c;\n}\n\n// node.js (no browser)\nif(typeof(navigator) === 'undefined')\n{\n   BigInteger.prototype.am = am3;\n   dbits = 28;\n} else if(j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if(j_lm && (navigator.appName != \"Netscape\")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr,vv;\nrr = \"0\".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) { return BI_RM.charAt(n); }\nfunction intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r.data[i] = this.data[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this.data[0] = x;\n  else if(x < -1) this.data[0] = x+this.DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this.data[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this.data[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this.data[this.t++] = (x>>(this.DB-sh));\n    } else\n      this.data[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  if(k == 8 && (s[0]&0x80) != 0) {\n    this.s = -1;\n    if(sh > 0) this.data[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this.data[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return \"-\"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this.data[i]>>p) > 0) { m = true; r = int2char(d); }\n    while(i >= 0) {\n      if(p < k) {\n        d = (this.data[i]&((1<<p)-1))<<(k-p);\n        d |= this.data[--i]>>(p+=this.DB-k);\n      } else {\n        d = (this.data[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += int2char(d);\n    }\n  }\n  return m?r:\"0\";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return (this.s<0)?-r:r;\n  while(--i >= 0) if((r=this.data[i]-a.data[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this.data[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r.data[i+n] = this.data[i];\n  for(i = n-1; i >= 0; --i) r.data[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r.data[i-n] = this.data[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r.data[i+ds+1] = (this.data[i]>>cbs)|c;\n    c = (this.data[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r.data[i] = 0;\n  r.data[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r.data[0] = this.data[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r.data[i-ds-1] |= (this.data[i]&bm)<<cbs;\n    r.data[i-ds] = this.data[i]>>bs;\n  }\n  if(bs > 0) r.data[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this.data[i]-a.data[i];\n    r.data[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r.data[i++] = this.DV+c;\n  else if(c > 0) r.data[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < y.t; ++i) r.data[i+x.t] = x.am(0,y.data[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x.data[i],r,2*i,0,1);\n    if((r.data[i+x.t]+=x.am(i+1,2*x.data[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r.data[i+x.t] -= x.DV;\n      r.data[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r.data[r.t-1] += x.am(i,x.data[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm.data[pm.t-1]);\t// normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); } else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y.data[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y.data[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r.data[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y);\t// \"negative\" y so we can replace sub with am later\n  while(y.t < ys) y.data[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r.data[--i]==y0)?this.DM:Math.floor(r.data[i]*d1+(r.data[i-1]+e)*d2);\n    if((r.data[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\t// Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r.data[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);\t// Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) { this.m = m; }\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this.data[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;\t\t// y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;\t// y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;\t// y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\t// y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;\t\t// y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp&0x7fff;\n  this.mph = this.mp>>15;\n  this.um = (1<<(m.DB-15))-1;\n  this.mt2 = 2*m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)\t// pad x so am has enough room later\n    x.data[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x.data[i]*mp mod DV\n    var j = x.data[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x.data[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x.data[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x.data[j] >= x.DV) { x.data[j] -= x.DV; x.data[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this.data[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n// jsbn2 lib\n\n//Copyright (c) 2005-2009  Tom Wu\n//All Rights Reserved.\n//See \"LICENSE\" for details (See jsbn.js for LICENSE).\n\n//Extended JavaScript BN functions, required for RSA private ops.\n\n//Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n\n//(public)\nfunction bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n//(public) return value as integer\nfunction bnIntValue() {\nif(this.s < 0) {\n if(this.t == 1) return this.data[0]-this.DV;\n else if(this.t == 0) return -1;\n} else if(this.t == 1) return this.data[0];\nelse if(this.t == 0) return 0;\n// assumes 16 < DB < 32\nreturn ((this.data[1]&((1<<(32-this.DB))-1))<<this.DB)|this.data[0];\n}\n\n//(public) return value as byte\nfunction bnByteValue() { return (this.t==0)?this.s:(this.data[0]<<24)>>24; }\n\n//(public) return value as short (assumes DB>=16)\nfunction bnShortValue() { return (this.t==0)?this.s:(this.data[0]<<16)>>16; }\n\n//(protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n//(public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\nif(this.s < 0) return -1;\nelse if(this.t <= 0 || (this.t == 1 && this.data[0] <= 0)) return 0;\nelse return 1;\n}\n\n//(protected) convert to radix string\nfunction bnpToRadix(b) {\nif(b == null) b = 10;\nif(this.signum() == 0 || b < 2 || b > 36) return \"0\";\nvar cs = this.chunkSize(b);\nvar a = Math.pow(b,cs);\nvar d = nbv(a), y = nbi(), z = nbi(), r = \"\";\nthis.divRemTo(d,y,z);\nwhile(y.signum() > 0) {\n r = (a+z.intValue()).toString(b).substr(1) + r;\n y.divRemTo(d,y,z);\n}\nreturn z.intValue().toString(b) + r;\n}\n\n//(protected) convert from radix string\nfunction bnpFromRadix(s,b) {\nthis.fromInt(0);\nif(b == null) b = 10;\nvar cs = this.chunkSize(b);\nvar d = Math.pow(b,cs), mi = false, j = 0, w = 0;\nfor(var i = 0; i < s.length; ++i) {\n var x = intAt(s,i);\n if(x < 0) {\n   if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n   continue;\n }\n w = b*w+x;\n if(++j >= cs) {\n   this.dMultiply(d);\n   this.dAddOffset(w,0);\n   j = 0;\n   w = 0;\n }\n}\nif(j > 0) {\n this.dMultiply(Math.pow(b,j));\n this.dAddOffset(w,0);\n}\nif(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n//(protected) alternate constructor\nfunction bnpFromNumber(a,b,c) {\nif(\"number\" == typeof b) {\n // new BigInteger(int,int,RNG)\n if(a < 2) this.fromInt(1);\n else {\n   this.fromNumber(a,c);\n   if(!this.testBit(a-1))  // force MSB set\n     this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n   if(this.isEven()) this.dAddOffset(1,0); // force odd\n   while(!this.isProbablePrime(b)) {\n     this.dAddOffset(2,0);\n     if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n   }\n }\n} else {\n // new BigInteger(int,RNG)\n var x = new Array(), t = a&7;\n x.length = (a>>3)+1;\n b.nextBytes(x);\n if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n this.fromString(x,256);\n}\n}\n\n//(public) convert to bigendian byte array\nfunction bnToByteArray() {\nvar i = this.t, r = new Array();\nr[0] = this.s;\nvar p = this.DB-(i*this.DB)%8, d, k = 0;\nif(i-- > 0) {\n if(p < this.DB && (d = this.data[i]>>p) != (this.s&this.DM)>>p)\n   r[k++] = d|(this.s<<(this.DB-p));\n while(i >= 0) {\n   if(p < 8) {\n     d = (this.data[i]&((1<<p)-1))<<(8-p);\n     d |= this.data[--i]>>(p+=this.DB-8);\n   } else {\n     d = (this.data[i]>>(p-=8))&0xff;\n     if(p <= 0) { p += this.DB; --i; }\n   }\n   if((d&0x80) != 0) d |= -256;\n   if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n   if(k > 0 || d != this.s) r[k++] = d;\n }\n}\nreturn r;\n}\n\nfunction bnEquals(a) { return(this.compareTo(a)==0); }\nfunction bnMin(a) { return(this.compareTo(a)<0)?this:a; }\nfunction bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n//(protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a,op,r) {\nvar i, f, m = Math.min(a.t,this.t);\nfor(i = 0; i < m; ++i) r.data[i] = op(this.data[i],a.data[i]);\nif(a.t < this.t) {\n f = a.s&this.DM;\n for(i = m; i < this.t; ++i) r.data[i] = op(this.data[i],f);\n r.t = this.t;\n} else {\n f = this.s&this.DM;\n for(i = m; i < a.t; ++i) r.data[i] = op(f,a.data[i]);\n r.t = a.t;\n}\nr.s = op(this.s,a.s);\nr.clamp();\n}\n\n//(public) this & a\nfunction op_and(x,y) { return x&y; }\nfunction bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n//(public) this | a\nfunction op_or(x,y) { return x|y; }\nfunction bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n//(public) this ^ a\nfunction op_xor(x,y) { return x^y; }\nfunction bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n//(public) this & ~a\nfunction op_andnot(x,y) { return x&~y; }\nfunction bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n//(public) ~this\nfunction bnNot() {\nvar r = nbi();\nfor(var i = 0; i < this.t; ++i) r.data[i] = this.DM&~this.data[i];\nr.t = this.t;\nr.s = ~this.s;\nreturn r;\n}\n\n//(public) this << n\nfunction bnShiftLeft(n) {\nvar r = nbi();\nif(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\nreturn r;\n}\n\n//(public) this >> n\nfunction bnShiftRight(n) {\nvar r = nbi();\nif(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\nreturn r;\n}\n\n//return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\nif(x == 0) return -1;\nvar r = 0;\nif((x&0xffff) == 0) { x >>= 16; r += 16; }\nif((x&0xff) == 0) { x >>= 8; r += 8; }\nif((x&0xf) == 0) { x >>= 4; r += 4; }\nif((x&3) == 0) { x >>= 2; r += 2; }\nif((x&1) == 0) ++r;\nreturn r;\n}\n\n//(public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\nfor(var i = 0; i < this.t; ++i)\n if(this.data[i] != 0) return i*this.DB+lbit(this.data[i]);\nif(this.s < 0) return this.t*this.DB;\nreturn -1;\n}\n\n//return number of 1 bits in x\nfunction cbit(x) {\nvar r = 0;\nwhile(x != 0) { x &= x-1; ++r; }\nreturn r;\n}\n\n//(public) return number of set bits\nfunction bnBitCount() {\nvar r = 0, x = this.s&this.DM;\nfor(var i = 0; i < this.t; ++i) r += cbit(this.data[i]^x);\nreturn r;\n}\n\n//(public) true iff nth bit is set\nfunction bnTestBit(n) {\nvar j = Math.floor(n/this.DB);\nif(j >= this.t) return(this.s!=0);\nreturn((this.data[j]&(1<<(n%this.DB)))!=0);\n}\n\n//(protected) this op (1<<n)\nfunction bnpChangeBit(n,op) {\nvar r = BigInteger.ONE.shiftLeft(n);\nthis.bitwiseTo(r,op,r);\nreturn r;\n}\n\n//(public) this | (1<<n)\nfunction bnSetBit(n) { return this.changeBit(n,op_or); }\n\n//(public) this & ~(1<<n)\nfunction bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n//(public) this ^ (1<<n)\nfunction bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n//(protected) r = this + a\nfunction bnpAddTo(a,r) {\nvar i = 0, c = 0, m = Math.min(a.t,this.t);\nwhile(i < m) {\n c += this.data[i]+a.data[i];\n r.data[i++] = c&this.DM;\n c >>= this.DB;\n}\nif(a.t < this.t) {\n c += a.s;\n while(i < this.t) {\n   c += this.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += this.s;\n} else {\n c += this.s;\n while(i < a.t) {\n   c += a.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += a.s;\n}\nr.s = (c<0)?-1:0;\nif(c > 0) r.data[i++] = c;\nelse if(c < -1) r.data[i++] = this.DV+c;\nr.t = i;\nr.clamp();\n}\n\n//(public) this + a\nfunction bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n//(public) this - a\nfunction bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n//(public) this * a\nfunction bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n//(public) this / a\nfunction bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n//(public) this % a\nfunction bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n//(public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\nvar q = nbi(), r = nbi();\nthis.divRemTo(a,q,r);\nreturn new Array(q,r);\n}\n\n//(protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\nthis.data[this.t] = this.am(0,n-1,this,0,0,this.t);\n++this.t;\nthis.clamp();\n}\n\n//(protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n,w) {\nif(n == 0) return;\nwhile(this.t <= w) this.data[this.t++] = 0;\nthis.data[w] += n;\nwhile(this.data[w] >= this.DV) {\n this.data[w] -= this.DV;\n if(++w >= this.t) this.data[this.t++] = 0;\n ++this.data[w];\n}\n}\n\n//A \"null\" reducer\nfunction NullExp() {}\nfunction nNop(x) { return x; }\nfunction nMulTo(x,y,r) { x.multiplyTo(y,r); }\nfunction nSqrTo(x,r) { x.squareTo(r); }\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n//(public) this^e\nfunction bnPow(e) { return this.exp(e,new NullExp()); }\n\n//(protected) r = lower n words of \"this * a\", a.t <= n\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a,n,r) {\nvar i = Math.min(this.t+a.t,n);\nr.s = 0; // assumes a,this >= 0\nr.t = i;\nwhile(i > 0) r.data[--i] = 0;\nvar j;\nfor(j = r.t-this.t; i < j; ++i) r.data[i+this.t] = this.am(0,a.data[i],r,i,0,this.t);\nfor(j = Math.min(a.t,n); i < j; ++i) this.am(0,a.data[i],r,i,0,n-i);\nr.clamp();\n}\n\n//(protected) r = \"this * a\" without lower n words, n > 0\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a,n,r) {\n--n;\nvar i = r.t = this.t+a.t-n;\nr.s = 0; // assumes a,this >= 0\nwhile(--i >= 0) r.data[i] = 0;\nfor(i = Math.max(n-this.t,0); i < a.t; ++i)\n r.data[this.t+i-n] = this.am(n-i,a.data[i],r,0,0,this.t+i-n);\nr.clamp();\nr.drShiftTo(1,r);\n}\n\n//Barrett modular reduction\nfunction Barrett(m) {\n// setup Barrett\nthis.r2 = nbi();\nthis.q3 = nbi();\nBigInteger.ONE.dlShiftTo(2*m.t,this.r2);\nthis.mu = this.r2.divide(m);\nthis.m = m;\n}\n\nfunction barrettConvert(x) {\nif(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\nelse if(x.compareTo(this.m) < 0) return x;\nelse { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n}\n\nfunction barrettRevert(x) { return x; }\n\n//x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\nx.drShiftTo(this.m.t-1,this.r2);\nif(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\nthis.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\nthis.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\nwhile(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\nx.subTo(this.r2,x);\nwhile(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n//r = x^2 mod m; x != r\nfunction barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n//r = x*y mod m; x,y != r\nfunction barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n//(public) this^e % m (HAC 14.85)\nfunction bnModPow(e,m) {\nvar i = e.bitLength(), k, r = nbv(1), z;\nif(i <= 0) return r;\nelse if(i < 18) k = 1;\nelse if(i < 48) k = 3;\nelse if(i < 144) k = 4;\nelse if(i < 768) k = 5;\nelse k = 6;\nif(i < 8)\n z = new Classic(m);\nelse if(m.isEven())\n z = new Barrett(m);\nelse\n z = new Montgomery(m);\n\n// precomputation\nvar g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\ng[1] = z.convert(this);\nif(k > 1) {\n var g2 = nbi();\n z.sqrTo(g[1],g2);\n while(n <= km) {\n   g[n] = nbi();\n   z.mulTo(g2,g[n-2],g[n]);\n   n += 2;\n }\n}\n\nvar j = e.t-1, w, is1 = true, r2 = nbi(), t;\ni = nbits(e.data[j])-1;\nwhile(j >= 0) {\n if(i >= k1) w = (e.data[j]>>(i-k1))&km;\n else {\n   w = (e.data[j]&((1<<(i+1))-1))<<(k1-i);\n   if(j > 0) w |= e.data[j-1]>>(this.DB+i-k1);\n }\n\n n = k;\n while((w&1) == 0) { w >>= 1; --n; }\n if((i -= n) < 0) { i += this.DB; --j; }\n if(is1) {  // ret == 1, don't bother squaring or multiplying it\n   g[w].copyTo(r);\n   is1 = false;\n } else {\n   while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n   if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n   z.mulTo(r2,g[w],r);\n }\n\n while(j >= 0 && (e.data[j]&(1<<i)) == 0) {\n   z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n   if(--i < 0) { i = this.DB-1; --j; }\n }\n}\nreturn z.revert(r);\n}\n\n//(public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\nvar x = (this.s<0)?this.negate():this.clone();\nvar y = (a.s<0)?a.negate():a.clone();\nif(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\nvar i = x.getLowestSetBit(), g = y.getLowestSetBit();\nif(g < 0) return x;\nif(i < g) g = i;\nif(g > 0) {\n x.rShiftTo(g,x);\n y.rShiftTo(g,y);\n}\nwhile(x.signum() > 0) {\n if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n if(x.compareTo(y) >= 0) {\n   x.subTo(y,x);\n   x.rShiftTo(1,x);\n } else {\n   y.subTo(x,y);\n   y.rShiftTo(1,y);\n }\n}\nif(g > 0) y.lShiftTo(g,y);\nreturn y;\n}\n\n//(protected) this % n, n < 2^26\nfunction bnpModInt(n) {\nif(n <= 0) return 0;\nvar d = this.DV%n, r = (this.s<0)?n-1:0;\nif(this.t > 0)\n if(d == 0) r = this.data[0]%n;\n else for(var i = this.t-1; i >= 0; --i) r = (d*r+this.data[i])%n;\nreturn r;\n}\n\n//(public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\nvar ac = m.isEven();\nif((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\nvar u = m.clone(), v = this.clone();\nvar a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\nwhile(u.signum() != 0) {\n while(u.isEven()) {\n   u.rShiftTo(1,u);\n   if(ac) {\n     if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n     a.rShiftTo(1,a);\n   } else if(!b.isEven()) b.subTo(m,b);\n   b.rShiftTo(1,b);\n }\n while(v.isEven()) {\n   v.rShiftTo(1,v);\n   if(ac) {\n     if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n     c.rShiftTo(1,c);\n   } else if(!d.isEven()) d.subTo(m,d);\n   d.rShiftTo(1,d);\n }\n if(u.compareTo(v) >= 0) {\n   u.subTo(v,u);\n   if(ac) a.subTo(c,a);\n   b.subTo(d,b);\n } else {\n   v.subTo(u,v);\n   if(ac) c.subTo(a,c);\n   d.subTo(b,d);\n }\n}\nif(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\nif(d.compareTo(m) >= 0) return d.subtract(m);\nif(d.signum() < 0) d.addTo(m,d); else return d;\nif(d.signum() < 0) return d.add(m); else return d;\n}\n\nvar lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];\nvar lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n//(public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\nvar i, x = this.abs();\nif(x.t == 1 && x.data[0] <= lowprimes[lowprimes.length-1]) {\n for(i = 0; i < lowprimes.length; ++i)\n   if(x.data[0] == lowprimes[i]) return true;\n return false;\n}\nif(x.isEven()) return false;\ni = 1;\nwhile(i < lowprimes.length) {\n var m = lowprimes[i], j = i+1;\n while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n m = x.modInt(m);\n while(i < j) if(m%lowprimes[i++] == 0) return false;\n}\nreturn x.millerRabin(t);\n}\n\n//(protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\nvar n1 = this.subtract(BigInteger.ONE);\nvar k = n1.getLowestSetBit();\nif(k <= 0) return false;\nvar r = n1.shiftRight(k);\nvar prng = bnGetPrng();\nvar a;\nfor(var i = 0; i < t; ++i) {\n // select witness 'a' at random from between 1 and n1\n do {\n   a = new BigInteger(this.bitLength(), prng);\n }\n while(a.compareTo(BigInteger.ONE) <= 0 || a.compareTo(n1) >= 0);\n var y = a.modPow(r,this);\n if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n   var j = 1;\n   while(j++ < k && y.compareTo(n1) != 0) {\n     y = y.modPowInt(2,this);\n     if(y.compareTo(BigInteger.ONE) == 0) return false;\n   }\n   if(y.compareTo(n1) != 0) return false;\n }\n}\nreturn true;\n}\n\n// get pseudo random number generator\nfunction bnGetPrng() {\n  // create prng with api that matches BigInteger secure random\n  return {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = Math.floor(Math.random() * 0x0100);\n      }\n    }\n  };\n}\n\n//protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n\n//public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n//BigInteger interfaces not implemented in jsbn:\n\n//BigInteger(int signum, byte[] magnitude)\n//double doubleValue()\n//float floatValue()\n//int hashCode()\n//long longValue()\n//static BigInteger valueOf(long val)\n","/**\n * Node.js module for Forge message digests.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2017 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nmodule.exports = forge.md = forge.md || {};\nforge.md.algorithms = forge.md.algorithms || {};\n","/**\n * Node.js module for Forge mask generation functions.\n *\n * @author Stefan Siegl\n *\n * Copyright 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./mgf1');\n\nmodule.exports = forge.mgf = forge.mgf || {};\nforge.mgf.mgf1 = forge.mgf1;\n","/**\n * Javascript implementation of mask generation function MGF1.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.mgf = forge.mgf || {};\nvar mgf1 = module.exports = forge.mgf.mgf1 = forge.mgf1 = forge.mgf1 || {};\n\n/**\n * Creates a MGF1 mask generation function object.\n *\n * @param md the message digest API to use (eg: forge.md.sha1.create()).\n *\n * @return a mask generation function object.\n */\nmgf1.create = function(md) {\n  var mgf = {\n    /**\n     * Generate mask of specified length.\n     *\n     * @param {String} seed The seed for mask generation.\n     * @param maskLen Number of bytes to generate.\n     * @return {String} The generated mask.\n     */\n    generate: function(seed, maskLen) {\n      /* 2. Let T be the empty octet string. */\n      var t = new forge.util.ByteBuffer();\n\n      /* 3. For counter from 0 to ceil(maskLen / hLen), do the following: */\n      var len = Math.ceil(maskLen / md.digestLength);\n      for(var i = 0; i < len; i++) {\n        /* a. Convert counter to an octet string C of length 4 octets */\n        var c = new forge.util.ByteBuffer();\n        c.putInt32(i);\n\n        /* b. Concatenate the hash of the seed mgfSeed and C to the octet\n         * string T: */\n        md.start();\n        md.update(seed + c.getBytes());\n        t.putBuffer(md.digest());\n      }\n\n      /* Output the leading maskLen octets of T as the octet string mask. */\n      t.truncate(t.length() - maskLen);\n      return t.getBytes();\n    }\n  };\n\n  return mgf;\n};\n","/**\n * Object IDs for ASN.1.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nforge.pki = forge.pki || {};\nvar oids = module.exports = forge.pki.oids = forge.oids = forge.oids || {};\n\n// set id to name mapping and name to id mapping\nfunction _IN(id, name) {\n  oids[id] = name;\n  oids[name] = id;\n}\n// set id to name mapping only\nfunction _I_(id, name) {\n  oids[id] = name;\n}\n\n// algorithm OIDs\n_IN('1.2.840.113549.1.1.1', 'rsaEncryption');\n// Note: md2 & md4 not implemented\n//_IN('1.2.840.113549.1.1.2', 'md2WithRSAEncryption');\n//_IN('1.2.840.113549.1.1.3', 'md4WithRSAEncryption');\n_IN('1.2.840.113549.1.1.4', 'md5WithRSAEncryption');\n_IN('1.2.840.113549.1.1.5', 'sha1WithRSAEncryption');\n_IN('1.2.840.113549.1.1.7', 'RSAES-OAEP');\n_IN('1.2.840.113549.1.1.8', 'mgf1');\n_IN('1.2.840.113549.1.1.9', 'pSpecified');\n_IN('1.2.840.113549.1.1.10', 'RSASSA-PSS');\n_IN('1.2.840.113549.1.1.11', 'sha256WithRSAEncryption');\n_IN('1.2.840.113549.1.1.12', 'sha384WithRSAEncryption');\n_IN('1.2.840.113549.1.1.13', 'sha512WithRSAEncryption');\n// Edwards-curve Digital Signature Algorithm (EdDSA) Ed25519\n_IN('1.3.101.112', 'EdDSA25519');\n\n_IN('1.2.840.10040.4.3', 'dsa-with-sha1');\n\n_IN('1.3.14.3.2.7', 'desCBC');\n\n_IN('1.3.14.3.2.26', 'sha1');\n// Deprecated equivalent of sha1WithRSAEncryption\n_IN('1.3.14.3.2.29', 'sha1WithRSASignature');\n_IN('2.16.840.1.101.3.4.2.1', 'sha256');\n_IN('2.16.840.1.101.3.4.2.2', 'sha384');\n_IN('2.16.840.1.101.3.4.2.3', 'sha512');\n_IN('2.16.840.1.101.3.4.2.4', 'sha224');\n_IN('2.16.840.1.101.3.4.2.5', 'sha512-224');\n_IN('2.16.840.1.101.3.4.2.6', 'sha512-256');\n_IN('1.2.840.113549.2.2', 'md2');\n_IN('1.2.840.113549.2.5', 'md5');\n\n// pkcs#7 content types\n_IN('1.2.840.113549.1.7.1', 'data');\n_IN('1.2.840.113549.1.7.2', 'signedData');\n_IN('1.2.840.113549.1.7.3', 'envelopedData');\n_IN('1.2.840.113549.1.7.4', 'signedAndEnvelopedData');\n_IN('1.2.840.113549.1.7.5', 'digestedData');\n_IN('1.2.840.113549.1.7.6', 'encryptedData');\n\n// pkcs#9 oids\n_IN('1.2.840.113549.1.9.1', 'emailAddress');\n_IN('1.2.840.113549.1.9.2', 'unstructuredName');\n_IN('1.2.840.113549.1.9.3', 'contentType');\n_IN('1.2.840.113549.1.9.4', 'messageDigest');\n_IN('1.2.840.113549.1.9.5', 'signingTime');\n_IN('1.2.840.113549.1.9.6', 'counterSignature');\n_IN('1.2.840.113549.1.9.7', 'challengePassword');\n_IN('1.2.840.113549.1.9.8', 'unstructuredAddress');\n_IN('1.2.840.113549.1.9.14', 'extensionRequest');\n\n_IN('1.2.840.113549.1.9.20', 'friendlyName');\n_IN('1.2.840.113549.1.9.21', 'localKeyId');\n_IN('1.2.840.113549.1.9.22.1', 'x509Certificate');\n\n// pkcs#12 safe bags\n_IN('1.2.840.113549.1.12.10.1.1', 'keyBag');\n_IN('1.2.840.113549.1.12.10.1.2', 'pkcs8ShroudedKeyBag');\n_IN('1.2.840.113549.1.12.10.1.3', 'certBag');\n_IN('1.2.840.113549.1.12.10.1.4', 'crlBag');\n_IN('1.2.840.113549.1.12.10.1.5', 'secretBag');\n_IN('1.2.840.113549.1.12.10.1.6', 'safeContentsBag');\n\n// password-based-encryption for pkcs#12\n_IN('1.2.840.113549.1.5.13', 'pkcs5PBES2');\n_IN('1.2.840.113549.1.5.12', 'pkcs5PBKDF2');\n\n_IN('1.2.840.113549.1.12.1.1', 'pbeWithSHAAnd128BitRC4');\n_IN('1.2.840.113549.1.12.1.2', 'pbeWithSHAAnd40BitRC4');\n_IN('1.2.840.113549.1.12.1.3', 'pbeWithSHAAnd3-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.4', 'pbeWithSHAAnd2-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.5', 'pbeWithSHAAnd128BitRC2-CBC');\n_IN('1.2.840.113549.1.12.1.6', 'pbewithSHAAnd40BitRC2-CBC');\n\n// hmac OIDs\n_IN('1.2.840.113549.2.7', 'hmacWithSHA1');\n_IN('1.2.840.113549.2.8', 'hmacWithSHA224');\n_IN('1.2.840.113549.2.9', 'hmacWithSHA256');\n_IN('1.2.840.113549.2.10', 'hmacWithSHA384');\n_IN('1.2.840.113549.2.11', 'hmacWithSHA512');\n\n// symmetric key algorithm oids\n_IN('1.2.840.113549.3.7', 'des-EDE3-CBC');\n_IN('2.16.840.1.101.3.4.1.2', 'aes128-CBC');\n_IN('2.16.840.1.101.3.4.1.22', 'aes192-CBC');\n_IN('2.16.840.1.101.3.4.1.42', 'aes256-CBC');\n\n// certificate issuer/subject OIDs\n_IN('2.5.4.3', 'commonName');\n_IN('2.5.4.4', 'surname');\n_IN('2.5.4.5', 'serialNumber');\n_IN('2.5.4.6', 'countryName');\n_IN('2.5.4.7', 'localityName');\n_IN('2.5.4.8', 'stateOrProvinceName');\n_IN('2.5.4.9', 'streetAddress');\n_IN('2.5.4.10', 'organizationName');\n_IN('2.5.4.11', 'organizationalUnitName');\n_IN('2.5.4.12', 'title');\n_IN('2.5.4.13', 'description');\n_IN('2.5.4.15', 'businessCategory');\n_IN('2.5.4.17', 'postalCode');\n_IN('2.5.4.42', 'givenName');\n_IN('1.3.6.1.4.1.311.60.2.1.2', 'jurisdictionOfIncorporationStateOrProvinceName');\n_IN('1.3.6.1.4.1.311.60.2.1.3', 'jurisdictionOfIncorporationCountryName');\n\n// X.509 extension OIDs\n_IN('2.16.840.1.113730.1.1', 'nsCertType');\n_IN('2.16.840.1.113730.1.13', 'nsComment'); // deprecated in theory; still widely used\n_I_('2.5.29.1', 'authorityKeyIdentifier'); // deprecated, use .35\n_I_('2.5.29.2', 'keyAttributes'); // obsolete use .37 or .15\n_I_('2.5.29.3', 'certificatePolicies'); // deprecated, use .32\n_I_('2.5.29.4', 'keyUsageRestriction'); // obsolete use .37 or .15\n_I_('2.5.29.5', 'policyMapping'); // deprecated use .33\n_I_('2.5.29.6', 'subtreesConstraint'); // obsolete use .30\n_I_('2.5.29.7', 'subjectAltName'); // deprecated use .17\n_I_('2.5.29.8', 'issuerAltName'); // deprecated use .18\n_I_('2.5.29.9', 'subjectDirectoryAttributes');\n_I_('2.5.29.10', 'basicConstraints'); // deprecated use .19\n_I_('2.5.29.11', 'nameConstraints'); // deprecated use .30\n_I_('2.5.29.12', 'policyConstraints'); // deprecated use .36\n_I_('2.5.29.13', 'basicConstraints'); // deprecated use .19\n_IN('2.5.29.14', 'subjectKeyIdentifier');\n_IN('2.5.29.15', 'keyUsage');\n_I_('2.5.29.16', 'privateKeyUsagePeriod');\n_IN('2.5.29.17', 'subjectAltName');\n_IN('2.5.29.18', 'issuerAltName');\n_IN('2.5.29.19', 'basicConstraints');\n_I_('2.5.29.20', 'cRLNumber');\n_I_('2.5.29.21', 'cRLReason');\n_I_('2.5.29.22', 'expirationDate');\n_I_('2.5.29.23', 'instructionCode');\n_I_('2.5.29.24', 'invalidityDate');\n_I_('2.5.29.25', 'cRLDistributionPoints'); // deprecated use .31\n_I_('2.5.29.26', 'issuingDistributionPoint'); // deprecated use .28\n_I_('2.5.29.27', 'deltaCRLIndicator');\n_I_('2.5.29.28', 'issuingDistributionPoint');\n_I_('2.5.29.29', 'certificateIssuer');\n_I_('2.5.29.30', 'nameConstraints');\n_IN('2.5.29.31', 'cRLDistributionPoints');\n_IN('2.5.29.32', 'certificatePolicies');\n_I_('2.5.29.33', 'policyMappings');\n_I_('2.5.29.34', 'policyConstraints'); // deprecated use .36\n_IN('2.5.29.35', 'authorityKeyIdentifier');\n_I_('2.5.29.36', 'policyConstraints');\n_IN('2.5.29.37', 'extKeyUsage');\n_I_('2.5.29.46', 'freshestCRL');\n_I_('2.5.29.54', 'inhibitAnyPolicy');\n\n// extKeyUsage purposes\n_IN('1.3.6.1.4.1.11129.2.4.2', 'timestampList');\n_IN('1.3.6.1.5.5.7.1.1', 'authorityInfoAccess');\n_IN('1.3.6.1.5.5.7.3.1', 'serverAuth');\n_IN('1.3.6.1.5.5.7.3.2', 'clientAuth');\n_IN('1.3.6.1.5.5.7.3.3', 'codeSigning');\n_IN('1.3.6.1.5.5.7.3.4', 'emailProtection');\n_IN('1.3.6.1.5.5.7.3.8', 'timeStamping');\n","/**\n * Password-based encryption functions.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * An EncryptedPrivateKeyInfo:\n *\n * EncryptedPrivateKeyInfo ::= SEQUENCE {\n *   encryptionAlgorithm  EncryptionAlgorithmIdentifier,\n *   encryptedData        EncryptedData }\n *\n * EncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedData ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./oids');\nrequire('./pbkdf2');\nrequire('./pem');\nrequire('./random');\nrequire('./rc2');\nrequire('./rsa');\nrequire('./util');\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Password-based encryption implementation. */\nvar pki = forge.pki = forge.pki || {};\nmodule.exports = pki.pbe = forge.pbe = forge.pbe || {};\nvar oids = pki.oids;\n\n// validator for an EncryptedPrivateKeyInfo structure\n// Note: Currently only works w/algorithm params\nvar encryptedPrivateKeyValidator = {\n  name: 'EncryptedPrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedPrivateKeyInfo.encryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encryptionOid'\n    }, {\n      name: 'AlgorithmIdentifier.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'encryptionParams'\n    }]\n  }, {\n    // encryptedData\n    name: 'EncryptedPrivateKeyInfo.encryptedData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encryptedData'\n  }]\n};\n\n// validator for a PBES2Algorithms structure\n// Note: Currently only works w/PBKDF2 + AES encryption schemes\nvar PBES2AlgorithmsValidator = {\n  name: 'PBES2Algorithms',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PBES2Algorithms.keyDerivationFunc',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.keyDerivationFunc.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'kdfOid'\n    }, {\n      name: 'PBES2Algorithms.params',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'PBES2Algorithms.params.salt',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'kdfSalt'\n      }, {\n        name: 'PBES2Algorithms.params.iterationCount',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'kdfIterationCount'\n      }, {\n        name: 'PBES2Algorithms.params.keyLength',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        optional: true,\n        capture: 'keyLength'\n      }, {\n        // prf\n        name: 'PBES2Algorithms.params.prf',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        optional: true,\n        value: [{\n          name: 'PBES2Algorithms.params.prf.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'prfOid'\n        }]\n      }]\n    }]\n  }, {\n    name: 'PBES2Algorithms.encryptionScheme',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.encryptionScheme.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encOid'\n    }, {\n      name: 'PBES2Algorithms.encryptionScheme.iv',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'encIv'\n    }]\n  }]\n};\n\nvar pkcs12PbeParamsValidator = {\n  name: 'pkcs-12PbeParams',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'pkcs-12PbeParams.salt',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'salt'\n  }, {\n    name: 'pkcs-12PbeParams.iterations',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'iterations'\n  }]\n};\n\n/**\n * Encrypts a ASN.1 PrivateKeyInfo object, producing an EncryptedPrivateKeyInfo.\n *\n * PBES2Algorithms ALGORITHM-IDENTIFIER ::=\n *   { {PBES2-params IDENTIFIED BY id-PBES2}, ...}\n *\n * id-PBES2 OBJECT IDENTIFIER ::= {pkcs-5 13}\n *\n * PBES2-params ::= SEQUENCE {\n *   keyDerivationFunc AlgorithmIdentifier {{PBES2-KDFs}},\n *   encryptionScheme AlgorithmIdentifier {{PBES2-Encs}}\n * }\n *\n * PBES2-KDFs ALGORITHM-IDENTIFIER ::=\n *   { {PBKDF2-params IDENTIFIED BY id-PBKDF2}, ... }\n *\n * PBES2-Encs ALGORITHM-IDENTIFIER ::= { ... }\n *\n * PBKDF2-params ::= SEQUENCE {\n *   salt CHOICE {\n *     specified OCTET STRING,\n *     otherSource AlgorithmIdentifier {{PBKDF2-SaltSources}}\n *   },\n *   iterationCount INTEGER (1..MAX),\n *   keyLength INTEGER (1..MAX) OPTIONAL,\n *   prf AlgorithmIdentifier {{PBKDF2-PRFs}} DEFAULT algid-hmacWithSHA1\n * }\n *\n * @param obj the ASN.1 PrivateKeyInfo object.\n * @param password the password to encrypt with.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          prfAlgorithm the PRF message digest algorithm to use\n *            ('sha1', 'sha224', 'sha256', 'sha384', 'sha512')\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptPrivateKeyInfo = function(obj, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || 'aes128';\n  options.prfAlgorithm = options.prfAlgorithm || 'sha1';\n\n  // generate PBE params\n  var salt = forge.random.getBytesSync(options.saltSize);\n  var count = options.count;\n  var countBytes = asn1.integerToDer(count);\n  var dkLen;\n  var encryptionAlgorithm;\n  var encryptedData;\n  if(options.algorithm.indexOf('aes') === 0 || options.algorithm === 'des') {\n    // do PBES2\n    var ivLen, encOid, cipherFn;\n    switch(options.algorithm) {\n    case 'aes128':\n      dkLen = 16;\n      ivLen = 16;\n      encOid = oids['aes128-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes192':\n      dkLen = 24;\n      ivLen = 16;\n      encOid = oids['aes192-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes256':\n      dkLen = 32;\n      ivLen = 16;\n      encOid = oids['aes256-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'des':\n      dkLen = 8;\n      ivLen = 8;\n      encOid = oids['desCBC'];\n      cipherFn = forge.des.createEncryptionCipher;\n      break;\n    default:\n      var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n      error.algorithm = options.algorithm;\n      throw error;\n    }\n\n    // get PRF message digest\n    var prfAlgorithm = 'hmacWith' + options.prfAlgorithm.toUpperCase();\n    var md = prfAlgorithmToMessageDigest(prfAlgorithm);\n\n    // encrypt private key using pbe SHA-1 and AES/DES\n    var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n    var iv = forge.random.getBytesSync(ivLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    // get PBKDF2-params\n    var params = createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm);\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pkcs5PBES2']).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // keyDerivationFunc\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oids['pkcs5PBKDF2']).getBytes()),\n          // PBKDF2-params\n          params\n        ]),\n        // encryptionScheme\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(encOid).getBytes()),\n          // iv\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, iv)\n        ])\n      ])\n    ]);\n  } else if(options.algorithm === '3des') {\n    // Do PKCS12 PBE\n    dkLen = 24;\n\n    var saltBytes = new forge.util.ByteBuffer(salt);\n    var dk = pki.pbe.generatePkcs12Key(password, saltBytes, 1, count, dkLen);\n    var iv = pki.pbe.generatePkcs12Key(password, saltBytes, 2, count, dkLen);\n    var cipher = forge.des.createEncryptionCipher(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pbeWithSHAAnd3-KeyTripleDES-CBC']).getBytes()),\n      // pkcs-12PbeParams\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // salt\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n        // iteration count\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n          countBytes.getBytes())\n      ])\n    ]);\n  } else {\n    var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // EncryptedPrivateKeyInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // encryptionAlgorithm\n    encryptionAlgorithm,\n    // encryptedData\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, encryptedData)\n  ]);\n  return rval;\n};\n\n/**\n * Decrypts a ASN.1 PrivateKeyInfo object.\n *\n * @param obj the ASN.1 EncryptedPrivateKeyInfo object.\n * @param password the password to decrypt with.\n *\n * @return the ASN.1 PrivateKeyInfo on success, null on failure.\n */\npki.decryptPrivateKeyInfo = function(obj, password) {\n  var rval = null;\n\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, encryptedPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get cipher\n  var oid = asn1.derToOid(capture.encryptionOid);\n  var cipher = pki.pbe.getCipher(oid, capture.encryptionParams, password);\n\n  // get encrypted data\n  var encrypted = forge.util.createBuffer(capture.encryptedData);\n\n  cipher.update(encrypted);\n  if(cipher.finish()) {\n    rval = asn1.fromDer(cipher.output);\n  }\n\n  return rval;\n};\n\n/**\n * Converts a EncryptedPrivateKeyInfo to PEM format.\n *\n * @param epki the EncryptedPrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted encrypted private key.\n */\npki.encryptedPrivateKeyToPem = function(epki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: 'ENCRYPTED PRIVATE KEY',\n    body: asn1.toDer(epki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PEM-encoded EncryptedPrivateKeyInfo to ASN.1 format. Decryption\n * is not performed.\n *\n * @param pem the EncryptedPrivateKeyInfo in PEM-format.\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptedPrivateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY') {\n    var error = new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM header type is \"ENCRYPTED PRIVATE KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  return asn1.fromDer(msg.body);\n};\n\n/**\n * Encrypts an RSA private key. By default, the key will be wrapped in\n * a PrivateKeyInfo and encrypted to produce a PKCS#8 EncryptedPrivateKeyInfo.\n * This is the standard, preferred way to encrypt a private key.\n *\n * To produce a non-standard PEM-encrypted private key that uses encapsulated\n * headers to indicate the encryption algorithm (old-style non-PKCS#8 OpenSSL\n * private key encryption), set the 'legacy' option to true. Note: Using this\n * option will cause the iteration count to be forced to 1.\n *\n * Note: The 'des' algorithm is supported, but it is not considered to be\n * secure because it only uses a single 56-bit key. If possible, it is highly\n * recommended that a different algorithm be used.\n *\n * @param rsaKey the RSA key to encrypt.\n * @param password the password to use.\n * @param options:\n *          algorithm: the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des', 'des').\n *          count: the iteration count to use.\n *          saltSize: the salt size to use.\n *          legacy: output an old non-PKCS#8 PEM-encrypted+encapsulated\n *            headers (DEK-Info) private key.\n *\n * @return the PEM-encoded ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptRsaPrivateKey = function(rsaKey, password, options) {\n  // standard PKCS#8\n  options = options || {};\n  if(!options.legacy) {\n    // encrypt PrivateKeyInfo\n    var rval = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(rsaKey));\n    rval = pki.encryptPrivateKeyInfo(rval, password, options);\n    return pki.encryptedPrivateKeyToPem(rval);\n  }\n\n  // legacy non-PKCS#8\n  var algorithm;\n  var iv;\n  var dkLen;\n  var cipherFn;\n  switch(options.algorithm) {\n  case 'aes128':\n    algorithm = 'AES-128-CBC';\n    dkLen = 16;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes192':\n    algorithm = 'AES-192-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes256':\n    algorithm = 'AES-256-CBC';\n    dkLen = 32;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case '3des':\n    algorithm = 'DES-EDE3-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  case 'des':\n    algorithm = 'DES-CBC';\n    dkLen = 8;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  default:\n    var error = new Error('Could not encrypt RSA private key; unsupported ' +\n      'encryption algorithm \"' + options.algorithm + '\".');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // encrypt private key using OpenSSL legacy key derivation\n  var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n  cipher.update(asn1.toDer(pki.privateKeyToAsn1(rsaKey)));\n  cipher.finish();\n\n  var msg = {\n    type: 'RSA PRIVATE KEY',\n    procType: {\n      version: '4',\n      type: 'ENCRYPTED'\n    },\n    dekInfo: {\n      algorithm: algorithm,\n      parameters: forge.util.bytesToHex(iv).toUpperCase()\n    },\n    body: cipher.output.getBytes()\n  };\n  return forge.pem.encode(msg);\n};\n\n/**\n * Decrypts an RSA private key.\n *\n * @param pem the PEM-formatted EncryptedPrivateKeyInfo to decrypt.\n * @param password the password to use.\n *\n * @return the RSA key on success, null on failure.\n */\npki.decryptRsaPrivateKey = function(pem, password) {\n  var rval = null;\n\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY' &&\n    msg.type !== 'PRIVATE KEY' &&\n    msg.type !== 'RSA PRIVATE KEY') {\n    var error = new Error('Could not convert private key from PEM; PEM header type ' +\n      'is not \"ENCRYPTED PRIVATE KEY\", \"PRIVATE KEY\", or \"RSA PRIVATE KEY\".');\n    error.headerType = error;\n    throw error;\n  }\n\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    var dkLen;\n    var cipherFn;\n    switch(msg.dekInfo.algorithm) {\n    case 'DES-CBC':\n      dkLen = 8;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'DES-EDE3-CBC':\n      dkLen = 24;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'AES-128-CBC':\n      dkLen = 16;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-192-CBC':\n      dkLen = 24;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-256-CBC':\n      dkLen = 32;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'RC2-40-CBC':\n      dkLen = 5;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 40);\n      };\n      break;\n    case 'RC2-64-CBC':\n      dkLen = 8;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 64);\n      };\n      break;\n    case 'RC2-128-CBC':\n      dkLen = 16;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 128);\n      };\n      break;\n    default:\n      var error = new Error('Could not decrypt private key; unsupported ' +\n        'encryption algorithm \"' + msg.dekInfo.algorithm + '\".');\n      error.algorithm = msg.dekInfo.algorithm;\n      throw error;\n    }\n\n    // use OpenSSL legacy key derivation\n    var iv = forge.util.hexToBytes(msg.dekInfo.parameters);\n    var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(forge.util.createBuffer(msg.body));\n    if(cipher.finish()) {\n      rval = cipher.output.getBytes();\n    } else {\n      return rval;\n    }\n  } else {\n    rval = msg.body;\n  }\n\n  if(msg.type === 'ENCRYPTED PRIVATE KEY') {\n    rval = pki.decryptPrivateKeyInfo(asn1.fromDer(rval), password);\n  } else {\n    // decryption already performed above\n    rval = asn1.fromDer(rval);\n  }\n\n  if(rval !== null) {\n    rval = pki.privateKeyFromAsn1(rval);\n  }\n\n  return rval;\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\npki.pbe.generatePkcs12Key = function(password, salt, id, iter, n, md) {\n  var j, l;\n\n  if(typeof md === 'undefined' || md === null) {\n    if(!('sha1' in forge.md)) {\n      throw new Error('\"sha1\" hash algorithm unavailable.');\n    }\n    md = forge.md.sha1.create();\n  }\n\n  var u = md.digestLength;\n  var v = md.blockLength;\n  var result = new forge.util.ByteBuffer();\n\n  /* Convert password to Unicode byte buffer + trailing 0-byte. */\n  var passBuf = new forge.util.ByteBuffer();\n  if(password !== null && password !== undefined) {\n    for(l = 0; l < password.length; l++) {\n      passBuf.putInt16(password.charCodeAt(l));\n    }\n    passBuf.putInt16(0);\n  }\n\n  /* Length of salt and password in BYTES. */\n  var p = passBuf.length();\n  var s = salt.length();\n\n  /* 1. Construct a string, D (the \"diversifier\"), by concatenating\n        v copies of ID. */\n  var D = new forge.util.ByteBuffer();\n  D.fillWithByte(id, v);\n\n  /* 2. Concatenate copies of the salt together to create a string S of length\n        v * ceil(s / v) bytes (the final copy of the salt may be trunacted\n        to create S).\n        Note that if the salt is the empty string, then so is S. */\n  var Slen = v * Math.ceil(s / v);\n  var S = new forge.util.ByteBuffer();\n  for(l = 0; l < Slen; l++) {\n    S.putByte(salt.at(l % s));\n  }\n\n  /* 3. Concatenate copies of the password together to create a string P of\n        length v * ceil(p / v) bytes (the final copy of the password may be\n        truncated to create P).\n        Note that if the password is the empty string, then so is P. */\n  var Plen = v * Math.ceil(p / v);\n  var P = new forge.util.ByteBuffer();\n  for(l = 0; l < Plen; l++) {\n    P.putByte(passBuf.at(l % p));\n  }\n\n  /* 4. Set I=S||P to be the concatenation of S and P. */\n  var I = S;\n  I.putBuffer(P);\n\n  /* 5. Set c=ceil(n / u). */\n  var c = Math.ceil(n / u);\n\n  /* 6. For i=1, 2, ..., c, do the following: */\n  for(var i = 1; i <= c; i++) {\n    /* a) Set Ai=H^r(D||I). (l.e. the rth hash of D||I, H(H(H(...H(D||I)))) */\n    var buf = new forge.util.ByteBuffer();\n    buf.putBytes(D.bytes());\n    buf.putBytes(I.bytes());\n    for(var round = 0; round < iter; round++) {\n      md.start();\n      md.update(buf.getBytes());\n      buf = md.digest();\n    }\n\n    /* b) Concatenate copies of Ai to create a string B of length v bytes (the\n          final copy of Ai may be truncated to create B). */\n    var B = new forge.util.ByteBuffer();\n    for(l = 0; l < v; l++) {\n      B.putByte(buf.at(l % u));\n    }\n\n    /* c) Treating I as a concatenation I0, I1, ..., Ik-1 of v-byte blocks,\n          where k=ceil(s / v) + ceil(p / v), modify I by setting\n          Ij=(Ij+B+1) mod 2v for each j.  */\n    var k = Math.ceil(s / v) + Math.ceil(p / v);\n    var Inew = new forge.util.ByteBuffer();\n    for(j = 0; j < k; j++) {\n      var chunk = new forge.util.ByteBuffer(I.getBytes(v));\n      var x = 0x1ff;\n      for(l = B.length() - 1; l >= 0; l--) {\n        x = x >> 8;\n        x += B.at(l) + chunk.at(l);\n        chunk.setAt(l, x & 0xff);\n      }\n      Inew.putBuffer(chunk);\n    }\n    I = Inew;\n\n    /* Add Ai to A. */\n    result.putBuffer(buf);\n  }\n\n  result.truncate(result.length() - n);\n  return result;\n};\n\n/**\n * Get new Forge cipher object instance.\n *\n * @param oid the OID (in string notation).\n * @param params the ASN.1 params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipher = function(oid, params, password) {\n  switch(oid) {\n  case pki.oids['pkcs5PBES2']:\n    return pki.pbe.getCipherForPBES2(oid, params, password);\n\n  case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n  case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n    return pki.pbe.getCipherForPKCS12PBE(oid, params, password);\n\n  default:\n    var error = new Error('Cannot read encrypted PBE data block. Unsupported OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'pkcs5PBES2',\n      'pbeWithSHAAnd3-KeyTripleDES-CBC',\n      'pbewithSHAAnd40BitRC2-CBC'\n    ];\n    throw error;\n  }\n};\n\n/**\n * Get new Forge cipher object instance according to PBES2 params block.\n *\n * The returned cipher instance is already started using the IV\n * from PBES2 parameter block.\n *\n * @param oid the PKCS#5 PBKDF2 OID (in string notation).\n * @param params the ASN.1 PBES2-params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipherForPBES2 = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, PBES2AlgorithmsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // check oids\n  oid = asn1.derToOid(capture.kdfOid);\n  if(oid !== pki.oids['pkcs5PBKDF2']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported key derivation function OID.');\n    error.oid = oid;\n    error.supportedOids = ['pkcs5PBKDF2'];\n    throw error;\n  }\n  oid = asn1.derToOid(capture.encOid);\n  if(oid !== pki.oids['aes128-CBC'] &&\n    oid !== pki.oids['aes192-CBC'] &&\n    oid !== pki.oids['aes256-CBC'] &&\n    oid !== pki.oids['des-EDE3-CBC'] &&\n    oid !== pki.oids['desCBC']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported encryption scheme OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'aes128-CBC', 'aes192-CBC', 'aes256-CBC', 'des-EDE3-CBC', 'desCBC'];\n    throw error;\n  }\n\n  // set PBE params\n  var salt = capture.kdfSalt;\n  var count = forge.util.createBuffer(capture.kdfIterationCount);\n  count = count.getInt(count.length() << 3);\n  var dkLen;\n  var cipherFn;\n  switch(pki.oids[oid]) {\n  case 'aes128-CBC':\n    dkLen = 16;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes192-CBC':\n    dkLen = 24;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes256-CBC':\n    dkLen = 32;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'des-EDE3-CBC':\n    dkLen = 24;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  case 'desCBC':\n    dkLen = 8;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n\n  // decrypt private key using pbe with chosen PRF and AES/DES\n  var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n  var iv = capture.encIv;\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n\n  return cipher;\n};\n\n/**\n * Get new Forge cipher object instance for PKCS#12 PBE.\n *\n * The returned cipher instance is already started using the key & IV\n * derived from the provided password and PKCS#12 PBE salt.\n *\n * @param oid The PKCS#12 PBE OID (in string notation).\n * @param params The ASN.1 PKCS#12 PBE-params object.\n * @param password The password to decrypt with.\n *\n * @return the new cipher object instance.\n */\npki.pbe.getCipherForPKCS12PBE = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, pkcs12PbeParamsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var salt = forge.util.createBuffer(capture.salt);\n  var count = forge.util.createBuffer(capture.iterations);\n  count = count.getInt(count.length() << 3);\n\n  var dkLen, dIvLen, cipherFn;\n  switch(oid) {\n    case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n      dkLen = 24;\n      dIvLen = 8;\n      cipherFn = forge.des.startDecrypting;\n      break;\n\n    case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n      dkLen = 5;\n      dIvLen = 8;\n      cipherFn = function(key, iv) {\n        var cipher = forge.rc2.createDecryptionCipher(key, 40);\n        cipher.start(iv, null);\n        return cipher;\n      };\n      break;\n\n    default:\n      var error = new Error('Cannot read PKCS #12 PBE data block. Unsupported OID.');\n      error.oid = oid;\n      throw error;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n  var key = pki.pbe.generatePkcs12Key(password, salt, 1, count, dkLen, md);\n  md.start();\n  var iv = pki.pbe.generatePkcs12Key(password, salt, 2, count, dIvLen, md);\n\n  return cipherFn(key, iv);\n};\n\n/**\n * OpenSSL's legacy key derivation function.\n *\n * See: http://www.openssl.org/docs/crypto/EVP_BytesToKey.html\n *\n * @param password the password to derive the key from.\n * @param salt the salt to use, null for none.\n * @param dkLen the number of bytes needed for the derived key.\n * @param [options] the options to use:\n *          [md] an optional message digest object to use.\n */\npki.pbe.opensslDeriveBytes = function(password, salt, dkLen, md) {\n  if(typeof md === 'undefined' || md === null) {\n    if(!('md5' in forge.md)) {\n      throw new Error('\"md5\" hash algorithm unavailable.');\n    }\n    md = forge.md.md5.create();\n  }\n  if(salt === null) {\n    salt = '';\n  }\n  var digests = [hash(md, password + salt)];\n  for(var length = 16, i = 1; length < dkLen; ++i, length += 16) {\n    digests.push(hash(md, digests[i - 1] + password + salt));\n  }\n  return digests.join('').substr(0, dkLen);\n};\n\nfunction hash(md, bytes) {\n  return md.start().update(bytes).digest().getBytes();\n}\n\nfunction prfOidToMessageDigest(prfOid) {\n  // get PRF algorithm, default to SHA-1\n  var prfAlgorithm;\n  if(!prfOid) {\n    prfAlgorithm = 'hmacWithSHA1';\n  } else {\n    prfAlgorithm = pki.oids[asn1.derToOid(prfOid)];\n    if(!prfAlgorithm) {\n      var error = new Error('Unsupported PRF OID.');\n      error.oid = prfOid;\n      error.supported = [\n        'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n        'hmacWithSHA512'];\n      throw error;\n    }\n  }\n  return prfAlgorithmToMessageDigest(prfAlgorithm);\n}\n\nfunction prfAlgorithmToMessageDigest(prfAlgorithm) {\n  var factory = forge.md;\n  switch(prfAlgorithm) {\n  case 'hmacWithSHA224':\n    factory = forge.md.sha512;\n  case 'hmacWithSHA1':\n  case 'hmacWithSHA256':\n  case 'hmacWithSHA384':\n  case 'hmacWithSHA512':\n    prfAlgorithm = prfAlgorithm.substr(8).toLowerCase();\n    break;\n  default:\n    var error = new Error('Unsupported PRF algorithm.');\n    error.algorithm = prfAlgorithm;\n    error.supported = [\n      'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n      'hmacWithSHA512'];\n    throw error;\n  }\n  if(!factory || !(prfAlgorithm in factory)) {\n    throw new Error('Unknown hash algorithm: ' + prfAlgorithm);\n  }\n  return factory[prfAlgorithm].create();\n}\n\nfunction createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm) {\n  var params = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // salt\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n    // iteration count\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      countBytes.getBytes())\n  ]);\n  // when PRF algorithm is not SHA-1 default, add key length and PRF algorithm\n  if(prfAlgorithm !== 'hmacWithSHA1') {\n    params.value.push(\n      // key length\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(dkLen.toString(16))),\n      // AlgorithmIdentifier\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // algorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids[prfAlgorithm]).getBytes()),\n        // parameters (null)\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n      ]));\n  }\n  return params;\n}\n","/**\n * Password-Based Key-Derivation Function #2 implementation.\n *\n * See RFC 2898 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./hmac');\nrequire('./md');\nrequire('./util');\n\nvar pkcs5 = forge.pkcs5 = forge.pkcs5 || {};\n\nvar crypto;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript) {\n  crypto = require('crypto');\n}\n\n/**\n * Derives a key from a password.\n *\n * @param p the password as a binary-encoded string of bytes.\n * @param s the salt as a binary-encoded string of bytes.\n * @param c the iteration count, a positive integer.\n * @param dkLen the intended length, in bytes, of the derived key,\n *          (max: 2^32 - 1) * hash length of the PRF.\n * @param [md] the message digest (or algorithm identifier as a string) to use\n *          in the PRF, defaults to SHA-1.\n * @param [callback(err, key)] presence triggers asynchronous version, called\n *          once the operation completes.\n *\n * @return the derived key, as a binary-encoded string of bytes, for the\n *           synchronous version (if no callback is specified).\n */\nmodule.exports = forge.pbkdf2 = pkcs5.pbkdf2 = function(\n  p, s, c, dkLen, md, callback) {\n  if(typeof md === 'function') {\n    callback = md;\n    md = null;\n  }\n\n  // use native implementation if possible and not disabled, note that\n  // some node versions only support SHA-1, others allow digest to be changed\n  if(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n    crypto.pbkdf2 && (md === null || typeof md !== 'object') &&\n    (crypto.pbkdf2Sync.length > 4 || (!md || md === 'sha1'))) {\n    if(typeof md !== 'string') {\n      // default prf to SHA-1\n      md = 'sha1';\n    }\n    p = Buffer.from(p, 'binary');\n    s = Buffer.from(s, 'binary');\n    if(!callback) {\n      if(crypto.pbkdf2Sync.length === 4) {\n        return crypto.pbkdf2Sync(p, s, c, dkLen).toString('binary');\n      }\n      return crypto.pbkdf2Sync(p, s, c, dkLen, md).toString('binary');\n    }\n    if(crypto.pbkdf2Sync.length === 4) {\n      return crypto.pbkdf2(p, s, c, dkLen, function(err, key) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, key.toString('binary'));\n      });\n    }\n    return crypto.pbkdf2(p, s, c, dkLen, md, function(err, key) {\n      if(err) {\n        return callback(err);\n      }\n      callback(null, key.toString('binary'));\n    });\n  }\n\n  if(typeof md === 'undefined' || md === null) {\n    // default prf to SHA-1\n    md = 'sha1';\n  }\n  if(typeof md === 'string') {\n    if(!(md in forge.md.algorithms)) {\n      throw new Error('Unknown hash algorithm: ' + md);\n    }\n    md = forge.md[md].create();\n  }\n\n  var hLen = md.digestLength;\n\n  /* 1. If dkLen > (2^32 - 1) * hLen, output \"derived key too long\" and\n    stop. */\n  if(dkLen > (0xFFFFFFFF * hLen)) {\n    var err = new Error('Derived key is too long.');\n    if(callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  /* 2. Let len be the number of hLen-octet blocks in the derived key,\n    rounding up, and let r be the number of octets in the last\n    block:\n\n    len = CEIL(dkLen / hLen),\n    r = dkLen - (len - 1) * hLen. */\n  var len = Math.ceil(dkLen / hLen);\n  var r = dkLen - (len - 1) * hLen;\n\n  /* 3. For each block of the derived key apply the function F defined\n    below to the password P, the salt S, the iteration count c, and\n    the block index to compute the block:\n\n    T_1 = F(P, S, c, 1),\n    T_2 = F(P, S, c, 2),\n    ...\n    T_len = F(P, S, c, len),\n\n    where the function F is defined as the exclusive-or sum of the\n    first c iterates of the underlying pseudorandom function PRF\n    applied to the password P and the concatenation of the salt S\n    and the block index i:\n\n    F(P, S, c, i) = u_1 XOR u_2 XOR ... XOR u_c\n\n    where\n\n    u_1 = PRF(P, S || INT(i)),\n    u_2 = PRF(P, u_1),\n    ...\n    u_c = PRF(P, u_{c-1}).\n\n    Here, INT(i) is a four-octet encoding of the integer i, most\n    significant octet first. */\n  var prf = forge.hmac.create();\n  prf.start(md, p);\n  var dk = '';\n  var xor, u_c, u_c1;\n\n  // sync version\n  if(!callback) {\n    for(var i = 1; i <= len; ++i) {\n      // PRF(P, S || INT(i)) (first iteration)\n      prf.start(null, null);\n      prf.update(s);\n      prf.update(forge.util.int32ToBytes(i));\n      xor = u_c1 = prf.digest().getBytes();\n\n      // PRF(P, u_{c-1}) (other iterations)\n      for(var j = 2; j <= c; ++j) {\n        prf.start(null, null);\n        prf.update(u_c1);\n        u_c = prf.digest().getBytes();\n        // F(p, s, c, i)\n        xor = forge.util.xorBytes(xor, u_c, hLen);\n        u_c1 = u_c;\n      }\n\n      /* 4. Concatenate the blocks and extract the first dkLen octets to\n        produce a derived key DK:\n\n        DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n      dk += (i < len) ? xor : xor.substr(0, r);\n    }\n    /* 5. Output the derived key DK. */\n    return dk;\n  }\n\n  // async version\n  var i = 1, j;\n  function outer() {\n    if(i > len) {\n      // done\n      return callback(null, dk);\n    }\n\n    // PRF(P, S || INT(i)) (first iteration)\n    prf.start(null, null);\n    prf.update(s);\n    prf.update(forge.util.int32ToBytes(i));\n    xor = u_c1 = prf.digest().getBytes();\n\n    // PRF(P, u_{c-1}) (other iterations)\n    j = 2;\n    inner();\n  }\n\n  function inner() {\n    if(j <= c) {\n      prf.start(null, null);\n      prf.update(u_c1);\n      u_c = prf.digest().getBytes();\n      // F(p, s, c, i)\n      xor = forge.util.xorBytes(xor, u_c, hLen);\n      u_c1 = u_c;\n      ++j;\n      return forge.util.setImmediate(inner);\n    }\n\n    /* 4. Concatenate the blocks and extract the first dkLen octets to\n      produce a derived key DK:\n\n      DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n    dk += (i < len) ? xor : xor.substr(0, r);\n\n    ++i;\n    outer();\n  }\n\n  outer();\n};\n","/**\n * Javascript implementation of basic PEM (Privacy Enhanced Mail) algorithms.\n *\n * See: RFC 1421.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n *\n * A Forge PEM object has the following fields:\n *\n * type: identifies the type of message (eg: \"RSA PRIVATE KEY\").\n *\n * procType: identifies the type of processing performed on the message,\n *   it has two subfields: version and type, eg: 4,ENCRYPTED.\n *\n * contentDomain: identifies the type of content in the message, typically\n *   only uses the value: \"RFC822\".\n *\n * dekInfo: identifies the message encryption algorithm and mode and includes\n *   any parameters for the algorithm, it has two subfields: algorithm and\n *   parameters, eg: DES-CBC,F8143EDE5960C597.\n *\n * headers: contains all other PEM encapsulated headers -- where order is\n *   significant (for pairing data like recipient ID + key info).\n *\n * body: the binary-encoded body.\n */\nvar forge = require('./forge');\nrequire('./util');\n\n// shortcut for pem API\nvar pem = module.exports = forge.pem = forge.pem || {};\n\n/**\n * Encodes (serializes) the given PEM object.\n *\n * @param msg the PEM message object to encode.\n * @param options the options to use:\n *          maxline the maximum characters per line for the body, (default: 64).\n *\n * @return the PEM-formatted string.\n */\npem.encode = function(msg, options) {\n  options = options || {};\n  var rval = '-----BEGIN ' + msg.type + '-----\\r\\n';\n\n  // encode special headers\n  var header;\n  if(msg.procType) {\n    header = {\n      name: 'Proc-Type',\n      values: [String(msg.procType.version), msg.procType.type]\n    };\n    rval += foldHeader(header);\n  }\n  if(msg.contentDomain) {\n    header = {name: 'Content-Domain', values: [msg.contentDomain]};\n    rval += foldHeader(header);\n  }\n  if(msg.dekInfo) {\n    header = {name: 'DEK-Info', values: [msg.dekInfo.algorithm]};\n    if(msg.dekInfo.parameters) {\n      header.values.push(msg.dekInfo.parameters);\n    }\n    rval += foldHeader(header);\n  }\n\n  if(msg.headers) {\n    // encode all other headers\n    for(var i = 0; i < msg.headers.length; ++i) {\n      rval += foldHeader(msg.headers[i]);\n    }\n  }\n\n  // terminate header\n  if(msg.procType) {\n    rval += '\\r\\n';\n  }\n\n  // add body\n  rval += forge.util.encode64(msg.body, options.maxline || 64) + '\\r\\n';\n\n  rval += '-----END ' + msg.type + '-----\\r\\n';\n  return rval;\n};\n\n/**\n * Decodes (deserializes) all PEM messages found in the given string.\n *\n * @param str the PEM-formatted string to decode.\n *\n * @return the PEM message objects in an array.\n */\npem.decode = function(str) {\n  var rval = [];\n\n  // split string into PEM messages (be lenient w/EOF on BEGIN line)\n  var rMessage = /\\s*-----BEGIN ([A-Z0-9- ]+)-----\\r?\\n?([\\x21-\\x7e\\s]+?(?:\\r?\\n\\r?\\n))?([:A-Za-z0-9+\\/=\\s]+?)-----END \\1-----/g;\n  var rHeader = /([\\x21-\\x7e]+):\\s*([\\x21-\\x7e\\s^:]+)/;\n  var rCRLF = /\\r?\\n/;\n  var match;\n  while(true) {\n    match = rMessage.exec(str);\n    if(!match) {\n      break;\n    }\n\n    // accept \"NEW CERTIFICATE REQUEST\" as \"CERTIFICATE REQUEST\"\n    // https://datatracker.ietf.org/doc/html/rfc7468#section-7\n    var type = match[1];\n    if(type === 'NEW CERTIFICATE REQUEST') {\n      type = 'CERTIFICATE REQUEST';\n    }\n\n    var msg = {\n      type: type,\n      procType: null,\n      contentDomain: null,\n      dekInfo: null,\n      headers: [],\n      body: forge.util.decode64(match[3])\n    };\n    rval.push(msg);\n\n    // no headers\n    if(!match[2]) {\n      continue;\n    }\n\n    // parse headers\n    var lines = match[2].split(rCRLF);\n    var li = 0;\n    while(match && li < lines.length) {\n      // get line, trim any rhs whitespace\n      var line = lines[li].replace(/\\s+$/, '');\n\n      // RFC2822 unfold any following folded lines\n      for(var nl = li + 1; nl < lines.length; ++nl) {\n        var next = lines[nl];\n        if(!/\\s/.test(next[0])) {\n          break;\n        }\n        line += next;\n        li = nl;\n      }\n\n      // parse header\n      match = line.match(rHeader);\n      if(match) {\n        var header = {name: match[1], values: []};\n        var values = match[2].split(',');\n        for(var vi = 0; vi < values.length; ++vi) {\n          header.values.push(ltrim(values[vi]));\n        }\n\n        // Proc-Type must be the first header\n        if(!msg.procType) {\n          if(header.name !== 'Proc-Type') {\n            throw new Error('Invalid PEM formatted message. The first ' +\n              'encapsulated header must be \"Proc-Type\".');\n          } else if(header.values.length !== 2) {\n            throw new Error('Invalid PEM formatted message. The \"Proc-Type\" ' +\n              'header must have two subfields.');\n          }\n          msg.procType = {version: values[0], type: values[1]};\n        } else if(!msg.contentDomain && header.name === 'Content-Domain') {\n          // special-case Content-Domain\n          msg.contentDomain = values[0] || '';\n        } else if(!msg.dekInfo && header.name === 'DEK-Info') {\n          // special-case DEK-Info\n          if(header.values.length === 0) {\n            throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n              'header must have at least one subfield.');\n          }\n          msg.dekInfo = {algorithm: values[0], parameters: values[1] || null};\n        } else {\n          msg.headers.push(header);\n        }\n      }\n\n      ++li;\n    }\n\n    if(msg.procType === 'ENCRYPTED' && !msg.dekInfo) {\n      throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n        'header must be present if \"Proc-Type\" is \"ENCRYPTED\".');\n    }\n  }\n\n  if(rval.length === 0) {\n    throw new Error('Invalid PEM formatted message.');\n  }\n\n  return rval;\n};\n\nfunction foldHeader(header) {\n  var rval = header.name + ': ';\n\n  // ensure values with CRLF are folded\n  var values = [];\n  var insertSpace = function(match, $1) {\n    return ' ' + $1;\n  };\n  for(var i = 0; i < header.values.length; ++i) {\n    values.push(header.values[i].replace(/^(\\S+\\r\\n)/, insertSpace));\n  }\n  rval += values.join(',') + '\\r\\n';\n\n  // do folding\n  var length = 0;\n  var candidate = -1;\n  for(var i = 0; i < rval.length; ++i, ++length) {\n    if(length > 65 && candidate !== -1) {\n      var insert = rval[candidate];\n      if(insert === ',') {\n        ++candidate;\n        rval = rval.substr(0, candidate) + '\\r\\n ' + rval.substr(candidate);\n      } else {\n        rval = rval.substr(0, candidate) +\n          '\\r\\n' + insert + rval.substr(candidate + 1);\n      }\n      length = (i - candidate - 1);\n      candidate = -1;\n      ++i;\n    } else if(rval[i] === ' ' || rval[i] === '\\t' || rval[i] === ',') {\n      candidate = i;\n    }\n  }\n\n  return rval;\n}\n\nfunction ltrim(str) {\n  return str.replace(/^\\s+/, '');\n}\n","/**\n * Partial implementation of PKCS#1 v2.2: RSA-OEAP\n *\n * Modified but based on the following MIT and BSD licensed code:\n *\n * https://github.com/kjur/jsjws/blob/master/rsa.js:\n *\n * The 'jsjws'(JSON Web Signature JavaScript Library) License\n *\n * Copyright (c) 2012 Kenji Urushima\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * http://webrsa.cvs.sourceforge.net/viewvc/webrsa/Client/RSAES-OAEP.js?content-type=text%2Fplain:\n *\n * RSAES-OAEP.js\n * $Id: RSAES-OAEP.js,v 1.1.1.1 2003/03/19 15:37:20 ellispritchard Exp $\n * JavaScript Implementation of PKCS #1 v2.1 RSA CRYPTOGRAPHY STANDARD (RSA Laboratories, June 14, 2002)\n * Copyright (C) Ellis Pritchard, Guardian Unlimited 2003.\n * Contact: ellis@nukinetics.com\n * Distributed under the BSD License.\n *\n * Official documentation: http://www.rsa.com/rsalabs/node.asp?id=2125\n *\n * @author Evan Jones (http://evanjones.ca/)\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./random');\nrequire('./sha1');\n\n// shortcut for PKCS#1 API\nvar pkcs1 = module.exports = forge.pkcs1 = forge.pkcs1 || {};\n\n/**\n * Encode the given RSAES-OAEP message (M) using key, with optional label (L)\n * and seed.\n *\n * This method does not perform RSA encryption, it only encodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param message the message to encode.\n * @param options the options to use:\n *          label an optional label to use.\n *          seed the seed to use.\n *          md the message digest object to use, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the encoded message bytes.\n */\npkcs1.encode_rsa_oaep = function(key, message, options) {\n  // parse arguments\n  var label;\n  var seed;\n  var md;\n  var mgf1Md;\n  // legacy args (label, seed, md)\n  if(typeof options === 'string') {\n    label = options;\n    seed = arguments[3] || undefined;\n    md = arguments[4] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    seed = options.seed || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(!md) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  // compute length in bytes and check output\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n  var maxLength = keyLength - 2 * md.digestLength - 2;\n  if(message.length > maxLength) {\n    var error = new Error('RSAES-OAEP input message length is too long.');\n    error.length = message.length;\n    error.maxLength = maxLength;\n    throw error;\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest();\n\n  var PS = '';\n  var PS_length = maxLength - message.length;\n  for(var i = 0; i < PS_length; i++) {\n    PS += '\\x00';\n  }\n\n  var DB = lHash.getBytes() + PS + '\\x01' + message;\n\n  if(!seed) {\n    seed = forge.random.getBytes(md.digestLength);\n  } else if(seed.length !== md.digestLength) {\n    var error = new Error('Invalid RSAES-OAEP seed. The seed length must ' +\n      'match the digest length.');\n    error.seedLength = seed.length;\n    error.digestLength = md.digestLength;\n    throw error;\n  }\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var maskedDB = forge.util.xorBytes(DB, dbMask, DB.length);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var maskedSeed = forge.util.xorBytes(seed, seedMask, seed.length);\n\n  // return encoded message\n  return '\\x00' + maskedSeed + maskedDB;\n};\n\n/**\n * Decode the given RSAES-OAEP encoded message (EM) using key, with optional\n * label (L).\n *\n * This method does not perform RSA decryption, it only decodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param em the encoded message to decode.\n * @param options the options to use:\n *          label an optional label to use.\n *          md the message digest object to use for OAEP, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the decoded message bytes.\n */\npkcs1.decode_rsa_oaep = function(key, em, options) {\n  // parse args\n  var label;\n  var md;\n  var mgf1Md;\n  // legacy args\n  if(typeof options === 'string') {\n    label = options;\n    md = arguments[3] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // compute length in bytes\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n\n  if(em.length !== keyLength) {\n    var error = new Error('RSAES-OAEP encoded message length is invalid.');\n    error.length = em.length;\n    error.expectedLength = keyLength;\n    throw error;\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(md === undefined) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  if(keyLength < 2 * md.digestLength + 2) {\n    throw new Error('RSAES-OAEP key is too short for the hash function.');\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest().getBytes();\n\n  // split the message into its parts\n  var y = em.charAt(0);\n  var maskedSeed = em.substring(1, md.digestLength + 1);\n  var maskedDB = em.substring(1 + md.digestLength);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var seed = forge.util.xorBytes(maskedSeed, seedMask, maskedSeed.length);\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var db = forge.util.xorBytes(maskedDB, dbMask, maskedDB.length);\n\n  var lHashPrime = db.substring(0, md.digestLength);\n\n  // constant time check that all values match what is expected\n  var error = (y !== '\\x00');\n\n  // constant time check lHash vs lHashPrime\n  for(var i = 0; i < md.digestLength; ++i) {\n    error |= (lHash.charAt(i) !== lHashPrime.charAt(i));\n  }\n\n  // \"constant time\" find the 0x1 byte separating the padding (zeros) from the\n  // message\n  // TODO: It must be possible to do this in a better/smarter way?\n  var in_ps = 1;\n  var index = md.digestLength;\n  for(var j = md.digestLength; j < db.length; j++) {\n    var code = db.charCodeAt(j);\n\n    var is_0 = (code & 0x1) ^ 0x1;\n\n    // non-zero if not 0 or 1 in the ps section\n    var error_mask = in_ps ? 0xfffe : 0x0000;\n    error |= (code & error_mask);\n\n    // latch in_ps to zero after we find 0x1\n    in_ps = in_ps & is_0;\n    index += in_ps;\n  }\n\n  if(error || db.charCodeAt(index) !== 0x1) {\n    throw new Error('Invalid RSAES-OAEP padding.');\n  }\n\n  return db.substring(index + 1);\n};\n\nfunction rsa_mgf1(seed, maskLength, hash) {\n  // default to SHA-1 message digest\n  if(!hash) {\n    hash = forge.md.sha1.create();\n  }\n  var t = '';\n  var count = Math.ceil(maskLength / hash.digestLength);\n  for(var i = 0; i < count; ++i) {\n    var c = String.fromCharCode(\n      (i >> 24) & 0xFF, (i >> 16) & 0xFF, (i >> 8) & 0xFF, i & 0xFF);\n    hash.start();\n    hash.update(seed + c);\n    t += hash.digest().getBytes();\n  }\n  return t.substring(0, maskLength);\n}\n","/**\n * Javascript implementation of PKCS#12.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#12 is as follows\n * (see ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-12/pkcs-12-tc1.pdf for details)\n *\n * PFX ::= SEQUENCE {\n *   version  INTEGER {v3(3)}(v3,...),\n *   authSafe ContentInfo,\n *   macData  MacData OPTIONAL\n * }\n *\n * MacData ::= SEQUENCE {\n *   mac DigestInfo,\n *   macSalt OCTET STRING,\n *   iterations INTEGER DEFAULT 1\n * }\n * Note: The iterations default is for historical reasons and its use is\n * deprecated. A higher value, like 1024, is recommended.\n *\n * DigestInfo is defined in PKCS#7 as follows:\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of SHA1 there is none.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * Digest ::= OCTET STRING\n *\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType ContentType,\n *   content     [0] EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * AuthenticatedSafe ::= SEQUENCE OF ContentInfo\n * -- Data if unencrypted\n * -- EncryptedData if password-encrypted\n * -- EnvelopedData if public key-encrypted\n *\n *\n * SafeContents ::= SEQUENCE OF SafeBag\n *\n * SafeBag ::= SEQUENCE {\n *   bagId     BAG-TYPE.&id ({PKCS12BagSet})\n *   bagValue  [0] EXPLICIT BAG-TYPE.&Type({PKCS12BagSet}{@bagId}),\n *   bagAttributes SET OF PKCS12Attribute OPTIONAL\n * }\n *\n * PKCS12Attribute ::= SEQUENCE {\n *   attrId ATTRIBUTE.&id ({PKCS12AttrSet}),\n *   attrValues SET OF ATTRIBUTE.&Type ({PKCS12AttrSet}{@attrId})\n * } -- This type is compatible with the X.500 type 'Attribute'\n *\n * PKCS12AttrSet ATTRIBUTE ::= {\n *   friendlyName | -- from PKCS #9\n *   localKeyId, -- from PKCS #9\n *   ... -- Other attributes are allowed\n * }\n *\n * CertBag ::= SEQUENCE {\n *   certId    BAG-TYPE.&id   ({CertTypes}),\n *   certValue [0] EXPLICIT BAG-TYPE.&Type ({CertTypes}{@certId})\n * }\n *\n * x509Certificate BAG-TYPE ::= {OCTET STRING IDENTIFIED BY {certTypes 1}}\n *   -- DER-encoded X.509 certificate stored in OCTET STRING\n *\n * sdsiCertificate BAG-TYPE ::= {IA5String IDENTIFIED BY {certTypes 2}}\n * -- Base64-encoded SDSI certificate stored in IA5String\n *\n * CertTypes BAG-TYPE ::= {\n *   x509Certificate |\n *   sdsiCertificate,\n *   ... -- For future extensions\n * }\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./hmac');\nrequire('./oids');\nrequire('./pkcs7asn1');\nrequire('./pbe');\nrequire('./random');\nrequire('./rsa');\nrequire('./sha1');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for asn.1 & PKI API\nvar asn1 = forge.asn1;\nvar pki = forge.pki;\n\n// shortcut for PKCS#12 API\nvar p12 = module.exports = forge.pkcs12 = forge.pkcs12 || {};\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,  // a ContentInfo\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'content'\n  }]\n};\n\nvar pfxValidator = {\n  name: 'PFX',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PFX.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  },\n  contentInfoValidator, {\n    name: 'PFX.macData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'mac',\n    value: [{\n      name: 'PFX.macData.mac',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,  // DigestInfo\n      constructed: true,\n      value: [{\n        name: 'PFX.macData.mac.digestAlgorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,  // DigestAlgorithmIdentifier\n        constructed: true,\n        value: [{\n          name: 'PFX.macData.mac.digestAlgorithm.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'macAlgorithm'\n        }, {\n          name: 'PFX.macData.mac.digestAlgorithm.parameters',\n          tagClass: asn1.Class.UNIVERSAL,\n          captureAsn1: 'macAlgorithmParameters'\n        }]\n      }, {\n        name: 'PFX.macData.mac.digest',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'macDigest'\n      }]\n    }, {\n      name: 'PFX.macData.macSalt',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'macSalt'\n    }, {\n      name: 'PFX.macData.iterations',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      optional: true,\n      capture: 'macIterations'\n    }]\n  }]\n};\n\nvar safeBagValidator = {\n  name: 'SafeBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SafeBag.bagId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'bagId'\n  }, {\n    name: 'SafeBag.bagValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'bagValue'\n  }, {\n    name: 'SafeBag.bagAttributes',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    optional: true,\n    capture: 'bagAttributes'\n  }]\n};\n\nvar attributeValidator = {\n  name: 'Attribute',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Attribute.attrId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'oid'\n  }, {\n    name: 'Attribute.attrValues',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    capture: 'values'\n  }]\n};\n\nvar certBagValidator = {\n  name: 'CertBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'CertBag.certId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'certId'\n  }, {\n    name: 'CertBag.certValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    /* So far we only support X.509 certificates (which are wrapped in\n       an OCTET STRING, hence hard code that here). */\n    value: [{\n      name: 'CertBag.certValue[0]',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.OCTETSTRING,\n      constructed: false,\n      capture: 'cert'\n    }]\n  }]\n};\n\n/**\n * Search SafeContents structure for bags with matching attributes.\n *\n * The search can optionally be narrowed by a certain bag type.\n *\n * @param safeContents the SafeContents structure to search in.\n * @param attrName the name of the attribute to compare against.\n * @param attrValue the attribute value to search for.\n * @param [bagType] bag type to narrow search by.\n *\n * @return an array of matching bags.\n */\nfunction _getBagsByAttribute(safeContents, attrName, attrValue, bagType) {\n  var result = [];\n\n  for(var i = 0; i < safeContents.length; i++) {\n    for(var j = 0; j < safeContents[i].safeBags.length; j++) {\n      var bag = safeContents[i].safeBags[j];\n      if(bagType !== undefined && bag.type !== bagType) {\n        continue;\n      }\n      // only filter by bag type, no attribute specified\n      if(attrName === null) {\n        result.push(bag);\n        continue;\n      }\n      if(bag.attributes[attrName] !== undefined &&\n        bag.attributes[attrName].indexOf(attrValue) >= 0) {\n        result.push(bag);\n      }\n    }\n  }\n\n  return result;\n}\n\n/**\n * Converts a PKCS#12 PFX in ASN.1 notation into a PFX object.\n *\n * @param obj The PKCS#12 PFX in ASN.1 notation.\n * @param strict true to use strict DER decoding, false not to (default: true).\n * @param {String} password Password to decrypt with (optional).\n *\n * @return PKCS#12 PFX object.\n */\np12.pkcs12FromAsn1 = function(obj, strict, password) {\n  // handle args\n  if(typeof strict === 'string') {\n    password = strict;\n    strict = true;\n  } else if(strict === undefined) {\n    strict = true;\n  }\n\n  // validate PFX and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, pfxValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#12 PFX. ' +\n      'ASN.1 object is not an PKCS#12 PFX.');\n    error.errors = error;\n    throw error;\n  }\n\n  var pfx = {\n    version: capture.version.charCodeAt(0),\n    safeContents: [],\n\n    /**\n     * Gets bags with matching attributes.\n     *\n     * @param filter the attributes to filter by:\n     *          [localKeyId] the localKeyId to search for.\n     *          [localKeyIdHex] the localKeyId in hex to search for.\n     *          [friendlyName] the friendly name to search for.\n     *          [bagType] bag type to narrow each attribute search by.\n     *\n     * @return a map of attribute type to an array of matching bags or, if no\n     *           attribute was given but a bag type, the map key will be the\n     *           bag type.\n     */\n    getBags: function(filter) {\n      var rval = {};\n\n      var localKeyId;\n      if('localKeyId' in filter) {\n        localKeyId = filter.localKeyId;\n      } else if('localKeyIdHex' in filter) {\n        localKeyId = forge.util.hexToBytes(filter.localKeyIdHex);\n      }\n\n      // filter on bagType only\n      if(localKeyId === undefined && !('friendlyName' in filter) &&\n        'bagType' in filter) {\n        rval[filter.bagType] = _getBagsByAttribute(\n          pfx.safeContents, null, null, filter.bagType);\n      }\n\n      if(localKeyId !== undefined) {\n        rval.localKeyId = _getBagsByAttribute(\n          pfx.safeContents, 'localKeyId',\n          localKeyId, filter.bagType);\n      }\n      if('friendlyName' in filter) {\n        rval.friendlyName = _getBagsByAttribute(\n          pfx.safeContents, 'friendlyName',\n          filter.friendlyName, filter.bagType);\n      }\n\n      return rval;\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching friendlyName attribute.\n     *\n     * @param friendlyName the friendly name to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching friendlyName attribute.\n     */\n    getBagsByFriendlyName: function(friendlyName, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'friendlyName', friendlyName, bagType);\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching localKeyId attribute.\n     *\n     * @param localKeyId the localKeyId to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching localKeyId attribute.\n     */\n    getBagsByLocalKeyId: function(localKeyId, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'localKeyId', localKeyId, bagType);\n    }\n  };\n\n  if(capture.version.charCodeAt(0) !== 3) {\n    var error = new Error('PKCS#12 PFX of version other than 3 not supported.');\n    error.version = capture.version.charCodeAt(0);\n    throw error;\n  }\n\n  if(asn1.derToOid(capture.contentType) !== pki.oids.data) {\n    var error = new Error('Only PKCS#12 PFX in password integrity mode supported.');\n    error.oid = asn1.derToOid(capture.contentType);\n    throw error;\n  }\n\n  var data = capture.content.value[0];\n  if(data.tagClass !== asn1.Class.UNIVERSAL ||\n     data.type !== asn1.Type.OCTETSTRING) {\n    throw new Error('PKCS#12 authSafe content data is not an OCTET STRING.');\n  }\n  data = _decodePkcs7Data(data);\n\n  // check for MAC\n  if(capture.mac) {\n    var md = null;\n    var macKeyBytes = 0;\n    var macAlgorithm = asn1.derToOid(capture.macAlgorithm);\n    switch(macAlgorithm) {\n    case pki.oids.sha1:\n      md = forge.md.sha1.create();\n      macKeyBytes = 20;\n      break;\n    case pki.oids.sha256:\n      md = forge.md.sha256.create();\n      macKeyBytes = 32;\n      break;\n    case pki.oids.sha384:\n      md = forge.md.sha384.create();\n      macKeyBytes = 48;\n      break;\n    case pki.oids.sha512:\n      md = forge.md.sha512.create();\n      macKeyBytes = 64;\n      break;\n    case pki.oids.md5:\n      md = forge.md.md5.create();\n      macKeyBytes = 16;\n      break;\n    }\n    if(md === null) {\n      throw new Error('PKCS#12 uses unsupported MAC algorithm: ' + macAlgorithm);\n    }\n\n    // verify MAC (iterations default to 1)\n    var macSalt = new forge.util.ByteBuffer(capture.macSalt);\n    var macIterations = (('macIterations' in capture) ?\n      parseInt(forge.util.bytesToHex(capture.macIterations), 16) : 1);\n    var macKey = p12.generateKey(\n      password, macSalt, 3, macIterations, macKeyBytes, md);\n    var mac = forge.hmac.create();\n    mac.start(md, macKey);\n    mac.update(data.value);\n    var macValue = mac.getMac();\n    if(macValue.getBytes() !== capture.macDigest) {\n      throw new Error('PKCS#12 MAC could not be verified. Invalid password?');\n    }\n  }\n\n  _decodeAuthenticatedSafe(pfx, data.value, strict, password);\n  return pfx;\n};\n\n/**\n * Decodes PKCS#7 Data. PKCS#7 (RFC 2315) defines \"Data\" as an OCTET STRING,\n * but it is sometimes an OCTET STRING that is composed/constructed of chunks,\n * each its own OCTET STRING. This is BER-encoding vs. DER-encoding. This\n * function transforms this corner-case into the usual simple,\n * non-composed/constructed OCTET STRING.\n *\n * This function may be moved to ASN.1 at some point to better deal with\n * more BER-encoding issues, should they arise.\n *\n * @param data the ASN.1 Data object to transform.\n */\nfunction _decodePkcs7Data(data) {\n  // handle special case of \"chunked\" data content: an octet string composed\n  // of other octet strings\n  if(data.composed || data.constructed) {\n    var value = forge.util.createBuffer();\n    for(var i = 0; i < data.value.length; ++i) {\n      value.putBytes(data.value[i].value);\n    }\n    data.composed = data.constructed = false;\n    data.value = value.getBytes();\n  }\n  return data;\n}\n\n/**\n * Decode PKCS#12 AuthenticatedSafe (BER encoded) into PFX object.\n *\n * The AuthenticatedSafe is a BER-encoded SEQUENCE OF ContentInfo.\n *\n * @param pfx The PKCS#12 PFX object to fill.\n * @param {String} authSafe BER-encoded AuthenticatedSafe.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n */\nfunction _decodeAuthenticatedSafe(pfx, authSafe, strict, password) {\n  authSafe = asn1.fromDer(authSafe, strict);  /* actually it's BER encoded */\n\n  if(authSafe.tagClass !== asn1.Class.UNIVERSAL ||\n     authSafe.type !== asn1.Type.SEQUENCE ||\n     authSafe.constructed !== true) {\n    throw new Error('PKCS#12 AuthenticatedSafe expected to be a ' +\n      'SEQUENCE OF ContentInfo');\n  }\n\n  for(var i = 0; i < authSafe.value.length; i++) {\n    var contentInfo = authSafe.value[i];\n\n    // validate contentInfo and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(contentInfo, contentInfoValidator, capture, errors)) {\n      var error = new Error('Cannot read ContentInfo.');\n      error.errors = errors;\n      throw error;\n    }\n\n    var obj = {\n      encrypted: false\n    };\n    var safeContents = null;\n    var data = capture.content.value[0];\n    switch(asn1.derToOid(capture.contentType)) {\n    case pki.oids.data:\n      if(data.tagClass !== asn1.Class.UNIVERSAL ||\n         data.type !== asn1.Type.OCTETSTRING) {\n        throw new Error('PKCS#12 SafeContents Data is not an OCTET STRING.');\n      }\n      safeContents = _decodePkcs7Data(data).value;\n      break;\n    case pki.oids.encryptedData:\n      safeContents = _decryptSafeContents(data, password);\n      obj.encrypted = true;\n      break;\n    default:\n      var error = new Error('Unsupported PKCS#12 contentType.');\n      error.contentType = asn1.derToOid(capture.contentType);\n      throw error;\n    }\n\n    obj.safeBags = _decodeSafeContents(safeContents, strict, password);\n    pfx.safeContents.push(obj);\n  }\n}\n\n/**\n * Decrypt PKCS#7 EncryptedData structure.\n *\n * @param data ASN.1 encoded EncryptedContentInfo object.\n * @param password The user-provided password.\n *\n * @return The decrypted SafeContents (ASN.1 object).\n */\nfunction _decryptSafeContents(data, password) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(\n    data, forge.pkcs7.asn1.encryptedDataValidator, capture, errors)) {\n    var error = new Error('Cannot read EncryptedContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var oid = asn1.derToOid(capture.contentType);\n  if(oid !== pki.oids.data) {\n    var error = new Error(\n      'PKCS#12 EncryptedContentInfo ContentType is not Data.');\n    error.oid = oid;\n    throw error;\n  }\n\n  // get cipher\n  oid = asn1.derToOid(capture.encAlgorithm);\n  var cipher = pki.pbe.getCipher(oid, capture.encParameter, password);\n\n  // get encrypted data\n  var encryptedContentAsn1 = _decodePkcs7Data(capture.encryptedContentAsn1);\n  var encrypted = forge.util.createBuffer(encryptedContentAsn1.value);\n\n  cipher.update(encrypted);\n  if(!cipher.finish()) {\n    throw new Error('Failed to decrypt PKCS#12 SafeContents.');\n  }\n\n  return cipher.output.getBytes();\n}\n\n/**\n * Decode PKCS#12 SafeContents (BER-encoded) into array of Bag objects.\n *\n * The safeContents is a BER-encoded SEQUENCE OF SafeBag.\n *\n * @param {String} safeContents BER-encoded safeContents.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n *\n * @return {Array} Array of Bag objects.\n */\nfunction _decodeSafeContents(safeContents, strict, password) {\n  // if strict and no safe contents, return empty safes\n  if(!strict && safeContents.length === 0) {\n    return [];\n  }\n\n  // actually it's BER-encoded\n  safeContents = asn1.fromDer(safeContents, strict);\n\n  if(safeContents.tagClass !== asn1.Class.UNIVERSAL ||\n    safeContents.type !== asn1.Type.SEQUENCE ||\n    safeContents.constructed !== true) {\n    throw new Error(\n      'PKCS#12 SafeContents expected to be a SEQUENCE OF SafeBag.');\n  }\n\n  var res = [];\n  for(var i = 0; i < safeContents.value.length; i++) {\n    var safeBag = safeContents.value[i];\n\n    // validate SafeBag and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(safeBag, safeBagValidator, capture, errors)) {\n      var error = new Error('Cannot read SafeBag.');\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Create bag object and push to result array. */\n    var bag = {\n      type: asn1.derToOid(capture.bagId),\n      attributes: _decodeBagAttributes(capture.bagAttributes)\n    };\n    res.push(bag);\n\n    var validator, decoder;\n    var bagAsn1 = capture.bagValue.value[0];\n    switch(bag.type) {\n      case pki.oids.pkcs8ShroudedKeyBag:\n        /* bagAsn1 has a EncryptedPrivateKeyInfo, which we need to decrypt.\n           Afterwards we can handle it like a keyBag,\n           which is a PrivateKeyInfo. */\n        bagAsn1 = pki.decryptPrivateKeyInfo(bagAsn1, password);\n        if(bagAsn1 === null) {\n          throw new Error(\n            'Unable to decrypt PKCS#8 ShroudedKeyBag, wrong password?');\n        }\n\n        /* fall through */\n      case pki.oids.keyBag:\n        /* A PKCS#12 keyBag is a simple PrivateKeyInfo as understood by our\n           PKI module, hence we don't have to do validation/capturing here,\n           just pass what we already got. */\n        try {\n          bag.key = pki.privateKeyFromAsn1(bagAsn1);\n        } catch(e) {\n          // ignore unknown key type, pass asn1 value\n          bag.key = null;\n          bag.asn1 = bagAsn1;\n        }\n        continue;  /* Nothing more to do. */\n\n      case pki.oids.certBag:\n        /* A PKCS#12 certBag can wrap both X.509 and sdsi certificates.\n           Therefore put the SafeBag content through another validator to\n           capture the fields.  Afterwards check & store the results. */\n        validator = certBagValidator;\n        decoder = function() {\n          if(asn1.derToOid(capture.certId) !== pki.oids.x509Certificate) {\n            var error = new Error(\n              'Unsupported certificate type, only X.509 supported.');\n            error.oid = asn1.derToOid(capture.certId);\n            throw error;\n          }\n\n          // true=produce cert hash\n          var certAsn1 = asn1.fromDer(capture.cert, strict);\n          try {\n            bag.cert = pki.certificateFromAsn1(certAsn1, true);\n          } catch(e) {\n            // ignore unknown cert type, pass asn1 value\n            bag.cert = null;\n            bag.asn1 = certAsn1;\n          }\n        };\n        break;\n\n      default:\n        var error = new Error('Unsupported PKCS#12 SafeBag type.');\n        error.oid = bag.type;\n        throw error;\n    }\n\n    /* Validate SafeBag value (i.e. CertBag, etc.) and capture data if needed. */\n    if(validator !== undefined &&\n       !asn1.validate(bagAsn1, validator, capture, errors)) {\n      var error = new Error('Cannot read PKCS#12 ' + validator.name);\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Call decoder function from above to store the results. */\n    decoder();\n  }\n\n  return res;\n}\n\n/**\n * Decode PKCS#12 SET OF PKCS12Attribute into JavaScript object.\n *\n * @param attributes SET OF PKCS12Attribute (ASN.1 object).\n *\n * @return the decoded attributes.\n */\nfunction _decodeBagAttributes(attributes) {\n  var decodedAttrs = {};\n\n  if(attributes !== undefined) {\n    for(var i = 0; i < attributes.length; ++i) {\n      var capture = {};\n      var errors = [];\n      if(!asn1.validate(attributes[i], attributeValidator, capture, errors)) {\n        var error = new Error('Cannot read PKCS#12 BagAttribute.');\n        error.errors = errors;\n        throw error;\n      }\n\n      var oid = asn1.derToOid(capture.oid);\n      if(pki.oids[oid] === undefined) {\n        // unsupported attribute type, ignore.\n        continue;\n      }\n\n      decodedAttrs[pki.oids[oid]] = [];\n      for(var j = 0; j < capture.values.length; ++j) {\n        decodedAttrs[pki.oids[oid]].push(capture.values[j].value);\n      }\n    }\n  }\n\n  return decodedAttrs;\n}\n\n/**\n * Wraps a private key and certificate in a PKCS#12 PFX wrapper. If a\n * password is provided then the private key will be encrypted.\n *\n * An entire certificate chain may also be included. To do this, pass\n * an array for the \"cert\" parameter where the first certificate is\n * the one that is paired with the private key and each subsequent one\n * verifies the previous one. The certificates may be in PEM format or\n * have been already parsed by Forge.\n *\n * @todo implement password-based-encryption for the whole package\n *\n * @param key the private key.\n * @param cert the certificate (may be an array of certificates in order\n *          to specify a certificate chain).\n * @param password the password to use, null for none.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          useMac true to include a MAC, false not to, defaults to true.\n *          localKeyId the local key ID to use, in hex.\n *          friendlyName the friendly name to use.\n *          generateLocalKeyId true to generate a random local key ID,\n *            false not to, defaults to true.\n *\n * @return the PKCS#12 PFX ASN.1 object.\n */\np12.toPkcs12Asn1 = function(key, cert, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || options.encAlgorithm || 'aes128';\n  if(!('useMac' in options)) {\n    options.useMac = true;\n  }\n  if(!('localKeyId' in options)) {\n    options.localKeyId = null;\n  }\n  if(!('generateLocalKeyId' in options)) {\n    options.generateLocalKeyId = true;\n  }\n\n  var localKeyId = options.localKeyId;\n  var bagAttrs;\n  if(localKeyId !== null) {\n    localKeyId = forge.util.hexToBytes(localKeyId);\n  } else if(options.generateLocalKeyId) {\n    // use SHA-1 of paired cert, if available\n    if(cert) {\n      var pairedCert = forge.util.isArray(cert) ? cert[0] : cert;\n      if(typeof pairedCert === 'string') {\n        pairedCert = pki.certificateFromPem(pairedCert);\n      }\n      var sha1 = forge.md.sha1.create();\n      sha1.update(asn1.toDer(pki.certificateToAsn1(pairedCert)).getBytes());\n      localKeyId = sha1.digest().getBytes();\n    } else {\n      // FIXME: consider using SHA-1 of public key (which can be generated\n      // from private key components), see: cert.generateSubjectKeyIdentifier\n      // generate random bytes\n      localKeyId = forge.random.getBytes(20);\n    }\n  }\n\n  var attrs = [];\n  if(localKeyId !== null) {\n    attrs.push(\n      // localKeyID\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.localKeyId).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            localKeyId)\n        ])\n      ]));\n  }\n  if('friendlyName' in options) {\n    attrs.push(\n      // friendlyName\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.friendlyName).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BMPSTRING, false,\n            options.friendlyName)\n        ])\n      ]));\n  }\n\n  if(attrs.length > 0) {\n    bagAttrs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, attrs);\n  }\n\n  // collect contents for AuthenticatedSafe\n  var contents = [];\n\n  // create safe bag(s) for certificate chain\n  var chain = [];\n  if(cert !== null) {\n    if(forge.util.isArray(cert)) {\n      chain = cert;\n    } else {\n      chain = [cert];\n    }\n  }\n\n  var certSafeBags = [];\n  for(var i = 0; i < chain.length; ++i) {\n    // convert cert from PEM as necessary\n    cert = chain[i];\n    if(typeof cert === 'string') {\n      cert = pki.certificateFromPem(cert);\n    }\n\n    // SafeBag\n    var certBagAttrs = (i === 0) ? bagAttrs : undefined;\n    var certAsn1 = pki.certificateToAsn1(cert);\n    var certSafeBag =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.certBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // CertBag\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // certId\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(pki.oids.x509Certificate).getBytes()),\n            // certValue (x509Certificate)\n            asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n              asn1.create(\n                asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                asn1.toDer(certAsn1).getBytes())\n            ])])]),\n        // bagAttributes (OPTIONAL)\n        certBagAttrs\n      ]);\n    certSafeBags.push(certSafeBag);\n  }\n\n  if(certSafeBags.length > 0) {\n    // SafeContents\n    var certSafeContents = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, certSafeBags);\n\n    // ContentInfo\n    var certCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(certSafeContents).getBytes())\n        ])\n      ]);\n    contents.push(certCI);\n  }\n\n  // create safe contents for private key\n  var keyBag = null;\n  if(key !== null) {\n    // SafeBag\n    var pkAsn1 = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(key));\n    if(password === null) {\n      // no encryption\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.keyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // PrivateKeyInfo\n          pkAsn1\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    } else {\n      // encrypted PrivateKeyInfo\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.pkcs8ShroudedKeyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // EncryptedPrivateKeyInfo\n          pki.encryptPrivateKeyInfo(pkAsn1, password, options)\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    }\n\n    // SafeContents\n    var keySafeContents =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [keyBag]);\n\n    // ContentInfo\n    var keyCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(keySafeContents).getBytes())\n        ])\n      ]);\n    contents.push(keyCI);\n  }\n\n  // create AuthenticatedSafe by stringing together the contents\n  var safe = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, contents);\n\n  var macData;\n  if(options.useMac) {\n    // MacData\n    var sha1 = forge.md.sha1.create();\n    var macSalt = new forge.util.ByteBuffer(\n      forge.random.getBytes(options.saltSize));\n    var count = options.count;\n    // 160-bit key\n    var key = p12.generateKey(password, macSalt, 3, count, 20);\n    var mac = forge.hmac.create();\n    mac.start(sha1, key);\n    mac.update(asn1.toDer(safe).getBytes());\n    var macValue = mac.getMac();\n    macData = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // mac DigestInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // digestAlgorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm = SHA-1\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(pki.oids.sha1).getBytes()),\n          // parameters = Null\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]),\n        // digest\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n          false, macValue.getBytes())\n      ]),\n      // macSalt OCTET STRING\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, macSalt.getBytes()),\n      // iterations INTEGER (XXX: Only support count < 65536)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(count).getBytes()\n      )\n    ]);\n  }\n\n  // PFX\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (3)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(3).getBytes()),\n    // PKCS#7 ContentInfo\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // contentType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        // OID for the content type is 'data'\n        asn1.oidToDer(pki.oids.data).getBytes()),\n      // content\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          asn1.toDer(safe).getBytes())\n      ])\n    ]),\n    macData\n  ]);\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\np12.generateKey = forge.pbe.generatePkcs12Key;\n","/**\n * Javascript implementation of PKCS#7 v1.5.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n *\n * Currently this implementation only supports ContentType of EnvelopedData,\n * EncryptedData, or SignedData at the root level. The top level elements may\n * contain only a ContentInfo of ContentType Data, i.e. plain data. Further\n * nesting is not (yet) supported.\n *\n * The Forge validators for PKCS #7's ASN.1 structures are available from\n * a separate file pkcs7asn1.js, since those are referenced from other\n * PKCS standards like PKCS #12.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./oids');\nrequire('./pem');\nrequire('./pkcs7asn1');\nrequire('./random');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7 = module.exports = forge.pkcs7 = forge.pkcs7 || {};\n\n/**\n * Converts a PKCS#7 message from PEM format.\n *\n * @param pem the PEM-formatted PKCS#7 message.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PKCS7') {\n    var error = new Error('Could not convert PKCS#7 message from PEM; PEM ' +\n      'header type is not \"PKCS#7\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PKCS#7 message from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return p7.messageFromAsn1(obj);\n};\n\n/**\n * Converts a PKCS#7 message to PEM format.\n *\n * @param msg The PKCS#7 message object\n * @param maxline The maximum characters per line, defaults to 64.\n *\n * @return The PEM-formatted PKCS#7 message.\n */\np7.messageToPem = function(msg, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var pemObj = {\n    type: 'PKCS7',\n    body: asn1.toDer(msg.toAsn1()).getBytes()\n  };\n  return forge.pem.encode(pemObj, {maxline: maxline});\n};\n\n/**\n * Converts a PKCS#7 message from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a ContentInfo.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromAsn1 = function(obj) {\n  // validate root level ContentInfo and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.contentInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not an PKCS#7 ContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var contentType = asn1.derToOid(capture.contentType);\n  var msg;\n\n  switch(contentType) {\n    case forge.pki.oids.envelopedData:\n      msg = p7.createEnvelopedData();\n      break;\n\n    case forge.pki.oids.encryptedData:\n      msg = p7.createEncryptedData();\n      break;\n\n    case forge.pki.oids.signedData:\n      msg = p7.createSignedData();\n      break;\n\n    default:\n      throw new Error('Cannot read PKCS#7 message. ContentType with OID ' +\n        contentType + ' is not (yet) supported.');\n  }\n\n  msg.fromAsn1(capture.content.value[0]);\n  return msg;\n};\n\np7.createSignedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.signedData,\n    version: 1,\n    certificates: [],\n    crls: [],\n    // TODO: add json-formatted signer stuff here?\n    signers: [],\n    // populated during sign()\n    digestAlgorithmIdentifiers: [],\n    contentInfo: null,\n    signerInfos: [],\n\n    fromAsn1: function(obj) {\n      // validate SignedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.signedDataValidator);\n      msg.certificates = [];\n      msg.crls = [];\n      msg.digestAlgorithmIdentifiers = [];\n      msg.contentInfo = null;\n      msg.signerInfos = [];\n\n      if(msg.rawCapture.certificates) {\n        var certs = msg.rawCapture.certificates.value;\n        for(var i = 0; i < certs.length; ++i) {\n          msg.certificates.push(forge.pki.certificateFromAsn1(certs[i]));\n        }\n      }\n\n      // TODO: parse crls\n    },\n\n    toAsn1: function() {\n      // degenerate case with no content\n      if(!msg.contentInfo) {\n        msg.sign();\n      }\n\n      var certs = [];\n      for(var i = 0; i < msg.certificates.length; ++i) {\n        certs.push(forge.pki.certificateToAsn1(msg.certificates[i]));\n      }\n\n      var crls = [];\n      // TODO: implement CRLs\n\n      // [0] SignedData\n      var signedData = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // Version\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(msg.version).getBytes()),\n          // DigestAlgorithmIdentifiers\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n            msg.digestAlgorithmIdentifiers),\n          // ContentInfo\n          msg.contentInfo\n        ])\n      ]);\n      if(certs.length > 0) {\n        // [0] IMPLICIT ExtendedCertificatesAndCertificates OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, certs));\n      }\n      if(crls.length > 0) {\n        // [1] IMPLICIT CertificateRevocationLists OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, crls));\n      }\n      // SignerInfos\n      signedData.value[0].value.push(\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n          msg.signerInfos));\n\n      // ContentInfo\n      return asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // ContentType\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(msg.type).getBytes()),\n          // [0] SignedData\n          signedData\n        ]);\n    },\n\n    /**\n     * Add (another) entity to list of signers.\n     *\n     * Note: If authenticatedAttributes are provided, then, per RFC 2315,\n     * they must include at least two attributes: content type and\n     * message digest. The message digest attribute value will be\n     * auto-calculated during signing and will be ignored if provided.\n     *\n     * Here's an example of providing these two attributes:\n     *\n     * forge.pkcs7.createSignedData();\n     * p7.addSigner({\n     *   issuer: cert.issuer.attributes,\n     *   serialNumber: cert.serialNumber,\n     *   key: privateKey,\n     *   digestAlgorithm: forge.pki.oids.sha1,\n     *   authenticatedAttributes: [{\n     *     type: forge.pki.oids.contentType,\n     *     value: forge.pki.oids.data\n     *   }, {\n     *     type: forge.pki.oids.messageDigest\n     *   }]\n     * });\n     *\n     * TODO: Support [subjectKeyIdentifier] as signer's ID.\n     *\n     * @param signer the signer information:\n     *          key the signer's private key.\n     *          [certificate] a certificate containing the public key\n     *            associated with the signer's private key; use this option as\n     *            an alternative to specifying signer.issuer and\n     *            signer.serialNumber.\n     *          [issuer] the issuer attributes (eg: cert.issuer.attributes).\n     *          [serialNumber] the signer's certificate's serial number in\n     *           hexadecimal (eg: cert.serialNumber).\n     *          [digestAlgorithm] the message digest OID, as a string, to use\n     *            (eg: forge.pki.oids.sha1).\n     *          [authenticatedAttributes] an optional array of attributes\n     *            to also sign along with the content.\n     */\n    addSigner: function(signer) {\n      var issuer = signer.issuer;\n      var serialNumber = signer.serialNumber;\n      if(signer.certificate) {\n        var cert = signer.certificate;\n        if(typeof cert === 'string') {\n          cert = forge.pki.certificateFromPem(cert);\n        }\n        issuer = cert.issuer.attributes;\n        serialNumber = cert.serialNumber;\n      }\n      var key = signer.key;\n      if(!key) {\n        throw new Error(\n          'Could not add PKCS#7 signer; no private key specified.');\n      }\n      if(typeof key === 'string') {\n        key = forge.pki.privateKeyFromPem(key);\n      }\n\n      // ensure OID known for digest algorithm\n      var digestAlgorithm = signer.digestAlgorithm || forge.pki.oids.sha1;\n      switch(digestAlgorithm) {\n      case forge.pki.oids.sha1:\n      case forge.pki.oids.sha256:\n      case forge.pki.oids.sha384:\n      case forge.pki.oids.sha512:\n      case forge.pki.oids.md5:\n        break;\n      default:\n        throw new Error(\n          'Could not add PKCS#7 signer; unknown message digest algorithm: ' +\n          digestAlgorithm);\n      }\n\n      // if authenticatedAttributes is present, then the attributes\n      // must contain at least PKCS #9 content-type and message-digest\n      var authenticatedAttributes = signer.authenticatedAttributes || [];\n      if(authenticatedAttributes.length > 0) {\n        var contentType = false;\n        var messageDigest = false;\n        for(var i = 0; i < authenticatedAttributes.length; ++i) {\n          var attr = authenticatedAttributes[i];\n          if(!contentType && attr.type === forge.pki.oids.contentType) {\n            contentType = true;\n            if(messageDigest) {\n              break;\n            }\n            continue;\n          }\n          if(!messageDigest && attr.type === forge.pki.oids.messageDigest) {\n            messageDigest = true;\n            if(contentType) {\n              break;\n            }\n            continue;\n          }\n        }\n\n        if(!contentType || !messageDigest) {\n          throw new Error('Invalid signer.authenticatedAttributes. If ' +\n            'signer.authenticatedAttributes is specified, then it must ' +\n            'contain at least two attributes, PKCS #9 content-type and ' +\n            'PKCS #9 message-digest.');\n        }\n      }\n\n      msg.signers.push({\n        key: key,\n        version: 1,\n        issuer: issuer,\n        serialNumber: serialNumber,\n        digestAlgorithm: digestAlgorithm,\n        signatureAlgorithm: forge.pki.oids.rsaEncryption,\n        signature: null,\n        authenticatedAttributes: authenticatedAttributes,\n        unauthenticatedAttributes: []\n      });\n    },\n\n    /**\n     * Signs the content.\n     * @param options Options to apply when signing:\n     *    [detached] boolean. If signing should be done in detached mode. Defaults to false.\n     */\n    sign: function(options) {\n      options = options || {};\n      // auto-generate content info\n      if(typeof msg.content !== 'object' || msg.contentInfo === null) {\n        // use Data ContentInfo\n        msg.contentInfo = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // ContentType\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(forge.pki.oids.data).getBytes())\n          ]);\n\n        // add actual content, if present\n        if('content' in msg) {\n          var content;\n          if(msg.content instanceof forge.util.ByteBuffer) {\n            content = msg.content.bytes();\n          } else if(typeof msg.content === 'string') {\n            content = forge.util.encodeUtf8(msg.content);\n          }\n\n          if (options.detached) {\n            msg.detachedContent = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, content);\n          } else {\n            msg.contentInfo.value.push(\n              // [0] EXPLICIT content\n              asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n                asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                  content)\n              ]));\n          }\n        }\n      }\n\n      // no signers, return early (degenerate case for certificate container)\n      if(msg.signers.length === 0) {\n        return;\n      }\n\n      // generate digest algorithm identifiers\n      var mds = addDigestAlgorithmIds();\n\n      // generate signerInfos\n      addSignerInfos(mds);\n    },\n\n    verify: function() {\n      throw new Error('PKCS#7 signature verification not yet implemented.');\n    },\n\n    /**\n     * Add a certificate.\n     *\n     * @param cert the certificate to add.\n     */\n    addCertificate: function(cert) {\n      // convert from PEM\n      if(typeof cert === 'string') {\n        cert = forge.pki.certificateFromPem(cert);\n      }\n      msg.certificates.push(cert);\n    },\n\n    /**\n     * Add a certificate revokation list.\n     *\n     * @param crl the certificate revokation list to add.\n     */\n    addCertificateRevokationList: function(crl) {\n      throw new Error('PKCS#7 CRL support not yet implemented.');\n    }\n  };\n  return msg;\n\n  function addDigestAlgorithmIds() {\n    var mds = {};\n\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n      var oid = signer.digestAlgorithm;\n      if(!(oid in mds)) {\n        // content digest\n        mds[oid] = forge.md[forge.pki.oids[oid]].create();\n      }\n      if(signer.authenticatedAttributes.length === 0) {\n        // no custom attributes to digest; use content message digest\n        signer.md = mds[oid];\n      } else {\n        // custom attributes to be digested; use own message digest\n        // TODO: optimize to just copy message digest state if that\n        // feature is ever supported with message digests\n        signer.md = forge.md[forge.pki.oids[oid]].create();\n      }\n    }\n\n    // add unique digest algorithm identifiers\n    msg.digestAlgorithmIdentifiers = [];\n    for(var oid in mds) {\n      msg.digestAlgorithmIdentifiers.push(\n        // AlgorithmIdentifier\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oid).getBytes()),\n          // parameters (null)\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]));\n    }\n\n    return mds;\n  }\n\n  function addSignerInfos(mds) {\n    var content;\n\n    if (msg.detachedContent) {\n      // Signature has been made in detached mode.\n      content = msg.detachedContent;\n    } else {\n      // Note: ContentInfo is a SEQUENCE with 2 values, second value is\n      // the content field and is optional for a ContentInfo but required here\n      // since signers are present\n      // get ContentInfo content\n      content = msg.contentInfo.value[1];\n      // skip [0] EXPLICIT content wrapper\n      content = content.value[0];\n    }\n\n    if(!content) {\n      throw new Error(\n        'Could not sign PKCS#7 message; there is no content to sign.');\n    }\n\n    // get ContentInfo content type\n    var contentType = asn1.derToOid(msg.contentInfo.value[0].value);\n\n    // serialize content\n    var bytes = asn1.toDer(content);\n\n    // skip identifier and length per RFC 2315 9.3\n    // skip identifier (1 byte)\n    bytes.getByte();\n    // read and discard length bytes\n    asn1.getBerValueLength(bytes);\n    bytes = bytes.getBytes();\n\n    // digest content DER value bytes\n    for(var oid in mds) {\n      mds[oid].start().update(bytes);\n    }\n\n    // sign content\n    var signingTime = new Date();\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n\n      if(signer.authenticatedAttributes.length === 0) {\n        // if ContentInfo content type is not \"Data\", then\n        // authenticatedAttributes must be present per RFC 2315\n        if(contentType !== forge.pki.oids.data) {\n          throw new Error(\n            'Invalid signer; authenticatedAttributes must be present ' +\n            'when the ContentInfo content type is not PKCS#7 Data.');\n        }\n      } else {\n        // process authenticated attributes\n        // [0] IMPLICIT\n        signer.authenticatedAttributesAsn1 = asn1.create(\n          asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n        // per RFC 2315, attributes are to be digested using a SET container\n        // not the above [0] IMPLICIT container\n        var attrsAsn1 = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SET, true, []);\n\n        for(var ai = 0; ai < signer.authenticatedAttributes.length; ++ai) {\n          var attr = signer.authenticatedAttributes[ai];\n          if(attr.type === forge.pki.oids.messageDigest) {\n            // use content message digest as value\n            attr.value = mds[signer.digestAlgorithm].digest();\n          } else if(attr.type === forge.pki.oids.signingTime) {\n            // auto-populate signing time if not already set\n            if(!attr.value) {\n              attr.value = signingTime;\n            }\n          }\n\n          // convert to ASN.1 and push onto Attributes SET (for signing) and\n          // onto authenticatedAttributesAsn1 to complete SignedData ASN.1\n          // TODO: optimize away duplication\n          attrsAsn1.value.push(_attributeToAsn1(attr));\n          signer.authenticatedAttributesAsn1.value.push(_attributeToAsn1(attr));\n        }\n\n        // DER-serialize and digest SET OF attributes only\n        bytes = asn1.toDer(attrsAsn1).getBytes();\n        signer.md.start().update(bytes);\n      }\n\n      // sign digest\n      signer.signature = signer.key.sign(signer.md, 'RSASSA-PKCS1-V1_5');\n    }\n\n    // add signer info\n    msg.signerInfos = _signersToAsn1(msg.signers);\n  }\n};\n\n/**\n * Creates an empty PKCS#7 message of type EncryptedData.\n *\n * @return the message.\n */\np7.createEncryptedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.encryptedData,\n    version: 0,\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EncryptedData content block (in ASN.1 format)\n     *\n     * @param obj The ASN.1 representation of the EncryptedData content block\n     */\n    fromAsn1: function(obj) {\n      // Validate EncryptedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.encryptedDataValidator);\n    },\n\n    /**\n     * Decrypt encrypted content\n     *\n     * @param key The (symmetric) key as a byte buffer\n     */\n    decrypt: function(key) {\n      if(key !== undefined) {\n        msg.encryptedContent.key = key;\n      }\n      _decryptContent(msg);\n    }\n  };\n  return msg;\n};\n\n/**\n * Creates an empty PKCS#7 message of type EnvelopedData.\n *\n * @return the message.\n */\np7.createEnvelopedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.envelopedData,\n    version: 0,\n    recipients: [],\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EnvelopedData content block (in ASN.1 format)\n     *\n     * @param obj the ASN.1 representation of the EnvelopedData content block.\n     */\n    fromAsn1: function(obj) {\n      // validate EnvelopedData content block and capture data\n      var capture = _fromAsn1(msg, obj, p7.asn1.envelopedDataValidator);\n      msg.recipients = _recipientsFromAsn1(capture.recipientInfos.value);\n    },\n\n    toAsn1: function() {\n      // ContentInfo\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // ContentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(msg.type).getBytes()),\n        // [0] EnvelopedData\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // Version\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n              asn1.integerToDer(msg.version).getBytes()),\n            // RecipientInfos\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n              _recipientsToAsn1(msg.recipients)),\n            // EncryptedContentInfo\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true,\n              _encryptedContentToAsn1(msg.encryptedContent))\n          ])\n        ])\n      ]);\n    },\n\n    /**\n     * Find recipient by X.509 certificate's issuer.\n     *\n     * @param cert the certificate with the issuer to look for.\n     *\n     * @return the recipient object.\n     */\n    findRecipient: function(cert) {\n      var sAttr = cert.issuer.attributes;\n\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var r = msg.recipients[i];\n        var rAttr = r.issuer;\n\n        if(r.serialNumber !== cert.serialNumber) {\n          continue;\n        }\n\n        if(rAttr.length !== sAttr.length) {\n          continue;\n        }\n\n        var match = true;\n        for(var j = 0; j < sAttr.length; ++j) {\n          if(rAttr[j].type !== sAttr[j].type ||\n            rAttr[j].value !== sAttr[j].value) {\n            match = false;\n            break;\n          }\n        }\n\n        if(match) {\n          return r;\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Decrypt enveloped content\n     *\n     * @param recipient The recipient object related to the private key\n     * @param privKey The (RSA) private key object\n     */\n    decrypt: function(recipient, privKey) {\n      if(msg.encryptedContent.key === undefined && recipient !== undefined &&\n        privKey !== undefined) {\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n          case forge.pki.oids.desCBC:\n            var key = privKey.decrypt(recipient.encryptedContent.content);\n            msg.encryptedContent.key = forge.util.createBuffer(key);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, ' +\n              'OID ' + recipient.encryptedContent.algorithm);\n        }\n      }\n\n      _decryptContent(msg);\n    },\n\n    /**\n     * Add (another) entity to list of recipients.\n     *\n     * @param cert The certificate of the entity to add.\n     */\n    addRecipient: function(cert) {\n      msg.recipients.push({\n        version: 0,\n        issuer: cert.issuer.attributes,\n        serialNumber: cert.serialNumber,\n        encryptedContent: {\n          // We simply assume rsaEncryption here, since forge.pki only\n          // supports RSA so far.  If the PKI module supports other\n          // ciphers one day, we need to modify this one as well.\n          algorithm: forge.pki.oids.rsaEncryption,\n          key: cert.publicKey\n        }\n      });\n    },\n\n    /**\n     * Encrypt enveloped content.\n     *\n     * This function supports two optional arguments, cipher and key, which\n     * can be used to influence symmetric encryption.  Unless cipher is\n     * provided, the cipher specified in encryptedContent.algorithm is used\n     * (defaults to AES-256-CBC).  If no key is provided, encryptedContent.key\n     * is (re-)used.  If that one's not set, a random key will be generated\n     * automatically.\n     *\n     * @param [key] The key to be used for symmetric encryption.\n     * @param [cipher] The OID of the symmetric cipher to use.\n     */\n    encrypt: function(key, cipher) {\n      // Part 1: Symmetric encryption\n      if(msg.encryptedContent.content === undefined) {\n        cipher = cipher || msg.encryptedContent.algorithm;\n        key = key || msg.encryptedContent.key;\n\n        var keyLen, ivLen, ciphFn;\n        switch(cipher) {\n          case forge.pki.oids['aes128-CBC']:\n            keyLen = 16;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes192-CBC']:\n            keyLen = 24;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes256-CBC']:\n            keyLen = 32;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['des-EDE3-CBC']:\n            keyLen = 24;\n            ivLen = 8;\n            ciphFn = forge.des.createEncryptionCipher;\n            break;\n\n          default:\n            throw new Error('Unsupported symmetric cipher, OID ' + cipher);\n        }\n\n        if(key === undefined) {\n          key = forge.util.createBuffer(forge.random.getBytes(keyLen));\n        } else if(key.length() != keyLen) {\n          throw new Error('Symmetric key has wrong length; ' +\n            'got ' + key.length() + ' bytes, expected ' + keyLen + '.');\n        }\n\n        // Keep a copy of the key & IV in the object, so the caller can\n        // use it for whatever reason.\n        msg.encryptedContent.algorithm = cipher;\n        msg.encryptedContent.key = key;\n        msg.encryptedContent.parameter = forge.util.createBuffer(\n          forge.random.getBytes(ivLen));\n\n        var ciph = ciphFn(key);\n        ciph.start(msg.encryptedContent.parameter.copy());\n        ciph.update(msg.content);\n\n        // The finish function does PKCS#7 padding by default, therefore\n        // no action required by us.\n        if(!ciph.finish()) {\n          throw new Error('Symmetric encryption failed.');\n        }\n\n        msg.encryptedContent.content = ciph.output;\n      }\n\n      // Part 2: asymmetric encryption for each recipient\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var recipient = msg.recipients[i];\n\n        // Nothing to do, encryption already done.\n        if(recipient.encryptedContent.content !== undefined) {\n          continue;\n        }\n\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n            recipient.encryptedContent.content =\n              recipient.encryptedContent.key.encrypt(\n                msg.encryptedContent.key.data);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, OID ' +\n              recipient.encryptedContent.algorithm);\n        }\n      }\n    }\n  };\n  return msg;\n};\n\n/**\n * Converts a single recipient from an ASN.1 object.\n *\n * @param obj the ASN.1 RecipientInfo.\n *\n * @return the recipient object.\n */\nfunction _recipientFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.recipientInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 RecipientInfo. ' +\n      'ASN.1 object is not an PKCS#7 RecipientInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  return {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    encryptedContent: {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: capture.encParameter ? capture.encParameter.value : undefined,\n      content: capture.encKey\n    }\n  };\n}\n\n/**\n * Converts a single recipient object to an ASN.1 object.\n *\n * @param obj the recipient object.\n *\n * @return the ASN.1 RecipientInfo.\n */\nfunction _recipientToAsn1(obj) {\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // Version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // IssuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // Serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // KeyEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.encryptedContent.algorithm).getBytes()),\n      // Parameter, force NULL, only RSA supported for now.\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // EncryptedKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      obj.encryptedContent.content)\n  ]);\n}\n\n/**\n * Map a set of RecipientInfo ASN.1 objects to recipient objects.\n *\n * @param infos an array of ASN.1 representations RecipientInfo (i.e. SET OF).\n *\n * @return an array of recipient objects.\n */\nfunction _recipientsFromAsn1(infos) {\n  var ret = [];\n  for(var i = 0; i < infos.length; ++i) {\n    ret.push(_recipientFromAsn1(infos[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of recipient objects to ASN.1 RecipientInfo objects.\n *\n * @param recipients an array of recipientInfo objects.\n *\n * @return an array of ASN.1 RecipientInfos.\n */\nfunction _recipientsToAsn1(recipients) {\n  var ret = [];\n  for(var i = 0; i < recipients.length; ++i) {\n    ret.push(_recipientToAsn1(recipients[i]));\n  }\n  return ret;\n}\n\n/**\n * Converts a single signer from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a SignerInfo.\n *\n * @return the signer object.\n */\nfunction _signerFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.signerInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 SignerInfo. ' +\n      'ASN.1 object is not an PKCS#7 SignerInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var rval = {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    digestAlgorithm: asn1.derToOid(capture.digestAlgorithm),\n    signatureAlgorithm: asn1.derToOid(capture.signatureAlgorithm),\n    signature: capture.signature,\n    authenticatedAttributes: [],\n    unauthenticatedAttributes: []\n  };\n\n  // TODO: convert attributes\n  var authenticatedAttributes = capture.authenticatedAttributes || [];\n  var unauthenticatedAttributes = capture.unauthenticatedAttributes || [];\n\n  return rval;\n}\n\n/**\n * Converts a single signerInfo object to an ASN.1 object.\n *\n * @param obj the signerInfo object.\n *\n * @return the ASN.1 representation of a SignerInfo.\n */\nfunction _signerToAsn1(obj) {\n  // SignerInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // issuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // digestAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.digestAlgorithm).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ])\n  ]);\n\n  // authenticatedAttributes (OPTIONAL)\n  if(obj.authenticatedAttributesAsn1) {\n    // add ASN.1 previously generated during signing\n    rval.value.push(obj.authenticatedAttributesAsn1);\n  }\n\n  // digestEncryptionAlgorithm\n  rval.value.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // algorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(obj.signatureAlgorithm).getBytes()),\n    // parameters (null)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n  ]));\n\n  // encryptedDigest\n  rval.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, obj.signature));\n\n  // unauthenticatedAttributes (OPTIONAL)\n  if(obj.unauthenticatedAttributes.length > 0) {\n    // [1] IMPLICIT\n    var attrsAsn1 = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, []);\n    for(var i = 0; i < obj.unauthenticatedAttributes.length; ++i) {\n      var attr = obj.unauthenticatedAttributes[i];\n      attrsAsn1.values.push(_attributeToAsn1(attr));\n    }\n    rval.value.push(attrsAsn1);\n  }\n\n  return rval;\n}\n\n/**\n * Map a set of SignerInfo ASN.1 objects to an array of signer objects.\n *\n * @param signerInfoAsn1s an array of ASN.1 SignerInfos (i.e. SET OF).\n *\n * @return an array of signers objects.\n */\nfunction _signersFromAsn1(signerInfoAsn1s) {\n  var ret = [];\n  for(var i = 0; i < signerInfoAsn1s.length; ++i) {\n    ret.push(_signerFromAsn1(signerInfoAsn1s[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of signer objects to ASN.1 objects.\n *\n * @param signers an array of signer objects.\n *\n * @return an array of ASN.1 SignerInfos.\n */\nfunction _signersToAsn1(signers) {\n  var ret = [];\n  for(var i = 0; i < signers.length; ++i) {\n    ret.push(_signerToAsn1(signers[i]));\n  }\n  return ret;\n}\n\n/**\n * Convert an attribute object to an ASN.1 Attribute.\n *\n * @param attr the attribute object.\n *\n * @return the ASN.1 Attribute.\n */\nfunction _attributeToAsn1(attr) {\n  var value;\n\n  // TODO: generalize to support more attributes\n  if(attr.type === forge.pki.oids.contentType) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.value).getBytes());\n  } else if(attr.type === forge.pki.oids.messageDigest) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      attr.value.bytes());\n  } else if(attr.type === forge.pki.oids.signingTime) {\n    /* Note per RFC 2985: Dates between 1 January 1950 and 31 December 2049\n      (inclusive) MUST be encoded as UTCTime. Any dates with year values\n      before 1950 or after 2049 MUST be encoded as GeneralizedTime. [Further,]\n      UTCTime values MUST be expressed in Greenwich Mean Time (Zulu) and MUST\n      include seconds (i.e., times are YYMMDDHHMMSSZ), even where the\n      number of seconds is zero.  Midnight (GMT) must be represented as\n      \"YYMMDD000000Z\". */\n    // TODO: make these module-level constants\n    var jan_1_1950 = new Date('1950-01-01T00:00:00Z');\n    var jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n    var date = attr.value;\n    if(typeof date === 'string') {\n      // try to parse date\n      var timestamp = Date.parse(date);\n      if(!isNaN(timestamp)) {\n        date = new Date(timestamp);\n      } else if(date.length === 13) {\n        // YYMMDDHHMMSSZ (13 chars for UTCTime)\n        date = asn1.utcTimeToDate(date);\n      } else {\n        // assume generalized time\n        date = asn1.generalizedTimeToDate(date);\n      }\n    }\n\n    if(date >= jan_1_1950 && date < jan_1_2050) {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n        asn1.dateToUtcTime(date));\n    } else {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n        asn1.dateToGeneralizedTime(date));\n    }\n  }\n\n  // TODO: expose as common API call\n  // create a RelativeDistinguishedName set\n  // each value in the set is an AttributeTypeAndValue first\n  // containing the type (an OID) and second the value\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AttributeType\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.type).getBytes()),\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      // AttributeValue\n      value\n    ])\n  ]);\n}\n\n/**\n * Map messages encrypted content to ASN.1 objects.\n *\n * @param ec The encryptedContent object of the message.\n *\n * @return ASN.1 representation of the encryptedContent object (SEQUENCE).\n */\nfunction _encryptedContentToAsn1(ec) {\n  return [\n    // ContentType, always Data for the moment\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(forge.pki.oids.data).getBytes()),\n    // ContentEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(ec.algorithm).getBytes()),\n      // Parameters (IV)\n      !ec.parameter ?\n        undefined :\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          ec.parameter.getBytes())\n    ]),\n    // [0] EncryptedContent\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n        ec.content.getBytes())\n    ])\n  ];\n}\n\n/**\n * Reads the \"common part\" of an PKCS#7 content block (in ASN.1 format)\n *\n * This function reads the \"common part\" of the PKCS#7 content blocks\n * EncryptedData and EnvelopedData, i.e. version number and symmetrically\n * encrypted content block.\n *\n * The result of the ASN.1 validate and capture process is returned\n * to allow the caller to extract further data, e.g. the list of recipients\n * in case of a EnvelopedData object.\n *\n * @param msg the PKCS#7 object to read the data to.\n * @param obj the ASN.1 representation of the content block.\n * @param validator the ASN.1 structure validator object to use.\n *\n * @return the value map captured by validator object.\n */\nfunction _fromAsn1(msg, obj, validator) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, validator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not a supported PKCS#7 message.');\n    error.errors = error;\n    throw error;\n  }\n\n  // Check contentType, so far we only support (raw) Data.\n  var contentType = asn1.derToOid(capture.contentType);\n  if(contentType !== forge.pki.oids.data) {\n    throw new Error('Unsupported PKCS#7 message. ' +\n      'Only wrapped ContentType Data supported.');\n  }\n\n  if(capture.encryptedContent) {\n    var content = '';\n    if(forge.util.isArray(capture.encryptedContent)) {\n      for(var i = 0; i < capture.encryptedContent.length; ++i) {\n        if(capture.encryptedContent[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting encrypted ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.encryptedContent[i].value;\n      }\n    } else {\n      content = capture.encryptedContent;\n    }\n    msg.encryptedContent = {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: forge.util.createBuffer(capture.encParameter.value),\n      content: forge.util.createBuffer(content)\n    };\n  }\n\n  if(capture.content) {\n    var content = '';\n    if(forge.util.isArray(capture.content)) {\n      for(var i = 0; i < capture.content.length; ++i) {\n        if(capture.content[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.content[i].value;\n      }\n    } else {\n      content = capture.content;\n    }\n    msg.content = forge.util.createBuffer(content);\n  }\n\n  msg.version = capture.version.charCodeAt(0);\n  msg.rawCapture = capture;\n\n  return capture;\n}\n\n/**\n * Decrypt the symmetrically encrypted content block of the PKCS#7 message.\n *\n * Decryption is skipped in case the PKCS#7 message object already has a\n * (decrypted) content attribute.  The algorithm, key and cipher parameters\n * (probably the iv) are taken from the encryptedContent attribute of the\n * message object.\n *\n * @param The PKCS#7 message object.\n */\nfunction _decryptContent(msg) {\n  if(msg.encryptedContent.key === undefined) {\n    throw new Error('Symmetric key not available.');\n  }\n\n  if(msg.content === undefined) {\n    var ciph;\n\n    switch(msg.encryptedContent.algorithm) {\n      case forge.pki.oids['aes128-CBC']:\n      case forge.pki.oids['aes192-CBC']:\n      case forge.pki.oids['aes256-CBC']:\n        ciph = forge.aes.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      case forge.pki.oids['desCBC']:\n      case forge.pki.oids['des-EDE3-CBC']:\n        ciph = forge.des.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      default:\n        throw new Error('Unsupported symmetric cipher, OID ' +\n          msg.encryptedContent.algorithm);\n    }\n    ciph.start(msg.encryptedContent.parameter);\n    ciph.update(msg.encryptedContent.content);\n\n    if(!ciph.finish()) {\n      throw new Error('Symmetric decryption failed.');\n    }\n\n    msg.content = ciph.output;\n  }\n}\n","/**\n * Javascript implementation of ASN.1 validators for PKCS#7 v1.5.\n *\n * @author Dave Longley\n * @author Stefan Siegl\n *\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#7 is as follows\n * (see RFC #2315 for details, http://www.ietf.org/rfc/rfc2315.txt):\n *\n * A PKCS#7 message consists of a ContentInfo on root level, which may\n * contain any number of further ContentInfo nested into it.\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType                ContentType,\n *   content               [0]  EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * EnvelopedData ::= SEQUENCE {\n *   version                    Version,\n *   recipientInfos             RecipientInfos,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * EncryptedData ::= SEQUENCE {\n *   version                    Version,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n *   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }\n *\n * SignedData ::= SEQUENCE {\n *   version           INTEGER,\n *   digestAlgorithms  DigestAlgorithmIdentifiers,\n *   contentInfo       ContentInfo,\n *   certificates      [0] IMPLICIT Certificates OPTIONAL,\n *   crls              [1] IMPLICIT CertificateRevocationLists OPTIONAL,\n *   signerInfos       SignerInfos\n * }\n *\n * SignerInfos ::= SET OF SignerInfo\n *\n * SignerInfo ::= SEQUENCE {\n *   version                    Version,\n *   issuerAndSerialNumber      IssuerAndSerialNumber,\n *   digestAlgorithm            DigestAlgorithmIdentifier,\n *   authenticatedAttributes    [0] IMPLICIT Attributes OPTIONAL,\n *   digestEncryptionAlgorithm  DigestEncryptionAlgorithmIdentifier,\n *   encryptedDigest            EncryptedDigest,\n *   unauthenticatedAttributes  [1] IMPLICIT Attributes OPTIONAL\n * }\n *\n * EncryptedDigest ::= OCTET STRING\n *\n * Attributes ::= SET OF Attribute\n *\n * Attribute ::= SEQUENCE {\n *   attrType    OBJECT IDENTIFIER,\n *   attrValues  SET OF AttributeValue\n * }\n *\n * AttributeValue ::= ANY\n *\n * Version ::= INTEGER\n *\n * RecipientInfos ::= SET OF RecipientInfo\n *\n * EncryptedContentInfo ::= SEQUENCE {\n *   contentType                 ContentType,\n *   contentEncryptionAlgorithm  ContentEncryptionAlgorithmIdentifier,\n *   encryptedContent       [0]  IMPLICIT EncryptedContent OPTIONAL\n * }\n *\n * ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of AES and DES3, there is only one,\n * the IV.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * EncryptedContent ::= OCTET STRING\n *\n * RecipientInfo ::= SEQUENCE {\n *   version                     Version,\n *   issuerAndSerialNumber       IssuerAndSerialNumber,\n *   keyEncryptionAlgorithm      KeyEncryptionAlgorithmIdentifier,\n *   encryptedKey                EncryptedKey\n * }\n *\n * IssuerAndSerialNumber ::= SEQUENCE {\n *   issuer                      Name,\n *   serialNumber                CertificateSerialNumber\n * }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedKey ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./util');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7v = module.exports = forge.pkcs7asn1 = forge.pkcs7asn1 || {};\nforge.pkcs7 = forge.pkcs7 || {};\nforge.pkcs7.asn1 = p7v;\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.ContentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'content'\n  }]\n};\np7v.contentInfoValidator = contentInfoValidator;\n\nvar encryptedContentInfoValidator = {\n  name: 'EncryptedContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'EncryptedContentInfo.contentEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'EncryptedContentInfo.encryptedContent',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    /* The PKCS#7 structure output by OpenSSL somewhat differs from what\n     * other implementations do generate.\n     *\n     * OpenSSL generates a structure like this:\n     * SEQUENCE {\n     *    ...\n     *    [0]\n     *       26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *       C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *       ...\n     * }\n     *\n     * Whereas other implementations (and this PKCS#7 module) generate:\n     * SEQUENCE {\n     *    ...\n     *    [0] {\n     *       OCTET STRING\n     *          26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *          C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *          ...\n     *    }\n     * }\n     *\n     * In order to support both, we just capture the context specific\n     * field here.  The OCTET STRING bit is removed below.\n     */\n    capture: 'encryptedContent',\n    captureAsn1: 'encryptedContentAsn1'\n  }]\n};\n\np7v.envelopedDataValidator = {\n  name: 'EnvelopedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EnvelopedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'EnvelopedData.RecipientInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'recipientInfos'\n  }].concat(encryptedContentInfoValidator)\n};\n\np7v.encryptedDataValidator = {\n  name: 'EncryptedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }].concat(encryptedContentInfoValidator)\n};\n\nvar signerValidator = {\n  name: 'SignerInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignerInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false\n  }, {\n    name: 'SignerInfo.issuerAndSerialNumber',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.issuerAndSerialNumber.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'SignerInfo.issuerAndSerialNumber.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'SignerInfo.digestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.digestAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'digestAlgorithm'\n    }, {\n      name: 'SignerInfo.digestAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'digestParameter',\n      optional: true\n    }]\n  }, {\n    name: 'SignerInfo.authenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'authenticatedAttributes'\n  }, {\n    name: 'SignerInfo.digestEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    capture: 'signatureAlgorithm'\n  }, {\n    name: 'SignerInfo.encryptedDigest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'signature'\n  }, {\n    name: 'SignerInfo.unauthenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    optional: true,\n    capture: 'unauthenticatedAttributes'\n  }]\n};\n\np7v.signedDataValidator = {\n  name: 'SignedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'SignedData.DigestAlgorithms',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'digestAlgorithms'\n  },\n  contentInfoValidator,\n  {\n    name: 'SignedData.Certificates',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    optional: true,\n    captureAsn1: 'certificates'\n  }, {\n    name: 'SignedData.CertificateRevocationLists',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    optional: true,\n    captureAsn1: 'crls'\n  }, {\n    name: 'SignedData.SignerInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    capture: 'signerInfos',\n    optional: true,\n    value: [signerValidator]\n  }]\n};\n\np7v.recipientInfoValidator = {\n  name: 'RecipientInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'RecipientInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'RecipientInfo.issuerAndSerial',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.issuerAndSerial.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'RecipientInfo.issuerAndSerial.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'RecipientInfo.keyEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.keyEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'RecipientInfo.keyEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'encParameter',\n      optional: true\n    }]\n  }, {\n    name: 'RecipientInfo.encryptedKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encKey'\n  }]\n};\n","/**\n * Javascript implementation of a basic Public Key Infrastructure, including\n * support for RSA public and private keys.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./oids');\nrequire('./pbe');\nrequire('./pem');\nrequire('./pbkdf2');\nrequire('./pkcs12');\nrequire('./pss');\nrequire('./rsa');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED. Use pem.decode() instead.\n *\n * Converts PEM-formatted data to DER.\n *\n * @param pem the PEM-formatted data.\n *\n * @return the DER-formatted data.\n */\npki.pemToDer = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PEM to DER; PEM is encrypted.');\n  }\n  return forge.util.createBuffer(msg.body);\n};\n\n/**\n * Converts an RSA private key from PEM format.\n *\n * @param pem the PEM-formatted private key.\n *\n * @return the private key.\n */\npki.privateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PRIVATE KEY' && msg.type !== 'RSA PRIVATE KEY') {\n    var error = new Error('Could not convert private key from PEM; PEM ' +\n      'header type is not \"PRIVATE KEY\" or \"RSA PRIVATE KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert private key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.privateKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA private key to PEM format.\n *\n * @param key the private key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted private key.\n */\npki.privateKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PRIVATE KEY',\n    body: asn1.toDer(pki.privateKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PrivateKeyInfo to PEM format.\n *\n * @param pki the PrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted private key.\n */\npki.privateKeyInfoToPem = function(pki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: 'PRIVATE KEY',\n    body: asn1.toDer(pki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n","/**\n * Prime number generation API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./jsbn');\nrequire('./random');\n\n(function() {\n\n// forge.prime already defined\nif(forge.prime) {\n  module.exports = forge.prime;\n  return;\n}\n\n/* PRIME API */\nvar prime = module.exports = forge.prime = forge.prime || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n// primes are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\nvar THIRTY = new BigInteger(null);\nTHIRTY.fromInt(30);\nvar op_or = function(x, y) {return x|y;};\n\n/**\n * Generates a random probable prime with the given number of bits.\n *\n * Alternative algorithms can be specified by name as a string or as an\n * object with custom options like so:\n *\n * {\n *   name: 'PRIMEINC',\n *   options: {\n *     maxBlockTime: <the maximum amount of time to block the main\n *       thread before allowing I/O other JS to run>,\n *     millerRabinTests: <the number of miller-rabin tests to run>,\n *     workerScript: <the worker script URL>,\n *     workers: <the number of web workers (if supported) to use,\n *       -1 to use estimated cores minus one>.\n *     workLoad: the size of the work load, ie: number of possible prime\n *       numbers for each web worker to check per work assignment,\n *       (default: 100).\n *   }\n * }\n *\n * @param bits the number of bits for the prime number.\n * @param options the options to use.\n *          [algorithm] the algorithm to use (default: 'PRIMEINC').\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *\n * @return callback(err, num) called once the operation completes.\n */\nprime.generateProbablePrime = function(bits, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // default to PRIMEINC algorithm\n  var algorithm = options.algorithm || 'PRIMEINC';\n  if(typeof algorithm === 'string') {\n    algorithm = {name: algorithm};\n  }\n  algorithm.options = algorithm.options || {};\n\n  // create prng with api that matches BigInteger secure random\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  if(algorithm.name === 'PRIMEINC') {\n    return primeincFindPrime(bits, rng, algorithm.options, callback);\n  }\n\n  throw new Error('Invalid prime generation algorithm: ' + algorithm.name);\n};\n\nfunction primeincFindPrime(bits, rng, options, callback) {\n  if('workers' in options) {\n    return primeincFindPrimeWithWorkers(bits, rng, options, callback);\n  }\n  return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n}\n\nfunction primeincFindPrimeWithoutWorkers(bits, rng, options, callback) {\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  /* Note: All primes are of the form 30k+i for i < 30 and gcd(30, i)=1. The\n  number we are given is always aligned at 30k + 1. Each time the number is\n  determined not to be prime we add to get to the next 'i', eg: if the number\n  was at 30k + 1 we add 6. */\n  var deltaIdx = 0;\n\n  // get required number of MR tests\n  var mrTests = getMillerRabinTests(num.bitLength());\n  if('millerRabinTests' in options) {\n    mrTests = options.millerRabinTests;\n  }\n\n  // find prime nearest to 'num' for maxBlockTime ms\n  // 10 ms gives 5ms of leeway for other calculations before dropping\n  // below 60fps (1000/60 == 16.67), but in reality, the number will\n  // likely be higher due to an 'atomic' big int modPow\n  var maxBlockTime = 10;\n  if('maxBlockTime' in options) {\n    maxBlockTime = options.maxBlockTime;\n  }\n\n  _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n}\n\nfunction _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback) {\n  var start = +new Date();\n  do {\n    // overflow, regenerate random number\n    if(num.bitLength() > bits) {\n      num = generateRandom(bits, rng);\n    }\n    // do primality test\n    if(num.isProbablePrime(mrTests)) {\n      return callback(null, num);\n    }\n    // get next potential prime\n    num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n  } while(maxBlockTime < 0 || (+new Date() - start < maxBlockTime));\n\n  // keep trying later\n  forge.util.setImmediate(function() {\n    _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n  });\n}\n\n// NOTE: This algorithm is indeterminate in nature because workers\n// run in parallel looking at different segments of numbers. Even if this\n// algorithm is run twice with the same input from a predictable RNG, it\n// may produce different outputs.\nfunction primeincFindPrimeWithWorkers(bits, rng, options, callback) {\n  // web workers unavailable\n  if(typeof Worker === 'undefined') {\n    return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n  }\n\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  // use web workers to generate keys\n  var numWorkers = options.workers;\n  var workLoad = options.workLoad || 100;\n  var range = workLoad * 30 / 8;\n  var workerScript = options.workerScript || 'forge/prime.worker.js';\n  if(numWorkers === -1) {\n    return forge.util.estimateCores(function(err, cores) {\n      if(err) {\n        // default to 2\n        cores = 2;\n      }\n      numWorkers = cores - 1;\n      generate();\n    });\n  }\n  generate();\n\n  function generate() {\n    // require at least 1 worker\n    numWorkers = Math.max(1, numWorkers);\n\n    // TODO: consider optimizing by starting workers outside getPrime() ...\n    // note that in order to clean up they will have to be made internally\n    // asynchronous which may actually be slower\n\n    // start workers immediately\n    var workers = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      // FIXME: fix path or use blob URLs\n      workers[i] = new Worker(workerScript);\n    }\n    var running = numWorkers;\n\n    // listen for requests from workers and assign ranges to find prime\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].addEventListener('message', workerMessage);\n    }\n\n    /* Note: The distribution of random numbers is unknown. Therefore, each\n    web worker is continuously allocated a range of numbers to check for a\n    random number until one is found.\n\n    Every 30 numbers will be checked just 8 times, because prime numbers\n    have the form:\n\n    30k+i, for i < 30 and gcd(30, i)=1 (there are 8 values of i for this)\n\n    Therefore, if we want a web worker to run N checks before asking for\n    a new range of numbers, each range must contain N*30/8 numbers.\n\n    For 100 checks (workLoad), this is a range of 375. */\n\n    var found = false;\n    function workerMessage(e) {\n      // ignore message, prime already found\n      if(found) {\n        return;\n      }\n\n      --running;\n      var data = e.data;\n      if(data.found) {\n        // terminate all workers\n        for(var i = 0; i < workers.length; ++i) {\n          workers[i].terminate();\n        }\n        found = true;\n        return callback(null, new BigInteger(data.prime, 16));\n      }\n\n      // overflow, regenerate random number\n      if(num.bitLength() > bits) {\n        num = generateRandom(bits, rng);\n      }\n\n      // assign new range to check\n      var hex = num.toString(16);\n\n      // start prime search\n      e.target.postMessage({\n        hex: hex,\n        workLoad: workLoad\n      });\n\n      num.dAddOffset(range, 0);\n    }\n  }\n}\n\n/**\n * Generates a random number using the given number of bits and RNG.\n *\n * @param bits the number of bits for the number.\n * @param rng the random number generator to use.\n *\n * @return the random number.\n */\nfunction generateRandom(bits, rng) {\n  var num = new BigInteger(bits, rng);\n  // force MSB set\n  var bits1 = bits - 1;\n  if(!num.testBit(bits1)) {\n    num.bitwiseTo(BigInteger.ONE.shiftLeft(bits1), op_or, num);\n  }\n  // align number on 30k+1 boundary\n  num.dAddOffset(31 - num.mod(THIRTY).byteValue(), 0);\n  return num;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n})();\n","/**\n * A javascript implementation of a cryptographically-secure\n * Pseudo Random Number Generator (PRNG). The Fortuna algorithm is followed\n * here though the use of SHA-256 is not enforced; when generating an\n * a PRNG context, the hashing algorithm and block cipher used for\n * the generator are specified via a plugin.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nvar _crypto = null;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n  !process.versions['node-webkit']) {\n  _crypto = require('crypto');\n}\n\n/* PRNG API */\nvar prng = module.exports = forge.prng = forge.prng || {};\n\n/**\n * Creates a new PRNG context.\n *\n * A PRNG plugin must be passed in that will provide:\n *\n * 1. A function that initializes the key and seed of a PRNG context. It\n *   will be given a 16 byte key and a 16 byte seed. Any key expansion\n *   or transformation of the seed from a byte string into an array of\n *   integers (or similar) should be performed.\n * 2. The cryptographic function used by the generator. It takes a key and\n *   a seed.\n * 3. A seed increment function. It takes the seed and returns seed + 1.\n * 4. An api to create a message digest.\n *\n * For an example, see random.js.\n *\n * @param plugin the PRNG plugin to use.\n */\nprng.create = function(plugin) {\n  var ctx = {\n    plugin: plugin,\n    key: null,\n    seed: null,\n    time: null,\n    // number of reseeds so far\n    reseeds: 0,\n    // amount of data generated so far\n    generated: 0,\n    // no initial key bytes\n    keyBytes: ''\n  };\n\n  // create 32 entropy pools (each is a message digest)\n  var md = plugin.md;\n  var pools = new Array(32);\n  for(var i = 0; i < 32; ++i) {\n    pools[i] = md.create();\n  }\n  ctx.pools = pools;\n\n  // entropy pools are written to cyclically, starting at index 0\n  ctx.pool = 0;\n\n  /**\n   * Generates random bytes. The bytes may be generated synchronously or\n   * asynchronously. Web workers must use the asynchronous interface or\n   * else the behavior is undefined.\n   *\n   * @param count the number of random bytes to generate.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generate = function(count, callback) {\n    // do synchronously\n    if(!callback) {\n      return ctx.generateSync(count);\n    }\n\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n    var b = forge.util.createBuffer();\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generate` call\n    ctx.key = null;\n\n    generate();\n\n    function generate(err) {\n      if(err) {\n        return callback(err);\n      }\n\n      // sufficient bytes generated\n      if(b.length() >= count) {\n        return callback(null, b.getBytes(count));\n      }\n\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        // prevent stack overflow\n        return forge.util.nextTick(function() {\n          _reseed(generate);\n        });\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n\n      forge.util.setImmediate(generate);\n    }\n  };\n\n  /**\n   * Generates random bytes synchronously.\n   *\n   * @param count the number of random bytes to generate.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generateSync = function(count) {\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generateSync` call\n    ctx.key = null;\n\n    var b = forge.util.createBuffer();\n    while(b.length() < count) {\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        _reseedSync();\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n    }\n\n    return b.getBytes(count);\n  };\n\n  /**\n   * Private function that asynchronously reseeds a generator.\n   *\n   * @param callback(err) called once the operation completes.\n   */\n  function _reseed(callback) {\n    if(ctx.pools[0].messageLength >= 32) {\n      _seed();\n      return callback();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.seedFile(needed, function(err, bytes) {\n      if(err) {\n        return callback(err);\n      }\n      ctx.collect(bytes);\n      _seed();\n      callback();\n    });\n  }\n\n  /**\n   * Private function that synchronously reseeds a generator.\n   */\n  function _reseedSync() {\n    if(ctx.pools[0].messageLength >= 32) {\n      return _seed();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.collect(ctx.seedFileSync(needed));\n    _seed();\n  }\n\n  /**\n   * Private function that seeds a generator once enough bytes are available.\n   */\n  function _seed() {\n    // update reseed count\n    ctx.reseeds = (ctx.reseeds === 0xffffffff) ? 0 : ctx.reseeds + 1;\n\n    // goal is to update `key` via:\n    // key = hash(key + s)\n    //   where 's' is all collected entropy from selected pools, then...\n\n    // create a plugin-based message digest\n    var md = ctx.plugin.md.create();\n\n    // consume current key bytes\n    md.update(ctx.keyBytes);\n\n    // digest the entropy of pools whose index k meet the\n    // condition 'n mod 2^k == 0' where n is the number of reseeds\n    var _2powK = 1;\n    for(var k = 0; k < 32; ++k) {\n      if(ctx.reseeds % _2powK === 0) {\n        md.update(ctx.pools[k].digest().getBytes());\n        ctx.pools[k].start();\n      }\n      _2powK = _2powK << 1;\n    }\n\n    // get digest for key bytes\n    ctx.keyBytes = md.digest().getBytes();\n\n    // paranoid deviation from Fortuna:\n    // update `seed` via `seed = hash(key)`\n    // instead of initializing to zero once and only\n    // ever incrementing it\n    md.start();\n    md.update(ctx.keyBytes);\n    var seedBytes = md.digest().getBytes();\n\n    // update state\n    ctx.key = ctx.plugin.formatKey(ctx.keyBytes);\n    ctx.seed = ctx.plugin.formatSeed(seedBytes);\n    ctx.generated = 0;\n  }\n\n  /**\n   * The built-in default seedFile. This seedFile is used when entropy\n   * is needed immediately.\n   *\n   * @param needed the number of bytes that are needed.\n   *\n   * @return the random bytes.\n   */\n  function defaultSeedFile(needed) {\n    // use window.crypto.getRandomValues strong source of entropy if available\n    var getRandomValues = null;\n    var globalScope = forge.util.globalScope;\n    var _crypto = globalScope.crypto || globalScope.msCrypto;\n    if(_crypto && _crypto.getRandomValues) {\n      getRandomValues = function(arr) {\n        return _crypto.getRandomValues(arr);\n      };\n    }\n\n    var b = forge.util.createBuffer();\n    if(getRandomValues) {\n      while(b.length() < needed) {\n        // max byte length is 65536 before QuotaExceededError is thrown\n        // http://www.w3.org/TR/WebCryptoAPI/#RandomSource-method-getRandomValues\n        var count = Math.max(1, Math.min(needed - b.length(), 65536) / 4);\n        var entropy = new Uint32Array(Math.floor(count));\n        try {\n          getRandomValues(entropy);\n          for(var i = 0; i < entropy.length; ++i) {\n            b.putInt32(entropy[i]);\n          }\n        } catch(e) {\n          /* only ignore QuotaExceededError */\n          if(!(typeof QuotaExceededError !== 'undefined' &&\n            e instanceof QuotaExceededError)) {\n            throw e;\n          }\n        }\n      }\n    }\n\n    // be sad and add some weak random data\n    if(b.length() < needed) {\n      /* Draws from Park-Miller \"minimal standard\" 31 bit PRNG,\n      implemented with David G. Carta's optimization: with 32 bit math\n      and without division (Public Domain). */\n      var hi, lo, next;\n      var seed = Math.floor(Math.random() * 0x010000);\n      while(b.length() < needed) {\n        lo = 16807 * (seed & 0xFFFF);\n        hi = 16807 * (seed >> 16);\n        lo += (hi & 0x7FFF) << 16;\n        lo += hi >> 15;\n        lo = (lo & 0x7FFFFFFF) + (lo >> 31);\n        seed = lo & 0xFFFFFFFF;\n\n        // consume lower 3 bytes of seed\n        for(var i = 0; i < 3; ++i) {\n          // throw in more pseudo random\n          next = seed >>> (i << 3);\n          next ^= Math.floor(Math.random() * 0x0100);\n          b.putByte(next & 0xFF);\n        }\n      }\n    }\n\n    return b.getBytes(needed);\n  }\n  // initialize seed file APIs\n  if(_crypto) {\n    // use nodejs async API\n    ctx.seedFile = function(needed, callback) {\n      _crypto.randomBytes(needed, function(err, bytes) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, bytes.toString());\n      });\n    };\n    // use nodejs sync API\n    ctx.seedFileSync = function(needed) {\n      return _crypto.randomBytes(needed).toString();\n    };\n  } else {\n    ctx.seedFile = function(needed, callback) {\n      try {\n        callback(null, defaultSeedFile(needed));\n      } catch(e) {\n        callback(e);\n      }\n    };\n    ctx.seedFileSync = defaultSeedFile;\n  }\n\n  /**\n   * Adds entropy to a prng ctx's accumulator.\n   *\n   * @param bytes the bytes of entropy as a string.\n   */\n  ctx.collect = function(bytes) {\n    // iterate over pools distributing entropy cyclically\n    var count = bytes.length;\n    for(var i = 0; i < count; ++i) {\n      ctx.pools[ctx.pool].update(bytes.substr(i, 1));\n      ctx.pool = (ctx.pool === 31) ? 0 : ctx.pool + 1;\n    }\n  };\n\n  /**\n   * Collects an integer of n bits.\n   *\n   * @param i the integer entropy.\n   * @param n the number of bits in the integer.\n   */\n  ctx.collectInt = function(i, n) {\n    var bytes = '';\n    for(var x = 0; x < n; x += 8) {\n      bytes += String.fromCharCode((i >> x) & 0xFF);\n    }\n    ctx.collect(bytes);\n  };\n\n  /**\n   * Registers a Web Worker to receive immediate entropy from the main thread.\n   * This method is required until Web Workers can access the native crypto\n   * API. This method should be called twice for each created worker, once in\n   * the main thread, and once in the worker itself.\n   *\n   * @param worker the worker to register.\n   */\n  ctx.registerWorker = function(worker) {\n    // worker receives random bytes\n    if(worker === self) {\n      ctx.seedFile = function(needed, callback) {\n        function listener(e) {\n          var data = e.data;\n          if(data.forge && data.forge.prng) {\n            self.removeEventListener('message', listener);\n            callback(data.forge.prng.err, data.forge.prng.bytes);\n          }\n        }\n        self.addEventListener('message', listener);\n        self.postMessage({forge: {prng: {needed: needed}}});\n      };\n    } else {\n      // main thread sends random bytes upon request\n      var listener = function(e) {\n        var data = e.data;\n        if(data.forge && data.forge.prng) {\n          ctx.seedFile(data.forge.prng.needed, function(err, bytes) {\n            worker.postMessage({forge: {prng: {err: err, bytes: bytes}}});\n          });\n        }\n      };\n      // TODO: do we need to remove the event listener when the worker dies?\n      worker.addEventListener('message', listener);\n    }\n  };\n\n  return ctx;\n};\n","/**\n * Javascript implementation of PKCS#1 PSS signature padding.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./random');\nrequire('./util');\n\n// shortcut for PSS API\nvar pss = module.exports = forge.pss = forge.pss || {};\n\n/**\n * Creates a PSS signature scheme object.\n *\n * There are several ways to provide a salt for encoding:\n *\n * 1. Specify the saltLength only and the built-in PRNG will generate it.\n * 2. Specify the saltLength and a custom PRNG with 'getBytesSync' defined that\n *   will be used.\n * 3. Specify the salt itself as a forge.util.ByteBuffer.\n *\n * @param options the options to use:\n *          md the message digest object to use, a forge md instance.\n *          mgf the mask generation function to use, a forge mgf instance.\n *          [saltLength] the length of the salt in octets.\n *          [prng] the pseudo-random number generator to use to produce a salt.\n *          [salt] the salt to use when encoding.\n *\n * @return a signature scheme object.\n */\npss.create = function(options) {\n  // backwards compatibility w/legacy args: hash, mgf, sLen\n  if(arguments.length === 3) {\n    options = {\n      md: arguments[0],\n      mgf: arguments[1],\n      saltLength: arguments[2]\n    };\n  }\n\n  var hash = options.md;\n  var mgf = options.mgf;\n  var hLen = hash.digestLength;\n\n  var salt_ = options.salt || null;\n  if(typeof salt_ === 'string') {\n    // assume binary-encoded string\n    salt_ = forge.util.createBuffer(salt_);\n  }\n\n  var sLen;\n  if('saltLength' in options) {\n    sLen = options.saltLength;\n  } else if(salt_ !== null) {\n    sLen = salt_.length();\n  } else {\n    throw new Error('Salt length not specified or specific salt not given.');\n  }\n\n  if(salt_ !== null && salt_.length() !== sLen) {\n    throw new Error('Given salt length does not match length of given salt.');\n  }\n\n  var prng = options.prng || forge.random;\n\n  var pssobj = {};\n\n  /**\n   * Encodes a PSS signature.\n   *\n   * This function implements EMSA-PSS-ENCODE as per RFC 3447, section 9.1.1.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return the encoded message as a binary-encoded string of length\n   *           ceil((modBits - 1) / 8).\n   */\n  pssobj.encode = function(md, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* 2. Let mHash = Hash(M), an octet string of length hLen. */\n    var mHash = md.digest().getBytes();\n\n    /* 3. If emLen < hLen + sLen + 2, output \"encoding error\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Message is too long to encrypt.');\n    }\n\n    /* 4. Generate a random octet string salt of length sLen; if sLen = 0,\n     *    then salt is the empty string. */\n    var salt;\n    if(salt_ === null) {\n      salt = prng.getBytesSync(sLen);\n    } else {\n      salt = salt_.bytes();\n    }\n\n    /* 5. Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt; */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 6. Let H = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h = hash.digest().getBytes();\n\n    /* 7. Generate an octet string PS consisting of emLen - sLen - hLen - 2\n     *    zero octets.  The length of PS may be 0. */\n    var ps = new forge.util.ByteBuffer();\n    ps.fillWithByte(0, emLen - sLen - hLen - 2);\n\n    /* 8. Let DB = PS || 0x01 || salt; DB is an octet string of length\n     *    emLen - hLen - 1. */\n    ps.putByte(0x01);\n    ps.putBytes(salt);\n    var db = ps.getBytes();\n\n    /* 9. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var maskLen = emLen - hLen - 1;\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 10. Let maskedDB = DB \\xor dbMask. */\n    var maskedDB = '';\n    for(i = 0; i < maskLen; i++) {\n      maskedDB += String.fromCharCode(db.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 11. Set the leftmost 8emLen - emBits bits of the leftmost octet in\n     *     maskedDB to zero. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    maskedDB = String.fromCharCode(maskedDB.charCodeAt(0) & ~mask) +\n      maskedDB.substr(1);\n\n    /* 12. Let EM = maskedDB || H || 0xbc.\n     * 13. Output EM. */\n    return maskedDB + h + String.fromCharCode(0xbc);\n  };\n\n  /**\n   * Verifies a PSS signature.\n   *\n   * This function implements EMSA-PSS-VERIFY as per RFC 3447, section 9.1.2.\n   *\n   * @param mHash the message digest hash, as a binary-encoded string, to\n   *         compare against the signature.\n   * @param em the encoded message, as a binary-encoded string\n   *          (RSA decryption result).\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  pssobj.verify = function(mHash, em, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* c. Convert the message representative m to an encoded message EM\n     *    of length emLen = ceil((modBits - 1) / 8) octets, where modBits\n     *    is the length in bits of the RSA modulus n */\n    em = em.substr(-emLen);\n\n    /* 3. If emLen < hLen + sLen + 2, output \"inconsistent\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Inconsistent parameters to PSS signature verification.');\n    }\n\n    /* 4. If the rightmost octet of EM does not have hexadecimal value\n     *    0xbc, output \"inconsistent\" and stop. */\n    if(em.charCodeAt(emLen - 1) !== 0xbc) {\n      throw new Error('Encoded message does not end in 0xBC.');\n    }\n\n    /* 5. Let maskedDB be the leftmost emLen - hLen - 1 octets of EM, and\n     *    let H be the next hLen octets. */\n    var maskLen = emLen - hLen - 1;\n    var maskedDB = em.substr(0, maskLen);\n    var h = em.substr(maskLen, hLen);\n\n    /* 6. If the leftmost 8emLen - emBits bits of the leftmost octet in\n     *    maskedDB are not all equal to zero, output \"inconsistent\" and stop. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    if((maskedDB.charCodeAt(0) & mask) !== 0) {\n      throw new Error('Bits beyond keysize not zero as expected.');\n    }\n\n    /* 7. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 8. Let DB = maskedDB \\xor dbMask. */\n    var db = '';\n    for(i = 0; i < maskLen; i++) {\n      db += String.fromCharCode(maskedDB.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 9. Set the leftmost 8emLen - emBits bits of the leftmost octet\n     * in DB to zero. */\n    db = String.fromCharCode(db.charCodeAt(0) & ~mask) + db.substr(1);\n\n    /* 10. If the emLen - hLen - sLen - 2 leftmost octets of DB are not zero\n     * or if the octet at position emLen - hLen - sLen - 1 (the leftmost\n     * position is \"position 1\") does not have hexadecimal value 0x01,\n     * output \"inconsistent\" and stop. */\n    var checkLen = emLen - hLen - sLen - 2;\n    for(i = 0; i < checkLen; i++) {\n      if(db.charCodeAt(i) !== 0x00) {\n        throw new Error('Leftmost octets not zero as expected');\n      }\n    }\n\n    if(db.charCodeAt(checkLen) !== 0x01) {\n      throw new Error('Inconsistent PSS signature, 0x01 marker not found');\n    }\n\n    /* 11. Let salt be the last sLen octets of DB. */\n    var salt = db.substr(-sLen);\n\n    /* 12.  Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 13. Let H' = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h_ = hash.digest().getBytes();\n\n    /* 14. If H = H', output \"consistent.\" Otherwise, output \"inconsistent.\" */\n    return h === h_;\n  };\n\n  return pssobj;\n};\n","/**\n * An API for getting cryptographically-secure random bytes. The bytes are\n * generated using the Fortuna algorithm devised by Bruce Schneier and\n * Niels Ferguson.\n *\n * Getting strong random bytes is not yet easy to do in javascript. The only\n * truish random entropy that can be collected is from the mouse, keyboard, or\n * from timing with respect to page loads, etc. This generator makes a poor\n * attempt at providing random bytes when those sources haven't yet provided\n * enough entropy to initially seed or to reseed the PRNG.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./sha256');\nrequire('./prng');\nrequire('./util');\n\n(function() {\n\n// forge.random already defined\nif(forge.random && forge.random.getBytes) {\n  module.exports = forge.random;\n  return;\n}\n\n(function(jQuery) {\n\n// the default prng plugin, uses AES-128\nvar prng_aes = {};\nvar _prng_aes_output = new Array(4);\nvar _prng_aes_buffer = forge.util.createBuffer();\nprng_aes.formatKey = function(key) {\n  // convert the key into 32-bit integers\n  var tmp = forge.util.createBuffer(key);\n  key = new Array(4);\n  key[0] = tmp.getInt32();\n  key[1] = tmp.getInt32();\n  key[2] = tmp.getInt32();\n  key[3] = tmp.getInt32();\n\n  // return the expanded key\n  return forge.aes._expandKey(key, false);\n};\nprng_aes.formatSeed = function(seed) {\n  // convert seed into 32-bit integers\n  var tmp = forge.util.createBuffer(seed);\n  seed = new Array(4);\n  seed[0] = tmp.getInt32();\n  seed[1] = tmp.getInt32();\n  seed[2] = tmp.getInt32();\n  seed[3] = tmp.getInt32();\n  return seed;\n};\nprng_aes.cipher = function(key, seed) {\n  forge.aes._updateBlock(key, seed, _prng_aes_output, false);\n  _prng_aes_buffer.putInt32(_prng_aes_output[0]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[1]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[2]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[3]);\n  return _prng_aes_buffer.getBytes();\n};\nprng_aes.increment = function(seed) {\n  // FIXME: do we care about carry or signed issues?\n  ++seed[3];\n  return seed;\n};\nprng_aes.md = forge.md.sha256;\n\n/**\n * Creates a new PRNG.\n */\nfunction spawnPrng() {\n  var ctx = forge.prng.create(prng_aes);\n\n  /**\n   * Gets random bytes. If a native secure crypto API is unavailable, this\n   * method tries to make the bytes more unpredictable by drawing from data that\n   * can be collected from the user of the browser, eg: mouse movement.\n   *\n   * If a callback is given, this method will be called asynchronously.\n   *\n   * @param count the number of random bytes to get.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytes = function(count, callback) {\n    return ctx.generate(count, callback);\n  };\n\n  /**\n   * Gets random bytes asynchronously. If a native secure crypto API is\n   * unavailable, this method tries to make the bytes more unpredictable by\n   * drawing from data that can be collected from the user of the browser,\n   * eg: mouse movement.\n   *\n   * @param count the number of random bytes to get.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytesSync = function(count) {\n    return ctx.generate(count);\n  };\n\n  return ctx;\n}\n\n// create default prng context\nvar _ctx = spawnPrng();\n\n// add other sources of entropy only if window.crypto.getRandomValues is not\n// available -- otherwise this source will be automatically used by the prng\nvar getRandomValues = null;\nvar globalScope = forge.util.globalScope;\nvar _crypto = globalScope.crypto || globalScope.msCrypto;\nif(_crypto && _crypto.getRandomValues) {\n  getRandomValues = function(arr) {\n    return _crypto.getRandomValues(arr);\n  };\n}\n\nif(forge.options.usePureJavaScript ||\n  (!forge.util.isNodejs && !getRandomValues)) {\n  // if this is a web worker, do not use weak entropy, instead register to\n  // receive strong entropy asynchronously from the main thread\n  if(typeof window === 'undefined' || window.document === undefined) {\n    // FIXME:\n  }\n\n  // get load time entropy\n  _ctx.collectInt(+new Date(), 32);\n\n  // add some entropy from navigator object\n  if(typeof(navigator) !== 'undefined') {\n    var _navBytes = '';\n    for(var key in navigator) {\n      try {\n        if(typeof(navigator[key]) == 'string') {\n          _navBytes += navigator[key];\n        }\n      } catch(e) {\n        /* Some navigator keys might not be accessible, e.g. the geolocation\n          attribute throws an exception if touched in Mozilla chrome://\n          context.\n\n          Silently ignore this and just don't use this as a source of\n          entropy. */\n      }\n    }\n    _ctx.collect(_navBytes);\n    _navBytes = null;\n  }\n\n  // add mouse and keyboard collectors if jquery is available\n  if(jQuery) {\n    // set up mouse entropy capture\n    jQuery().mousemove(function(e) {\n      // add mouse coords\n      _ctx.collectInt(e.clientX, 16);\n      _ctx.collectInt(e.clientY, 16);\n    });\n\n    // set up keyboard entropy capture\n    jQuery().keypress(function(e) {\n      _ctx.collectInt(e.charCode, 8);\n    });\n  }\n}\n\n/* Random API */\nif(!forge.random) {\n  forge.random = _ctx;\n} else {\n  // extend forge.random with _ctx\n  for(var key in _ctx) {\n    forge.random[key] = _ctx[key];\n  }\n}\n\n// expose spawn PRNG\nforge.random.createInstance = spawnPrng;\n\nmodule.exports = forge.random;\n\n})(typeof(jQuery) !== 'undefined' ? jQuery : null);\n\n})();\n","/**\n * RC2 implementation.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * Information on the RC2 cipher is available from RFC #2268,\n * http://www.ietf.org/rfc/rfc2268.txt\n */\nvar forge = require('./forge');\nrequire('./util');\n\nvar piTable = [\n  0xd9, 0x78, 0xf9, 0xc4, 0x19, 0xdd, 0xb5, 0xed, 0x28, 0xe9, 0xfd, 0x79, 0x4a, 0xa0, 0xd8, 0x9d,\n  0xc6, 0x7e, 0x37, 0x83, 0x2b, 0x76, 0x53, 0x8e, 0x62, 0x4c, 0x64, 0x88, 0x44, 0x8b, 0xfb, 0xa2,\n  0x17, 0x9a, 0x59, 0xf5, 0x87, 0xb3, 0x4f, 0x13, 0x61, 0x45, 0x6d, 0x8d, 0x09, 0x81, 0x7d, 0x32,\n  0xbd, 0x8f, 0x40, 0xeb, 0x86, 0xb7, 0x7b, 0x0b, 0xf0, 0x95, 0x21, 0x22, 0x5c, 0x6b, 0x4e, 0x82,\n  0x54, 0xd6, 0x65, 0x93, 0xce, 0x60, 0xb2, 0x1c, 0x73, 0x56, 0xc0, 0x14, 0xa7, 0x8c, 0xf1, 0xdc,\n  0x12, 0x75, 0xca, 0x1f, 0x3b, 0xbe, 0xe4, 0xd1, 0x42, 0x3d, 0xd4, 0x30, 0xa3, 0x3c, 0xb6, 0x26,\n  0x6f, 0xbf, 0x0e, 0xda, 0x46, 0x69, 0x07, 0x57, 0x27, 0xf2, 0x1d, 0x9b, 0xbc, 0x94, 0x43, 0x03,\n  0xf8, 0x11, 0xc7, 0xf6, 0x90, 0xef, 0x3e, 0xe7, 0x06, 0xc3, 0xd5, 0x2f, 0xc8, 0x66, 0x1e, 0xd7,\n  0x08, 0xe8, 0xea, 0xde, 0x80, 0x52, 0xee, 0xf7, 0x84, 0xaa, 0x72, 0xac, 0x35, 0x4d, 0x6a, 0x2a,\n  0x96, 0x1a, 0xd2, 0x71, 0x5a, 0x15, 0x49, 0x74, 0x4b, 0x9f, 0xd0, 0x5e, 0x04, 0x18, 0xa4, 0xec,\n  0xc2, 0xe0, 0x41, 0x6e, 0x0f, 0x51, 0xcb, 0xcc, 0x24, 0x91, 0xaf, 0x50, 0xa1, 0xf4, 0x70, 0x39,\n  0x99, 0x7c, 0x3a, 0x85, 0x23, 0xb8, 0xb4, 0x7a, 0xfc, 0x02, 0x36, 0x5b, 0x25, 0x55, 0x97, 0x31,\n  0x2d, 0x5d, 0xfa, 0x98, 0xe3, 0x8a, 0x92, 0xae, 0x05, 0xdf, 0x29, 0x10, 0x67, 0x6c, 0xba, 0xc9,\n  0xd3, 0x00, 0xe6, 0xcf, 0xe1, 0x9e, 0xa8, 0x2c, 0x63, 0x16, 0x01, 0x3f, 0x58, 0xe2, 0x89, 0xa9,\n  0x0d, 0x38, 0x34, 0x1b, 0xab, 0x33, 0xff, 0xb0, 0xbb, 0x48, 0x0c, 0x5f, 0xb9, 0xb1, 0xcd, 0x2e,\n  0xc5, 0xf3, 0xdb, 0x47, 0xe5, 0xa5, 0x9c, 0x77, 0x0a, 0xa6, 0x20, 0x68, 0xfe, 0x7f, 0xc1, 0xad\n];\n\nvar s = [1, 2, 3, 5];\n\n/**\n * Rotate a word left by given number of bits.\n *\n * Bits that are shifted out on the left are put back in on the right\n * hand side.\n *\n * @param word The word to shift left.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar rol = function(word, bits) {\n  return ((word << bits) & 0xffff) | ((word & 0xffff) >> (16 - bits));\n};\n\n/**\n * Rotate a word right by given number of bits.\n *\n * Bits that are shifted out on the right are put back in on the left\n * hand side.\n *\n * @param word The word to shift right.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar ror = function(word, bits) {\n  return ((word & 0xffff) >> bits) | ((word << (16 - bits)) & 0xffff);\n};\n\n/* RC2 API */\nmodule.exports = forge.rc2 = forge.rc2 || {};\n\n/**\n * Perform RC2 key expansion as per RFC #2268, section 2.\n *\n * @param key variable-length user key (between 1 and 128 bytes)\n * @param effKeyBits number of effective key bits (default: 128)\n * @return the expanded RC2 key (ByteBuffer of 128 bytes)\n */\nforge.rc2.expandKey = function(key, effKeyBits) {\n  if(typeof key === 'string') {\n    key = forge.util.createBuffer(key);\n  }\n  effKeyBits = effKeyBits || 128;\n\n  /* introduce variables that match the names used in RFC #2268 */\n  var L = key;\n  var T = key.length();\n  var T1 = effKeyBits;\n  var T8 = Math.ceil(T1 / 8);\n  var TM = 0xff >> (T1 & 0x07);\n  var i;\n\n  for(i = T; i < 128; i++) {\n    L.putByte(piTable[(L.at(i - 1) + L.at(i - T)) & 0xff]);\n  }\n\n  L.setAt(128 - T8, piTable[L.at(128 - T8) & TM]);\n\n  for(i = 127 - T8; i >= 0; i--) {\n    L.setAt(i, piTable[L.at(i + 1) ^ L.at(i + T8)]);\n  }\n\n  return L;\n};\n\n/**\n * Creates a RC2 cipher object.\n *\n * @param key the symmetric key to use (as base for key generation).\n * @param bits the number of effective key bits.\n * @param encrypt false for decryption, true for encryption.\n *\n * @return the cipher.\n */\nvar createCipher = function(key, bits, encrypt) {\n  var _finish = false, _input = null, _output = null, _iv = null;\n  var mixRound, mashRound;\n  var i, j, K = [];\n\n  /* Expand key and fill into K[] Array */\n  key = forge.rc2.expandKey(key, bits);\n  for(i = 0; i < 64; i++) {\n    K.push(key.getInt16Le());\n  }\n\n  if(encrypt) {\n    /**\n     * Perform one mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        R[i] = rol(R[i], s[i]);\n        j++;\n      }\n    };\n\n    /**\n     * Perform one mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[R[(i + 3) % 4] & 63];\n      }\n    };\n  } else {\n    /**\n     * Perform one r-mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] = ror(R[i], s[i]);\n        R[i] -= K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        j--;\n      }\n    };\n\n    /**\n     * Perform one r-mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] -= K[R[(i + 3) % 4] & 63];\n      }\n    };\n  }\n\n  /**\n   * Run the specified cipher execution plan.\n   *\n   * This function takes four words from the input buffer, applies the IV on\n   * it (if requested) and runs the provided execution plan.\n   *\n   * The plan must be put together in form of a array of arrays.  Where the\n   * outer one is simply a list of steps to perform and the inner one needs\n   * to have two elements: the first one telling how many rounds to perform,\n   * the second one telling what to do (i.e. the function to call).\n   *\n   * @param {Array} plan The plan to execute.\n   */\n  var runPlan = function(plan) {\n    var R = [];\n\n    /* Get data from input buffer and fill the four words into R */\n    for(i = 0; i < 4; i++) {\n      var val = _input.getInt16Le();\n\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting, apply the IV first. */\n          val ^= _iv.getInt16Le();\n        } else {\n          /* We're decryption, keep cipher text for next block. */\n          _iv.putInt16Le(val);\n        }\n      }\n\n      R.push(val & 0xffff);\n    }\n\n    /* Reset global \"j\" variable as per spec. */\n    j = encrypt ? 0 : 63;\n\n    /* Run execution plan. */\n    for(var ptr = 0; ptr < plan.length; ptr++) {\n      for(var ctr = 0; ctr < plan[ptr][0]; ctr++) {\n        plan[ptr][1](R);\n      }\n    }\n\n    /* Write back result to output buffer. */\n    for(i = 0; i < 4; i++) {\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting in CBC-mode, feed back encrypted bytes into\n             IV buffer to carry it forward to next block. */\n          _iv.putInt16Le(R[i]);\n        } else {\n          R[i] ^= _iv.getInt16Le();\n        }\n      }\n\n      _output.putInt16Le(R[i]);\n    }\n  };\n\n  /* Create cipher object */\n  var cipher = null;\n  cipher = {\n    /**\n     * Starts or restarts the encryption or decryption process, whichever\n     * was previously configured.\n     *\n     * To use the cipher in CBC mode, iv may be given either as a string\n     * of bytes, or as a byte buffer.  For ECB mode, give null as iv.\n     *\n     * @param iv the initialization vector to use, null for ECB mode.\n     * @param output the output the buffer to write to, null to create one.\n     */\n    start: function(iv, output) {\n      if(iv) {\n        /* CBC mode */\n        if(typeof iv === 'string') {\n          iv = forge.util.createBuffer(iv);\n        }\n      }\n\n      _finish = false;\n      _input = forge.util.createBuffer();\n      _output = output || new forge.util.createBuffer();\n      _iv = iv;\n\n      cipher.output = _output;\n    },\n\n    /**\n     * Updates the next block.\n     *\n     * @param input the buffer to read from.\n     */\n    update: function(input) {\n      if(!_finish) {\n        // not finishing, so fill the input buffer with more input\n        _input.putBuffer(input);\n      }\n\n      while(_input.length() >= 8) {\n        runPlan([\n            [ 5, mixRound ],\n            [ 1, mashRound ],\n            [ 6, mixRound ],\n            [ 1, mashRound ],\n            [ 5, mixRound ]\n          ]);\n      }\n    },\n\n    /**\n     * Finishes encrypting or decrypting.\n     *\n     * @param pad a padding function to use, null for PKCS#7 padding,\n     *           signature(blockSize, buffer, decrypt).\n     *\n     * @return true if successful, false on error.\n     */\n    finish: function(pad) {\n      var rval = true;\n\n      if(encrypt) {\n        if(pad) {\n          rval = pad(8, _input, !encrypt);\n        } else {\n          // add PKCS#7 padding to block (each pad byte is the\n          // value of the number of pad bytes)\n          var padding = (_input.length() === 8) ? 8 : (8 - _input.length());\n          _input.fillWithByte(padding, padding);\n        }\n      }\n\n      if(rval) {\n        // do final update\n        _finish = true;\n        cipher.update();\n      }\n\n      if(!encrypt) {\n        // check for error: input data not a multiple of block size\n        rval = (_input.length() === 0);\n        if(rval) {\n          if(pad) {\n            rval = pad(8, _output, !encrypt);\n          } else {\n            // ensure padding byte count is valid\n            var len = _output.length();\n            var count = _output.at(len - 1);\n\n            if(count > len) {\n              rval = false;\n            } else {\n              // trim off padding bytes\n              _output.truncate(count);\n            }\n          }\n        }\n      }\n\n      return rval;\n    }\n  };\n\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startEncrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createEncryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start encrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createEncryptionCipher = function(key, bits) {\n  return createCipher(key, bits, true);\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startDecrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createDecryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start decrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createDecryptionCipher = function(key, bits) {\n  return createCipher(key, bits, false);\n};\n","/**\n * Javascript implementation of basic RSA algorithms.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The only algorithm currently supported for PKI is RSA.\n *\n * An RSA key is often stored in ASN.1 DER format. The SubjectPublicKeyInfo\n * ASN.1 structure is composed of an algorithm of type AlgorithmIdentifier\n * and a subjectPublicKey of type bit string.\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of RSA, there aren't any.\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm AlgorithmIdentifier,\n *   subjectPublicKey BIT STRING\n * }\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * For an RSA public key, the subjectPublicKey is:\n *\n * RSAPublicKey ::= SEQUENCE {\n *   modulus            INTEGER,    -- n\n *   publicExponent     INTEGER     -- e\n * }\n *\n * PrivateKeyInfo ::= SEQUENCE {\n *   version                   Version,\n *   privateKeyAlgorithm       PrivateKeyAlgorithmIdentifier,\n *   privateKey                PrivateKey,\n *   attributes           [0]  IMPLICIT Attributes OPTIONAL\n * }\n *\n * Version ::= INTEGER\n * PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier\n * PrivateKey ::= OCTET STRING\n * Attributes ::= SET OF Attribute\n *\n * An RSA private key as the following structure:\n *\n * RSAPrivateKey ::= SEQUENCE {\n *   version Version,\n *   modulus INTEGER, -- n\n *   publicExponent INTEGER, -- e\n *   privateExponent INTEGER, -- d\n *   prime1 INTEGER, -- p\n *   prime2 INTEGER, -- q\n *   exponent1 INTEGER, -- d mod (p-1)\n *   exponent2 INTEGER, -- d mod (q-1)\n *   coefficient INTEGER -- (inverse of q) mod p\n * }\n *\n * Version ::= INTEGER\n *\n * The OID for the RSA key algorithm is: 1.2.840.113549.1.1.1\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./jsbn');\nrequire('./oids');\nrequire('./pkcs1');\nrequire('./prime');\nrequire('./random');\nrequire('./util');\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\nvar _crypto = forge.util.isNodejs ? require('crypto') : null;\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for util API\nvar util = forge.util;\n\n/*\n * RSA encryption and decryption, see RFC 2313.\n */\nforge.pki = forge.pki || {};\nmodule.exports = forge.pki.rsa = forge.rsa = forge.rsa || {};\nvar pki = forge.pki;\n\n// for finding primes, which are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\n\n// validator for a PrivateKeyInfo structure\nvar privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\n// validator for an RSA private key\nvar rsaPrivateKeyValidator = {\n  // RSAPrivateKey\n  name: 'RSAPrivateKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'RSAPrivateKey.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // modulus (n)\n    name: 'RSAPrivateKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPrivateKey.publicExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPublicExponent'\n  }, {\n    // privateExponent (d)\n    name: 'RSAPrivateKey.privateExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrivateExponent'\n  }, {\n    // prime1 (p)\n    name: 'RSAPrivateKey.prime1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime1'\n  }, {\n    // prime2 (q)\n    name: 'RSAPrivateKey.prime2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime2'\n  }, {\n    // exponent1 (d mod (p-1))\n    name: 'RSAPrivateKey.exponent1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent1'\n  }, {\n    // exponent2 (d mod (q-1))\n    name: 'RSAPrivateKey.exponent2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent2'\n  }, {\n    // coefficient ((inverse of q) mod p)\n    name: 'RSAPrivateKey.coefficient',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyCoefficient'\n  }]\n};\n\n// validator for an RSA public key\nvar rsaPublicKeyValidator = {\n  // RSAPublicKey\n  name: 'RSAPublicKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // modulus (n)\n    name: 'RSAPublicKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPublicKey.exponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyExponent'\n  }]\n};\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  }, {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  }]\n};\n\n// validator for a DigestInfo structure\nvar digestInfoValidator = {\n  name: 'DigestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'DigestInfo.DigestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'DigestInfo.DigestAlgorithm.algorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'algorithmIdentifier'\n    }, {\n      // NULL paramters\n      name: 'DigestInfo.DigestAlgorithm.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.NULL,\n      // captured only to check existence for md2 and md5\n      capture: 'parameters',\n      optional: true,\n      constructed: false\n    }]\n  }, {\n    // digest\n    name: 'DigestInfo.digest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'digest'\n  }]\n};\n\n/**\n * Wrap digest in DigestInfo object.\n *\n * This function implements EMSA-PKCS1-v1_5-ENCODE as per RFC 3447.\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n * Digest ::= OCTET STRING\n *\n * @param md the message digest object with the hash to sign.\n *\n * @return the encoded message (ready for RSA encrytion)\n */\nvar emsaPkcs1v15encode = function(md) {\n  // get the oid for the algorithm\n  var oid;\n  if(md.algorithm in pki.oids) {\n    oid = pki.oids[md.algorithm];\n  } else {\n    var error = new Error('Unknown message digest algorithm.');\n    error.algorithm = md.algorithm;\n    throw error;\n  }\n  var oidBytes = asn1.oidToDer(oid).getBytes();\n\n  // create the digest info\n  var digestInfo = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  var digestAlgorithm = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false, oidBytes));\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.NULL, false, ''));\n  var digest = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n    false, md.digest().getBytes());\n  digestInfo.value.push(digestAlgorithm);\n  digestInfo.value.push(digest);\n\n  // encode digest info\n  return asn1.toDer(digestInfo).getBytes();\n};\n\n/**\n * Performs x^c mod n (RSA encryption or decryption operation).\n *\n * @param x the number to raise and mod.\n * @param key the key to use.\n * @param pub true if the key is public, false if private.\n *\n * @return the result of x^c mod n.\n */\nvar _modPow = function(x, key, pub) {\n  if(pub) {\n    return x.modPow(key.e, key.n);\n  }\n\n  if(!key.p || !key.q) {\n    // allow calculation without CRT params (slow)\n    return x.modPow(key.d, key.n);\n  }\n\n  // pre-compute dP, dQ, and qInv if necessary\n  if(!key.dP) {\n    key.dP = key.d.mod(key.p.subtract(BigInteger.ONE));\n  }\n  if(!key.dQ) {\n    key.dQ = key.d.mod(key.q.subtract(BigInteger.ONE));\n  }\n  if(!key.qInv) {\n    key.qInv = key.q.modInverse(key.p);\n  }\n\n  /* Chinese remainder theorem (CRT) states:\n\n    Suppose n1, n2, ..., nk are positive integers which are pairwise\n    coprime (n1 and n2 have no common factors other than 1). For any\n    integers x1, x2, ..., xk there exists an integer x solving the\n    system of simultaneous congruences (where ~= means modularly\n    congruent so a ~= b mod n means a mod n = b mod n):\n\n    x ~= x1 mod n1\n    x ~= x2 mod n2\n    ...\n    x ~= xk mod nk\n\n    This system of congruences has a single simultaneous solution x\n    between 0 and n - 1. Furthermore, each xk solution and x itself\n    is congruent modulo the product n = n1*n2*...*nk.\n    So x1 mod n = x2 mod n = xk mod n = x mod n.\n\n    The single simultaneous solution x can be solved with the following\n    equation:\n\n    x = sum(xi*ri*si) mod n where ri = n/ni and si = ri^-1 mod ni.\n\n    Where x is less than n, xi = x mod ni.\n\n    For RSA we are only concerned with k = 2. The modulus n = pq, where\n    p and q are coprime. The RSA decryption algorithm is:\n\n    y = x^d mod n\n\n    Given the above:\n\n    x1 = x^d mod p\n    r1 = n/p = q\n    s1 = q^-1 mod p\n    x2 = x^d mod q\n    r2 = n/q = p\n    s2 = p^-1 mod q\n\n    So y = (x1r1s1 + x2r2s2) mod n\n         = ((x^d mod p)q(q^-1 mod p) + (x^d mod q)p(p^-1 mod q)) mod n\n\n    According to Fermat's Little Theorem, if the modulus P is prime,\n    for any integer A not evenly divisible by P, A^(P-1) ~= 1 mod P.\n    Since A is not divisible by P it follows that if:\n    N ~= M mod (P - 1), then A^N mod P = A^M mod P. Therefore:\n\n    A^N mod P = A^(M mod (P - 1)) mod P. (The latter takes less effort\n    to calculate). In order to calculate x^d mod p more quickly the\n    exponent d mod (p - 1) is stored in the RSA private key (the same\n    is done for x^d mod q). These values are referred to as dP and dQ\n    respectively. Therefore we now have:\n\n    y = ((x^dP mod p)q(q^-1 mod p) + (x^dQ mod q)p(p^-1 mod q)) mod n\n\n    Since we'll be reducing x^dP by modulo p (same for q) we can also\n    reduce x by p (and q respectively) before hand. Therefore, let\n\n    xp = ((x mod p)^dP mod p), and\n    xq = ((x mod q)^dQ mod q), yielding:\n\n    y = (xp*q*(q^-1 mod p) + xq*p*(p^-1 mod q)) mod n\n\n    This can be further reduced to a simple algorithm that only\n    requires 1 inverse (the q inverse is used) to be used and stored.\n    The algorithm is called Garner's algorithm. If qInv is the\n    inverse of q, we simply calculate:\n\n    y = (qInv*(xp - xq) mod p) * q + xq\n\n    However, there are two further complications. First, we need to\n    ensure that xp > xq to prevent signed BigIntegers from being used\n    so we add p until this is true (since we will be mod'ing with\n    p anyway). Then, there is a known timing attack on algorithms\n    using the CRT. To mitigate this risk, \"cryptographic blinding\"\n    should be used. This requires simply generating a random number r\n    between 0 and n-1 and its inverse and multiplying x by r^e before\n    calculating y and then multiplying y by r^-1 afterwards. Note that\n    r must be coprime with n (gcd(r, n) === 1) in order to have an\n    inverse.\n  */\n\n  // cryptographic blinding\n  var r;\n  do {\n    r = new BigInteger(\n      forge.util.bytesToHex(forge.random.getBytes(key.n.bitLength() / 8)),\n      16);\n  } while(r.compareTo(key.n) >= 0 || !r.gcd(key.n).equals(BigInteger.ONE));\n  x = x.multiply(r.modPow(key.e, key.n)).mod(key.n);\n\n  // calculate xp and xq\n  var xp = x.mod(key.p).modPow(key.dP, key.p);\n  var xq = x.mod(key.q).modPow(key.dQ, key.q);\n\n  // xp must be larger than xq to avoid signed bit usage\n  while(xp.compareTo(xq) < 0) {\n    xp = xp.add(key.p);\n  }\n\n  // do last step\n  var y = xp.subtract(xq)\n    .multiply(key.qInv).mod(key.p)\n    .multiply(key.q).add(xq);\n\n  // remove effect of random for cryptographic blinding\n  y = y.multiply(r.modInverse(key.n)).mod(key.n);\n\n  return y;\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'sign' on a private key object or\n * 'encrypt' on a public key object instead.\n *\n * Performs RSA encryption.\n *\n * The parameter bt controls whether to put padding bytes before the\n * message passed in. Set bt to either true or false to disable padding\n * completely (in order to handle e.g. EMSA-PSS encoding seperately before),\n * signaling whether the encryption operation is a public key operation\n * (i.e. encrypting data) or not, i.e. private key operation (data signing).\n *\n * For PKCS#1 v1.5 padding pass in the block type to use, i.e. either 0x01\n * (for signing) or 0x02 (for encryption). The key operation mode (private\n * or public) is derived from this flag in that case).\n *\n * @param m the message to encrypt as a byte string.\n * @param key the RSA key to use.\n * @param bt for PKCS#1 v1.5 padding, the block type to use\n *   (0x01 for private key, 0x02 for public),\n *   to disable padding: true = public key, false = private key.\n *\n * @return the encrypted bytes as a string.\n */\npki.rsa.encrypt = function(m, key, bt) {\n  var pub = bt;\n  var eb;\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  if(bt !== false && bt !== true) {\n    // legacy, default to PKCS#1 v1.5 padding\n    pub = (bt === 0x02);\n    eb = _encodePkcs1_v1_5(m, key, bt);\n  } else {\n    eb = forge.util.createBuffer();\n    eb.putBytes(m);\n  }\n\n  // load encryption block as big integer 'x'\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var x = new BigInteger(eb.toHex(), 16);\n\n  // do RSA encryption\n  var y = _modPow(x, key, pub);\n\n  // convert y into the encrypted data byte string, if y is shorter in\n  // bytes than k, then prepend zero bytes to fill up ed\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var yhex = y.toString(16);\n  var ed = forge.util.createBuffer();\n  var zeros = k - Math.ceil(yhex.length / 2);\n  while(zeros > 0) {\n    ed.putByte(0x00);\n    --zeros;\n  }\n  ed.putBytes(forge.util.hexToBytes(yhex));\n  return ed.getBytes();\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'decrypt' on a private key object or\n * 'verify' on a public key object instead.\n *\n * Performs RSA decryption.\n *\n * The parameter ml controls whether to apply PKCS#1 v1.5 padding\n * or not.  Set ml = false to disable padding removal completely\n * (in order to handle e.g. EMSA-PSS later on) and simply pass back\n * the RSA encryption block.\n *\n * @param ed the encrypted data to decrypt in as a byte string.\n * @param key the RSA key to use.\n * @param pub true for a public key operation, false for private.\n * @param ml the message length, if known, false to disable padding.\n *\n * @return the decrypted message as a byte string.\n */\npki.rsa.decrypt = function(ed, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  // error if the length of the encrypted data ED is not k\n  if(ed.length !== k) {\n    var error = new Error('Encrypted message length is invalid.');\n    error.length = ed.length;\n    error.expected = k;\n    throw error;\n  }\n\n  // convert encrypted data into a big integer\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var y = new BigInteger(forge.util.createBuffer(ed).toHex(), 16);\n\n  // y must be less than the modulus or it wasn't the result of\n  // a previous mod operation (encryption) using that modulus\n  if(y.compareTo(key.n) >= 0) {\n    throw new Error('Encrypted message is invalid.');\n  }\n\n  // do RSA decryption\n  var x = _modPow(y, key, pub);\n\n  // create the encryption block, if x is shorter in bytes than k, then\n  // prepend zero bytes to fill up eb\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var xhex = x.toString(16);\n  var eb = forge.util.createBuffer();\n  var zeros = k - Math.ceil(xhex.length / 2);\n  while(zeros > 0) {\n    eb.putByte(0x00);\n    --zeros;\n  }\n  eb.putBytes(forge.util.hexToBytes(xhex));\n\n  if(ml !== false) {\n    // legacy, default to PKCS#1 v1.5 padding\n    return _decodePkcs1_v1_5(eb.getBytes(), key, pub);\n  }\n\n  // return message\n  return eb.getBytes();\n};\n\n/**\n * Creates an RSA key-pair generation state object. It is used to allow\n * key-generation to be performed in steps. It also allows for a UI to\n * display progress updates.\n *\n * @param bits the size for the private key in bits, defaults to 2048.\n * @param e the public exponent to use, defaults to 65537 (0x10001).\n * @param [options] the options to use.\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n *\n * @return the state object to use to generate the key-pair.\n */\npki.rsa.createKeyPairGenerationState = function(bits, e, options) {\n  // TODO: migrate step-based prime generation code to forge.prime\n\n  // set default bits\n  if(typeof(bits) === 'string') {\n    bits = parseInt(bits, 10);\n  }\n  bits = bits || 2048;\n\n  // create prng with api that matches BigInteger secure random\n  options = options || {};\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  var algorithm = options.algorithm || 'PRIMEINC';\n\n  // create PRIMEINC algorithm state\n  var rval;\n  if(algorithm === 'PRIMEINC') {\n    rval = {\n      algorithm: algorithm,\n      state: 0,\n      bits: bits,\n      rng: rng,\n      eInt: e || 65537,\n      e: new BigInteger(null),\n      p: null,\n      q: null,\n      qBits: bits >> 1,\n      pBits: bits - (bits >> 1),\n      pqState: 0,\n      num: null,\n      keys: null\n    };\n    rval.e.fromInt(rval.eInt);\n  } else {\n    throw new Error('Invalid key generation algorithm: ' + algorithm);\n  }\n\n  return rval;\n};\n\n/**\n * Attempts to runs the key-generation algorithm for at most n seconds\n * (approximately) using the given state. When key-generation has completed,\n * the keys will be stored in state.keys.\n *\n * To use this function to update a UI while generating a key or to prevent\n * causing browser lockups/warnings, set \"n\" to a value other than 0. A\n * simple pattern for generating a key and showing a progress indicator is:\n *\n * var state = pki.rsa.createKeyPairGenerationState(2048);\n * var step = function() {\n *   // step key-generation, run algorithm for 100 ms, repeat\n *   if(!forge.pki.rsa.stepKeyPairGenerationState(state, 100)) {\n *     setTimeout(step, 1);\n *   } else {\n *     // key-generation complete\n *     // TODO: turn off progress indicator here\n *     // TODO: use the generated key-pair in \"state.keys\"\n *   }\n * };\n * // TODO: turn on progress indicator here\n * setTimeout(step, 0);\n *\n * @param state the state to use.\n * @param n the maximum number of milliseconds to run the algorithm for, 0\n *          to run the algorithm to completion.\n *\n * @return true if the key-generation completed, false if not.\n */\npki.rsa.stepKeyPairGenerationState = function(state, n) {\n  // set default algorithm if not set\n  if(!('algorithm' in state)) {\n    state.algorithm = 'PRIMEINC';\n  }\n\n  // TODO: migrate step-based prime generation code to forge.prime\n  // TODO: abstract as PRIMEINC algorithm\n\n  // do key generation (based on Tom Wu's rsa.js, see jsbn.js license)\n  // with some minor optimizations and designed to run in steps\n\n  // local state vars\n  var THIRTY = new BigInteger(null);\n  THIRTY.fromInt(30);\n  var deltaIdx = 0;\n  var op_or = function(x, y) {return x | y;};\n\n  // keep stepping until time limit is reached or done\n  var t1 = +new Date();\n  var t2;\n  var total = 0;\n  while(state.keys === null && (n <= 0 || total < n)) {\n    // generate p or q\n    if(state.state === 0) {\n      /* Note: All primes are of the form:\n\n        30k+i, for i < 30 and gcd(30, i)=1, where there are 8 values for i\n\n        When we generate a random number, we always align it at 30k + 1. Each\n        time the number is determined not to be prime we add to get to the\n        next 'i', eg: if the number was at 30k + 1 we add 6. */\n      var bits = (state.p === null) ? state.pBits : state.qBits;\n      var bits1 = bits - 1;\n\n      // get a random number\n      if(state.pqState === 0) {\n        state.num = new BigInteger(bits, state.rng);\n        // force MSB set\n        if(!state.num.testBit(bits1)) {\n          state.num.bitwiseTo(\n            BigInteger.ONE.shiftLeft(bits1), op_or, state.num);\n        }\n        // align number on 30k+1 boundary\n        state.num.dAddOffset(31 - state.num.mod(THIRTY).byteValue(), 0);\n        deltaIdx = 0;\n\n        ++state.pqState;\n      } else if(state.pqState === 1) {\n        // try to make the number a prime\n        if(state.num.bitLength() > bits) {\n          // overflow, try again\n          state.pqState = 0;\n          // do primality test\n        } else if(state.num.isProbablePrime(\n          _getMillerRabinTests(state.num.bitLength()))) {\n          ++state.pqState;\n        } else {\n          // get next potential prime\n          state.num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n        }\n      } else if(state.pqState === 2) {\n        // ensure number is coprime with e\n        state.pqState =\n          (state.num.subtract(BigInteger.ONE).gcd(state.e)\n            .compareTo(BigInteger.ONE) === 0) ? 3 : 0;\n      } else if(state.pqState === 3) {\n        // store p or q\n        state.pqState = 0;\n        if(state.p === null) {\n          state.p = state.num;\n        } else {\n          state.q = state.num;\n        }\n\n        // advance state if both p and q are ready\n        if(state.p !== null && state.q !== null) {\n          ++state.state;\n        }\n        state.num = null;\n      }\n    } else if(state.state === 1) {\n      // ensure p is larger than q (swap them if not)\n      if(state.p.compareTo(state.q) < 0) {\n        state.num = state.p;\n        state.p = state.q;\n        state.q = state.num;\n      }\n      ++state.state;\n    } else if(state.state === 2) {\n      // compute phi: (p - 1)(q - 1) (Euler's totient function)\n      state.p1 = state.p.subtract(BigInteger.ONE);\n      state.q1 = state.q.subtract(BigInteger.ONE);\n      state.phi = state.p1.multiply(state.q1);\n      ++state.state;\n    } else if(state.state === 3) {\n      // ensure e and phi are coprime\n      if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) === 0) {\n        // phi and e are coprime, advance\n        ++state.state;\n      } else {\n        // phi and e aren't coprime, so generate a new p and q\n        state.p = null;\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 4) {\n      // create n, ensure n is has the right number of bits\n      state.n = state.p.multiply(state.q);\n\n      // ensure n is right number of bits\n      if(state.n.bitLength() === state.bits) {\n        // success, advance\n        ++state.state;\n      } else {\n        // failed, get new q\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 5) {\n      // set keys\n      var d = state.e.modInverse(state.phi);\n      state.keys = {\n        privateKey: pki.rsa.setPrivateKey(\n          state.n, state.e, d, state.p, state.q,\n          d.mod(state.p1), d.mod(state.q1),\n          state.q.modInverse(state.p)),\n        publicKey: pki.rsa.setPublicKey(state.n, state.e)\n      };\n    }\n\n    // update timing\n    t2 = +new Date();\n    total += t2 - t1;\n    t1 = t2;\n  }\n\n  return state.keys !== null;\n};\n\n/**\n * Generates an RSA public-private key pair in a single call.\n *\n * To generate a key-pair in steps (to allow for progress updates and to\n * prevent blocking or warnings in slow browsers) then use the key-pair\n * generation state functions.\n *\n * To generate a key-pair asynchronously (either through web-workers, if\n * available, or by breaking up the work on the main thread), pass a\n * callback function.\n *\n * @param [bits] the size for the private key in bits, defaults to 2048.\n * @param [e] the public exponent to use, defaults to 65537.\n * @param [options] options for key-pair generation, if given then 'bits'\n *            and 'e' must *not* be given:\n *          bits the size for the private key in bits, (default: 2048).\n *          e the public exponent to use, (default: 65537 (0x10001)).\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\". Disables use of native APIs.\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n * @param [callback(err, keypair)] called once the operation completes.\n *\n * @return an object with privateKey and publicKey properties.\n */\npki.rsa.generateKeyPair = function(bits, e, options, callback) {\n  // (bits), (options), (callback)\n  if(arguments.length === 1) {\n    if(typeof bits === 'object') {\n      options = bits;\n      bits = undefined;\n    } else if(typeof bits === 'function') {\n      callback = bits;\n      bits = undefined;\n    }\n  } else if(arguments.length === 2) {\n    // (bits, e), (bits, options), (bits, callback), (options, callback)\n    if(typeof bits === 'number') {\n      if(typeof e === 'function') {\n        callback = e;\n        e = undefined;\n      } else if(typeof e !== 'number') {\n        options = e;\n        e = undefined;\n      }\n    } else {\n      options = bits;\n      callback = e;\n      bits = undefined;\n      e = undefined;\n    }\n  } else if(arguments.length === 3) {\n    // (bits, e, options), (bits, e, callback), (bits, options, callback)\n    if(typeof e === 'number') {\n      if(typeof options === 'function') {\n        callback = options;\n        options = undefined;\n      }\n    } else {\n      callback = options;\n      options = e;\n      e = undefined;\n    }\n  }\n  options = options || {};\n  if(bits === undefined) {\n    bits = options.bits || 2048;\n  }\n  if(e === undefined) {\n    e = options.e || 0x10001;\n  }\n\n  // use native code if permitted, available, and parameters are acceptable\n  if(!forge.options.usePureJavaScript && !options.prng &&\n    bits >= 256 && bits <= 16384 && (e === 0x10001 || e === 3)) {\n    if(callback) {\n      // try native async\n      if(_detectNodeCrypto('generateKeyPair')) {\n        return _crypto.generateKeyPair('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        }, function(err, pub, priv) {\n          if(err) {\n            return callback(err);\n          }\n          callback(null, {\n            privateKey: pki.privateKeyFromPem(priv),\n            publicKey: pki.publicKeyFromPem(pub)\n          });\n        });\n      }\n      if(_detectSubtleCrypto('generateKey') &&\n        _detectSubtleCrypto('exportKey')) {\n        // use standard native generateKey\n        return util.globalScope.crypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify'])\n        .then(function(pair) {\n          return util.globalScope.crypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n        // avoiding catch(function(err) {...}) to support IE <= 8\n        }).then(undefined, function(err) {\n          callback(err);\n        }).then(function(pkcs8) {\n          if(pkcs8) {\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          }\n        });\n      }\n      if(_detectSubtleMsCrypto('generateKey') &&\n        _detectSubtleMsCrypto('exportKey')) {\n        var genOp = util.globalScope.msCrypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify']);\n        genOp.oncomplete = function(e) {\n          var pair = e.target.result;\n          var exportOp = util.globalScope.msCrypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n          exportOp.oncomplete = function(e) {\n            var pkcs8 = e.target.result;\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          };\n          exportOp.onerror = function(err) {\n            callback(err);\n          };\n        };\n        genOp.onerror = function(err) {\n          callback(err);\n        };\n        return;\n      }\n    } else {\n      // try native sync\n      if(_detectNodeCrypto('generateKeyPairSync')) {\n        var keypair = _crypto.generateKeyPairSync('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        });\n        return {\n          privateKey: pki.privateKeyFromPem(keypair.privateKey),\n          publicKey: pki.publicKeyFromPem(keypair.publicKey)\n        };\n      }\n    }\n  }\n\n  // use JavaScript implementation\n  var state = pki.rsa.createKeyPairGenerationState(bits, e, options);\n  if(!callback) {\n    pki.rsa.stepKeyPairGenerationState(state, 0);\n    return state.keys;\n  }\n  _generateKeyPair(state, options, callback);\n};\n\n/**\n * Sets an RSA public key from BigIntegers modulus and exponent.\n *\n * @param n the modulus.\n * @param e the exponent.\n *\n * @return the public key.\n */\npki.setRsaPublicKey = pki.rsa.setPublicKey = function(n, e) {\n  var key = {\n    n: n,\n    e: e\n  };\n\n  /**\n   * Encrypts the given data with this public key. Newer applications\n   * should use the 'RSA-OAEP' decryption scheme, 'RSAES-PKCS1-V1_5' is for\n   * legacy applications.\n   *\n   * @param data the byte string to encrypt.\n   * @param scheme the encryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA encryption,\n   *          an object with an 'encode' property set to a function\n   *          with the signature 'function(data, key)' that returns\n   *          a binary-encoded string representing the encoded data.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the encrypted byte string.\n   */\n  key.encrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {\n        encode: function(m, key, pub) {\n          return _encodePkcs1_v1_5(m, key, 0x02).getBytes();\n        }\n      };\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        encode: function(m, key) {\n          return forge.pkcs1.encode_rsa_oaep(key, m, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {encode: function(e) {return e;}};\n    } else if(typeof scheme === 'string') {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // do scheme-based encoding then rsa encryption\n    var e = scheme.encode(data, key, true);\n    return pki.rsa.encrypt(e, key, true);\n  };\n\n  /**\n   * Verifies the given signature against the given digest.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5, in which case once RSA-decrypted, the\n   * signature is an OCTET STRING that holds a DigestInfo.\n   *\n   * DigestInfo ::= SEQUENCE {\n   *   digestAlgorithm DigestAlgorithmIdentifier,\n   *   digest Digest\n   * }\n   * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n   * Digest ::= OCTET STRING\n   *\n   * To perform PSS signature verification, provide an instance\n   * of Forge PSS object as the scheme parameter.\n   *\n   * @param digest the message digest hash to compare against the signature,\n   *          as a binary-encoded string.\n   * @param signature the signature to verify, as a binary-encoded string.\n   * @param scheme signature verification scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be expected, but\n   *            PKCS#1 v1.5 padding will still be used.\n   * @param options optional verify options\n   *          _parseAllDigestBytes testing flag to control parsing of all\n   *            digest bytes. Unsupported and not for general usage.\n   *            (default: true)\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  key.verify = function(digest, signature, scheme, options) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSASSA-PKCS1-V1_5';\n    }\n    if(options === undefined) {\n      options = {\n        _parseAllDigestBytes: true\n      };\n    }\n    if(!('_parseAllDigestBytes' in options)) {\n      options._parseAllDigestBytes = true;\n    }\n\n    if(scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          // d is ASN.1 BER-encoded DigestInfo\n          var obj = asn1.fromDer(d, {\n            parseAllBytes: options._parseAllDigestBytes\n          });\n\n          // validate DigestInfo\n          var capture = {};\n          var errors = [];\n          if(!asn1.validate(obj, digestInfoValidator, capture, errors)) {\n            var error = new Error(\n              'ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 ' +\n              'DigestInfo value.');\n            error.errors = errors;\n            throw error;\n          }\n          // check hash algorithm identifier\n          // see PKCS1-v1-5DigestAlgorithms in RFC 8017\n          // FIXME: add support to vaidator for strict value choices\n          var oid = asn1.derToOid(capture.algorithmIdentifier);\n          if(!(oid === forge.oids.md2 ||\n            oid === forge.oids.md5 ||\n            oid === forge.oids.sha1 ||\n            oid === forge.oids.sha224 ||\n            oid === forge.oids.sha256 ||\n            oid === forge.oids.sha384 ||\n            oid === forge.oids.sha512 ||\n            oid === forge.oids['sha512-224'] ||\n            oid === forge.oids['sha512-256'])) {\n            var error = new Error(\n              'Unknown RSASSA-PKCS1-v1_5 DigestAlgorithm identifier.');\n            error.oid = oid;\n            throw error;\n          }\n\n          // special check for md2 and md5 that NULL parameters exist\n          if(oid === forge.oids.md2 || oid === forge.oids.md5) {\n            if(!('parameters' in capture)) {\n              throw new Error(\n                'ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 ' +\n                'DigestInfo value. ' +\n                'Missing algorithm identifer NULL parameters.');\n            }\n          }\n\n          // compare the given digest to the decrypted one\n          return digest === capture.digest;\n        }\n      };\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          return digest === d;\n        }\n      };\n    }\n\n    // do rsa decryption w/o any decoding, then verify -- which does decoding\n    var d = pki.rsa.decrypt(signature, key, true, false);\n    return scheme.verify(digest, d, key.n.bitLength());\n  };\n\n  return key;\n};\n\n/**\n * Sets an RSA private key from BigIntegers modulus, exponent, primes,\n * prime exponents, and modular multiplicative inverse.\n *\n * @param n the modulus.\n * @param e the public exponent.\n * @param d the private exponent ((inverse of e) mod n).\n * @param p the first prime.\n * @param q the second prime.\n * @param dP exponent1 (d mod (p-1)).\n * @param dQ exponent2 (d mod (q-1)).\n * @param qInv ((inverse of q) mod p)\n *\n * @return the private key.\n */\npki.setRsaPrivateKey = pki.rsa.setPrivateKey = function(\n  n, e, d, p, q, dP, dQ, qInv) {\n  var key = {\n    n: n,\n    e: e,\n    d: d,\n    p: p,\n    q: q,\n    dP: dP,\n    dQ: dQ,\n    qInv: qInv\n  };\n\n  /**\n   * Decrypts the given data with this private key. The decryption scheme\n   * must match the one used to encrypt the data.\n   *\n   * @param data the byte string to decrypt.\n   * @param scheme the decryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA decryption.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the decrypted byte string.\n   */\n  key.decrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    // do rsa decryption w/o any decoding\n    var d = pki.rsa.decrypt(data, key, false, false);\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {decode: _decodePkcs1_v1_5};\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        decode: function(d, key) {\n          return forge.pkcs1.decode_rsa_oaep(key, d, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {decode: function(d) {return d;}};\n    } else {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // decode according to scheme\n    return scheme.decode(d, key, false);\n  };\n\n  /**\n   * Signs the given digest, producing a signature.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5. In order to generate a PSS signature, provide\n   * an instance of Forge PSS object as the scheme parameter.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param scheme the signature scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be used but\n   *            PKCS#1 v1.5 padding will still be used.\n   *\n   * @return the signature as a byte string.\n   */\n  key.sign = function(md, scheme) {\n    /* Note: The internal implementation of RSA operations is being\n      transitioned away from a PKCS#1 v1.5 hard-coded scheme. Some legacy\n      code like the use of an encoding block identifier 'bt' will eventually\n      be removed. */\n\n    // private key operation\n    var bt = false;\n\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    }\n\n    if(scheme === undefined || scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {encode: emsaPkcs1v15encode};\n      bt = 0x01;\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {encode: function() {return md;}};\n      bt = 0x01;\n    }\n\n    // encode and then encrypt\n    var d = scheme.encode(md, key.n.bitLength());\n    return pki.rsa.encrypt(d, key, bt);\n  };\n\n  return key;\n};\n\n/**\n * Wraps an RSAPrivateKey ASN.1 object in an ASN.1 PrivateKeyInfo object.\n *\n * @param rsaKey the ASN.1 RSAPrivateKey.\n *\n * @return the ASN.1 PrivateKeyInfo.\n */\npki.wrapRsaPrivateKey = function(rsaKey) {\n  // PrivateKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // privateKeyAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // PrivateKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      asn1.toDer(rsaKey).getBytes())\n  ]);\n};\n\n/**\n * Converts a private key from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a PrivateKeyInfo containing an\n *          RSAPrivateKey or an RSAPrivateKey.\n *\n * @return the private key.\n */\npki.privateKeyFromAsn1 = function(obj) {\n  // get PrivateKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, privateKeyValidator, capture, errors)) {\n    obj = asn1.fromDer(forge.util.createBuffer(capture.privateKey));\n  }\n\n  // get RSAPrivateKey\n  capture = {};\n  errors = [];\n  if(!asn1.validate(obj, rsaPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read private key. ' +\n      'ASN.1 object does not contain an RSAPrivateKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // Note: Version is currently ignored.\n  // capture.privateKeyVersion\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n, e, d, p, q, dP, dQ, qInv;\n  n = forge.util.createBuffer(capture.privateKeyModulus).toHex();\n  e = forge.util.createBuffer(capture.privateKeyPublicExponent).toHex();\n  d = forge.util.createBuffer(capture.privateKeyPrivateExponent).toHex();\n  p = forge.util.createBuffer(capture.privateKeyPrime1).toHex();\n  q = forge.util.createBuffer(capture.privateKeyPrime2).toHex();\n  dP = forge.util.createBuffer(capture.privateKeyExponent1).toHex();\n  dQ = forge.util.createBuffer(capture.privateKeyExponent2).toHex();\n  qInv = forge.util.createBuffer(capture.privateKeyCoefficient).toHex();\n\n  // set private key\n  return pki.setRsaPrivateKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16),\n    new BigInteger(d, 16),\n    new BigInteger(p, 16),\n    new BigInteger(q, 16),\n    new BigInteger(dP, 16),\n    new BigInteger(dQ, 16),\n    new BigInteger(qInv, 16));\n};\n\n/**\n * Converts a private key to an ASN.1 RSAPrivateKey.\n *\n * @param key the private key.\n *\n * @return the ASN.1 representation of an RSAPrivateKey.\n */\npki.privateKeyToAsn1 = pki.privateKeyToRSAPrivateKey = function(key) {\n  // RSAPrivateKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0 = only 2 primes, 1 multiple primes)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e)),\n    // privateExponent (d)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.d)),\n    // privateKeyPrime1 (p)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.p)),\n    // privateKeyPrime2 (q)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.q)),\n    // privateKeyExponent1 (dP)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dP)),\n    // privateKeyExponent2 (dQ)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dQ)),\n    // coefficient (qInv)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.qInv))\n  ]);\n};\n\n/**\n * Converts a public key from an ASN.1 SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @param obj the asn1 representation of a SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @return the public key.\n */\npki.publicKeyFromAsn1 = function(obj) {\n  // get SubjectPublicKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, publicKeyValidator, capture, errors)) {\n    // get oid\n    var oid = asn1.derToOid(capture.publicKeyOid);\n    if(oid !== pki.oids.rsaEncryption) {\n      var error = new Error('Cannot read public key. Unknown OID.');\n      error.oid = oid;\n      throw error;\n    }\n    obj = capture.rsaPublicKey;\n  }\n\n  // get RSA params\n  errors = [];\n  if(!asn1.validate(obj, rsaPublicKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read public key. ' +\n      'ASN.1 object does not contain an RSAPublicKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n = forge.util.createBuffer(capture.publicKeyModulus).toHex();\n  var e = forge.util.createBuffer(capture.publicKeyExponent).toHex();\n\n  // set public key\n  return pki.setRsaPublicKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16));\n};\n\n/**\n * Converts a public key to an ASN.1 SubjectPublicKeyInfo.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a SubjectPublicKeyInfo.\n */\npki.publicKeyToAsn1 = pki.publicKeyToSubjectPublicKeyInfo = function(key) {\n  // SubjectPublicKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // subjectPublicKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, [\n      pki.publicKeyToRSAPublicKey(key)\n    ])\n  ]);\n};\n\n/**\n * Converts a public key to an ASN.1 RSAPublicKey.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a RSAPublicKey.\n */\npki.publicKeyToRSAPublicKey = function(key) {\n  // RSAPublicKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e))\n  ]);\n};\n\n/**\n * Encodes a message using PKCS#1 v1.5 padding.\n *\n * @param m the message to encode.\n * @param key the RSA key to use.\n * @param bt the block type to use, i.e. either 0x01 (for signing) or 0x02\n *          (for encryption).\n *\n * @return the padded byte buffer.\n */\nfunction _encodePkcs1_v1_5(m, key, bt) {\n  var eb = forge.util.createBuffer();\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* use PKCS#1 v1.5 padding */\n  if(m.length > (k - 11)) {\n    var error = new Error('Message is too long for PKCS#1 v1.5 padding.');\n    error.length = m.length;\n    error.max = k - 11;\n    throw error;\n  }\n\n  /* A block type BT, a padding string PS, and the data D shall be\n    formatted into an octet string EB, the encryption block:\n\n    EB = 00 || BT || PS || 00 || D\n\n    The block type BT shall be a single octet indicating the structure of\n    the encryption block. For this version of the document it shall have\n    value 00, 01, or 02. For a private-key operation, the block type\n    shall be 00 or 01. For a public-key operation, it shall be 02.\n\n    The padding string PS shall consist of k-3-||D|| octets. For block\n    type 00, the octets shall have value 00; for block type 01, they\n    shall have value FF; and for block type 02, they shall be\n    pseudorandomly generated and nonzero. This makes the length of the\n    encryption block EB equal to k. */\n\n  // build the encryption block\n  eb.putByte(0x00);\n  eb.putByte(bt);\n\n  // create the padding\n  var padNum = k - 3 - m.length;\n  var padByte;\n  // private key op\n  if(bt === 0x00 || bt === 0x01) {\n    padByte = (bt === 0x00) ? 0x00 : 0xFF;\n    for(var i = 0; i < padNum; ++i) {\n      eb.putByte(padByte);\n    }\n  } else {\n    // public key op\n    // pad with random non-zero values\n    while(padNum > 0) {\n      var numZeros = 0;\n      var padBytes = forge.random.getBytes(padNum);\n      for(var i = 0; i < padNum; ++i) {\n        padByte = padBytes.charCodeAt(i);\n        if(padByte === 0) {\n          ++numZeros;\n        } else {\n          eb.putByte(padByte);\n        }\n      }\n      padNum = numZeros;\n    }\n  }\n\n  // zero followed by message\n  eb.putByte(0x00);\n  eb.putBytes(m);\n\n  return eb;\n}\n\n/**\n * Decodes a message using PKCS#1 v1.5 padding.\n *\n * @param em the message to decode.\n * @param key the RSA key to use.\n * @param pub true if the key is a public key, false if it is private.\n * @param ml the message length, if specified.\n *\n * @return the decoded bytes.\n */\nfunction _decodePkcs1_v1_5(em, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* It is an error if any of the following conditions occurs:\n\n    1. The encryption block EB cannot be parsed unambiguously.\n    2. The padding string PS consists of fewer than eight octets\n      or is inconsisent with the block type BT.\n    3. The decryption process is a public-key operation and the block\n      type BT is not 00 or 01, or the decryption process is a\n      private-key operation and the block type is not 02.\n   */\n\n  // parse the encryption block\n  var eb = forge.util.createBuffer(em);\n  var first = eb.getByte();\n  var bt = eb.getByte();\n  if(first !== 0x00 ||\n    (pub && bt !== 0x00 && bt !== 0x01) ||\n    (!pub && bt != 0x02) ||\n    (pub && bt === 0x00 && typeof(ml) === 'undefined')) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  var padNum = 0;\n  if(bt === 0x00) {\n    // check all padding bytes for 0x00\n    padNum = k - 3 - ml;\n    for(var i = 0; i < padNum; ++i) {\n      if(eb.getByte() !== 0x00) {\n        throw new Error('Encryption block is invalid.');\n      }\n    }\n  } else if(bt === 0x01) {\n    // find the first byte that isn't 0xFF, should be after all padding\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() !== 0xFF) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  } else if(bt === 0x02) {\n    // look for 0x00 byte\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() === 0x00) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  }\n\n  // zero must be 0x00 and padNum must be (k - 3 - message length)\n  var zero = eb.getByte();\n  if(zero !== 0x00 || padNum !== (k - 3 - eb.length())) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  return eb.getBytes();\n}\n\n/**\n * Runs the key-generation algorithm asynchronously, either in the background\n * via Web Workers, or using the main thread and setImmediate.\n *\n * @param state the key-pair generation state.\n * @param [options] options for key-pair generation:\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2, -1 to use estimated cores minus one).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n * @param callback(err, keypair) called once the operation completes.\n */\nfunction _generateKeyPair(state, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  var opts = {\n    algorithm: {\n      name: options.algorithm || 'PRIMEINC',\n      options: {\n        workers: options.workers || 2,\n        workLoad: options.workLoad || 100,\n        workerScript: options.workerScript\n      }\n    }\n  };\n  if('prng' in options) {\n    opts.prng = options.prng;\n  }\n\n  generate();\n\n  function generate() {\n    // find p and then q (done in series to simplify)\n    getPrime(state.pBits, function(err, num) {\n      if(err) {\n        return callback(err);\n      }\n      state.p = num;\n      if(state.q !== null) {\n        return finish(err, state.q);\n      }\n      getPrime(state.qBits, finish);\n    });\n  }\n\n  function getPrime(bits, callback) {\n    forge.prime.generateProbablePrime(bits, opts, callback);\n  }\n\n  function finish(err, num) {\n    if(err) {\n      return callback(err);\n    }\n\n    // set q\n    state.q = num;\n\n    // ensure p is larger than q (swap them if not)\n    if(state.p.compareTo(state.q) < 0) {\n      var tmp = state.p;\n      state.p = state.q;\n      state.q = tmp;\n    }\n\n    // ensure p is coprime with e\n    if(state.p.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.p = null;\n      generate();\n      return;\n    }\n\n    // ensure q is coprime with e\n    if(state.q.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // compute phi: (p - 1)(q - 1) (Euler's totient function)\n    state.p1 = state.p.subtract(BigInteger.ONE);\n    state.q1 = state.q.subtract(BigInteger.ONE);\n    state.phi = state.p1.multiply(state.q1);\n\n    // ensure e and phi are coprime\n    if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) !== 0) {\n      // phi and e aren't coprime, so generate a new p and q\n      state.p = state.q = null;\n      generate();\n      return;\n    }\n\n    // create n, ensure n is has the right number of bits\n    state.n = state.p.multiply(state.q);\n    if(state.n.bitLength() !== state.bits) {\n      // failed, get new q\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // set keys\n    var d = state.e.modInverse(state.phi);\n    state.keys = {\n      privateKey: pki.rsa.setPrivateKey(\n        state.n, state.e, d, state.p, state.q,\n        d.mod(state.p1), d.mod(state.q1),\n        state.q.modInverse(state.p)),\n      publicKey: pki.rsa.setPublicKey(state.n, state.e)\n    };\n\n    callback(null, state.keys);\n  }\n}\n\n/**\n * Converts a positive BigInteger into 2's-complement big-endian bytes.\n *\n * @param b the big integer to convert.\n *\n * @return the bytes.\n */\nfunction _bnToBytes(b) {\n  // prepend 0x00 if first byte >= 0x80\n  var hex = b.toString(16);\n  if(hex[0] >= '8') {\n    hex = '00' + hex;\n  }\n  var bytes = forge.util.hexToBytes(hex);\n\n  // ensure integer is minimally-encoded\n  if(bytes.length > 1 &&\n    // leading 0x00 for positive integer\n    ((bytes.charCodeAt(0) === 0 &&\n    (bytes.charCodeAt(1) & 0x80) === 0) ||\n    // leading 0xFF for negative integer\n    (bytes.charCodeAt(0) === 0xFF &&\n    (bytes.charCodeAt(1) & 0x80) === 0x80))) {\n    return bytes.substr(1);\n  }\n  return bytes;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction _getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n/**\n * Performs feature detection on the Node crypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectNodeCrypto(fn) {\n  return forge.util.isNodejs && typeof _crypto[fn] === 'function';\n}\n\n/**\n * Performs feature detection on the SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.crypto === 'object' &&\n    typeof util.globalScope.crypto.subtle === 'object' &&\n    typeof util.globalScope.crypto.subtle[fn] === 'function');\n}\n\n/**\n * Performs feature detection on the deprecated Microsoft Internet Explorer\n * outdated SubtleCrypto interface. This function should only be used after\n * checking for the modern, standard SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleMsCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.msCrypto === 'object' &&\n    typeof util.globalScope.msCrypto.subtle === 'object' &&\n    typeof util.globalScope.msCrypto.subtle[fn] === 'function');\n}\n\nfunction _intToUint8Array(x) {\n  var bytes = forge.util.hexToBytes(x.toString(16));\n  var buffer = new Uint8Array(bytes.length);\n  for(var i = 0; i < bytes.length; ++i) {\n    buffer[i] = bytes.charCodeAt(i);\n  }\n  return buffer;\n}\n\nfunction _privateKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error(\n      'Unsupported key algorithm \"' + jwk.kty + '\"; algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPrivateKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e),\n    _base64ToBigInt(jwk.d),\n    _base64ToBigInt(jwk.p),\n    _base64ToBigInt(jwk.q),\n    _base64ToBigInt(jwk.dp),\n    _base64ToBigInt(jwk.dq),\n    _base64ToBigInt(jwk.qi));\n}\n\nfunction _publicKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error('Key algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPublicKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e));\n}\n\nfunction _base64ToBigInt(b64) {\n  return new BigInteger(forge.util.bytesToHex(forge.util.decode64(b64)), 16);\n}\n","/**\n * Secure Hash Algorithm with 160-bit digest (SHA-1) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha1 = module.exports = forge.sha1 = forge.sha1 || {};\nforge.md.sha1 = forge.md.algorithms.sha1 = sha1;\n\n/**\n * Creates a SHA-1 message digest object.\n *\n * @return a message digest object.\n */\nsha1.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-1 state contains five 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(80);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha1',\n    blockLength: 64,\n    digestLength: 20,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476,\n      h4: 0xC3D2E1F0\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-1 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-1 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-1 state with the given byte buffer.\n *\n * @param s the SHA-1 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, e, f, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 80 32-bit words according to SHA-1 algorithm\n    // and for 32-79 using Max Locktyukhin's optimization\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      t = bytes.getInt32();\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 20; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 40; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 3\n    for(; i < 60; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = (b & c) | (d & (b ^ c));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 4\n    for(; i < 80; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n\n    len -= 64;\n  }\n}\n","/**\n * Secure Hash Algorithm with 256-bit digest (SHA-256) implementation.\n *\n * See FIPS 180-2 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha256 = module.exports = forge.sha256 = forge.sha256 || {};\nforge.md.sha256 = forge.md.algorithms.sha256 = sha256;\n\n/**\n * Creates a SHA-256 message digest object.\n *\n * @return a message digest object.\n */\nsha256.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-256 state contains eight 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(64);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha256',\n    blockLength: 64,\n    digestLength: 32,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x6A09E667,\n      h1: 0xBB67AE85,\n      h2: 0x3C6EF372,\n      h3: 0xA54FF53A,\n      h4: 0x510E527F,\n      h5: 0x9B05688C,\n      h6: 0x1F83D9AB,\n      h7: 0x5BE0CD19\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-256 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4,\n      h5: _state.h5,\n      h6: _state.h6,\n      h7: _state.h7\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    rval.putInt32(s2.h5);\n    rval.putInt32(s2.h6);\n    rval.putInt32(s2.h7);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-256 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // create K table for SHA-256\n  _k = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-256 state with the given byte buffer.\n *\n * @param s the SHA-256 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 64 32-bit words according to SHA-256\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32();\n    }\n    for(; i < 64; ++i) {\n      // XOR word 2 words ago rot right 17, rot right 19, shft right 10\n      t1 = w[i - 2];\n      t1 =\n        ((t1 >>> 17) | (t1 << 15)) ^\n        ((t1 >>> 19) | (t1 << 13)) ^\n        (t1 >>> 10);\n      // XOR word 15 words ago rot right 7, rot right 18, shft right 3\n      t2 = w[i - 15];\n      t2 =\n        ((t2 >>> 7) | (t2 << 25)) ^\n        ((t2 >>> 18) | (t2 << 14)) ^\n        (t2 >>> 3);\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32\n      w[i] = (t1 + w[i - 7] + t2 + w[i - 16]) | 0;\n    }\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n    f = s.h5;\n    g = s.h6;\n    h = s.h7;\n\n    // round function\n    for(i = 0; i < 64; ++i) {\n      // Sum1(e)\n      s1 =\n        ((e >>> 6) | (e << 26)) ^\n        ((e >>> 11) | (e << 21)) ^\n        ((e >>> 25) | (e << 7));\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch = g ^ (e & (f ^ g));\n      // Sum0(a)\n      s0 =\n        ((a >>> 2) | (a << 30)) ^\n        ((a >>> 13) | (a << 19)) ^\n        ((a >>> 22) | (a << 10));\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj = (a & b) | (c & (a ^ b));\n\n      // main algorithm\n      t1 = h + s1 + ch + _k[i] + w[i];\n      t2 = s0 + maj;\n      h = g;\n      g = f;\n      f = e;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      e = (d + t1) >>> 0;\n      d = c;\n      c = b;\n      b = a;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      a = (t1 + t2) >>> 0;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n    s.h5 = (s.h5 + f) | 0;\n    s.h6 = (s.h6 + g) | 0;\n    s.h7 = (s.h7 + h) | 0;\n    len -= 64;\n  }\n}\n","/**\n * Secure Hash Algorithm with a 1024-bit block size implementation.\n *\n * This includes: SHA-512, SHA-384, SHA-512/224, and SHA-512/256. For\n * SHA-256 (block size 512 bits), see sha256.js.\n *\n * See FIPS 180-4 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha512 = module.exports = forge.sha512 = forge.sha512 || {};\n\n// SHA-512\nforge.md.sha512 = forge.md.algorithms.sha512 = sha512;\n\n// SHA-384\nvar sha384 = forge.sha384 = forge.sha512.sha384 = forge.sha512.sha384 || {};\nsha384.create = function() {\n  return sha512.create('SHA-384');\n};\nforge.md.sha384 = forge.md.algorithms.sha384 = sha384;\n\n// SHA-512/256\nforge.sha512.sha256 = forge.sha512.sha256 || {\n  create: function() {\n    return sha512.create('SHA-512/256');\n  }\n};\nforge.md['sha512/256'] = forge.md.algorithms['sha512/256'] =\n  forge.sha512.sha256;\n\n// SHA-512/224\nforge.sha512.sha224 = forge.sha512.sha224 || {\n  create: function() {\n    return sha512.create('SHA-512/224');\n  }\n};\nforge.md['sha512/224'] = forge.md.algorithms['sha512/224'] =\n  forge.sha512.sha224;\n\n/**\n * Creates a SHA-2 message digest object.\n *\n * @param algorithm the algorithm to use (SHA-512, SHA-384, SHA-512/224,\n *          SHA-512/256).\n *\n * @return a message digest object.\n */\nsha512.create = function(algorithm) {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  if(typeof algorithm === 'undefined') {\n    algorithm = 'SHA-512';\n  }\n\n  if(!(algorithm in _states)) {\n    throw new Error('Invalid SHA-512 algorithm: ' + algorithm);\n  }\n\n  // SHA-512 state contains eight 64-bit integers (each as two 32-bit ints)\n  var _state = _states[algorithm];\n  var _h = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for 64-bit word storage\n  var _w = new Array(80);\n  for(var wi = 0; wi < 80; ++wi) {\n    _w[wi] = new Array(2);\n  }\n\n  // determine digest length by algorithm name (default)\n  var digestLength = 64;\n  switch(algorithm) {\n    case 'SHA-384':\n      digestLength = 48;\n      break;\n    case 'SHA-512/256':\n      digestLength = 32;\n      break;\n    case 'SHA-512/224':\n      digestLength = 28;\n      break;\n  }\n\n  // message digest object\n  var md = {\n    // SHA-512 => sha512\n    algorithm: algorithm.replace('-', '').toLowerCase(),\n    blockLength: 128,\n    digestLength: digestLength,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 16\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength128 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength128 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _h = new Array(_state.length);\n    for(var i = 0; i < _state.length; ++i) {\n      _h[i] = _state[i].slice(0);\n    }\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_h, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-512 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 896 mod 1024. In other words,\n    the data to be digested must be a multiple of 1024 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 16 bytes (128\n    bits), that means that the last segment of the data must have 112 bytes\n    (896 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 896 mod 1024 because\n    1024 - 128 = 896.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 896 mod 1024, then 1024 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var h = new Array(_h.length);\n    for(var i = 0; i < _h.length; ++i) {\n      h[i] = _h[i].slice(0);\n    }\n    _update(h, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    var hlen;\n    if(algorithm === 'SHA-512') {\n      hlen = h.length;\n    } else if(algorithm === 'SHA-384') {\n      hlen = h.length - 2;\n    } else {\n      hlen = h.length - 4;\n    }\n    for(var i = 0; i < hlen; ++i) {\n      rval.putInt32(h[i][0]);\n      if(i !== hlen - 1 || algorithm !== 'SHA-512/224') {\n        rval.putInt32(h[i][1]);\n      }\n    }\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-512 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n// initial hash states\nvar _states = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 128);\n\n  // create K table for SHA-512\n  _k = [\n    [0x428a2f98, 0xd728ae22], [0x71374491, 0x23ef65cd],\n    [0xb5c0fbcf, 0xec4d3b2f], [0xe9b5dba5, 0x8189dbbc],\n    [0x3956c25b, 0xf348b538], [0x59f111f1, 0xb605d019],\n    [0x923f82a4, 0xaf194f9b], [0xab1c5ed5, 0xda6d8118],\n    [0xd807aa98, 0xa3030242], [0x12835b01, 0x45706fbe],\n    [0x243185be, 0x4ee4b28c], [0x550c7dc3, 0xd5ffb4e2],\n    [0x72be5d74, 0xf27b896f], [0x80deb1fe, 0x3b1696b1],\n    [0x9bdc06a7, 0x25c71235], [0xc19bf174, 0xcf692694],\n    [0xe49b69c1, 0x9ef14ad2], [0xefbe4786, 0x384f25e3],\n    [0x0fc19dc6, 0x8b8cd5b5], [0x240ca1cc, 0x77ac9c65],\n    [0x2de92c6f, 0x592b0275], [0x4a7484aa, 0x6ea6e483],\n    [0x5cb0a9dc, 0xbd41fbd4], [0x76f988da, 0x831153b5],\n    [0x983e5152, 0xee66dfab], [0xa831c66d, 0x2db43210],\n    [0xb00327c8, 0x98fb213f], [0xbf597fc7, 0xbeef0ee4],\n    [0xc6e00bf3, 0x3da88fc2], [0xd5a79147, 0x930aa725],\n    [0x06ca6351, 0xe003826f], [0x14292967, 0x0a0e6e70],\n    [0x27b70a85, 0x46d22ffc], [0x2e1b2138, 0x5c26c926],\n    [0x4d2c6dfc, 0x5ac42aed], [0x53380d13, 0x9d95b3df],\n    [0x650a7354, 0x8baf63de], [0x766a0abb, 0x3c77b2a8],\n    [0x81c2c92e, 0x47edaee6], [0x92722c85, 0x1482353b],\n    [0xa2bfe8a1, 0x4cf10364], [0xa81a664b, 0xbc423001],\n    [0xc24b8b70, 0xd0f89791], [0xc76c51a3, 0x0654be30],\n    [0xd192e819, 0xd6ef5218], [0xd6990624, 0x5565a910],\n    [0xf40e3585, 0x5771202a], [0x106aa070, 0x32bbd1b8],\n    [0x19a4c116, 0xb8d2d0c8], [0x1e376c08, 0x5141ab53],\n    [0x2748774c, 0xdf8eeb99], [0x34b0bcb5, 0xe19b48a8],\n    [0x391c0cb3, 0xc5c95a63], [0x4ed8aa4a, 0xe3418acb],\n    [0x5b9cca4f, 0x7763e373], [0x682e6ff3, 0xd6b2b8a3],\n    [0x748f82ee, 0x5defb2fc], [0x78a5636f, 0x43172f60],\n    [0x84c87814, 0xa1f0ab72], [0x8cc70208, 0x1a6439ec],\n    [0x90befffa, 0x23631e28], [0xa4506ceb, 0xde82bde9],\n    [0xbef9a3f7, 0xb2c67915], [0xc67178f2, 0xe372532b],\n    [0xca273ece, 0xea26619c], [0xd186b8c7, 0x21c0c207],\n    [0xeada7dd6, 0xcde0eb1e], [0xf57d4f7f, 0xee6ed178],\n    [0x06f067aa, 0x72176fba], [0x0a637dc5, 0xa2c898a6],\n    [0x113f9804, 0xbef90dae], [0x1b710b35, 0x131c471b],\n    [0x28db77f5, 0x23047d84], [0x32caab7b, 0x40c72493],\n    [0x3c9ebe0a, 0x15c9bebc], [0x431d67c4, 0x9c100d4c],\n    [0x4cc5d4be, 0xcb3e42b6], [0x597f299c, 0xfc657e2a],\n    [0x5fcb6fab, 0x3ad6faec], [0x6c44198c, 0x4a475817]\n  ];\n\n  // initial hash states\n  _states = {};\n  _states['SHA-512'] = [\n    [0x6a09e667, 0xf3bcc908],\n    [0xbb67ae85, 0x84caa73b],\n    [0x3c6ef372, 0xfe94f82b],\n    [0xa54ff53a, 0x5f1d36f1],\n    [0x510e527f, 0xade682d1],\n    [0x9b05688c, 0x2b3e6c1f],\n    [0x1f83d9ab, 0xfb41bd6b],\n    [0x5be0cd19, 0x137e2179]\n  ];\n  _states['SHA-384'] = [\n    [0xcbbb9d5d, 0xc1059ed8],\n    [0x629a292a, 0x367cd507],\n    [0x9159015a, 0x3070dd17],\n    [0x152fecd8, 0xf70e5939],\n    [0x67332667, 0xffc00b31],\n    [0x8eb44a87, 0x68581511],\n    [0xdb0c2e0d, 0x64f98fa7],\n    [0x47b5481d, 0xbefa4fa4]\n  ];\n  _states['SHA-512/256'] = [\n    [0x22312194, 0xFC2BF72C],\n    [0x9F555FA3, 0xC84C64C2],\n    [0x2393B86B, 0x6F53B151],\n    [0x96387719, 0x5940EABD],\n    [0x96283EE2, 0xA88EFFE3],\n    [0xBE5E1E25, 0x53863992],\n    [0x2B0199FC, 0x2C85B8AA],\n    [0x0EB72DDC, 0x81C52CA2]\n  ];\n  _states['SHA-512/224'] = [\n    [0x8C3D37C8, 0x19544DA2],\n    [0x73E19966, 0x89DCD4D6],\n    [0x1DFAB7AE, 0x32FF9C82],\n    [0x679DD514, 0x582F9FCF],\n    [0x0F6D2B69, 0x7BD44DA8],\n    [0x77E36F73, 0x04C48942],\n    [0x3F9D85A8, 0x6A1D36C8],\n    [0x1112E6AD, 0x91D692A1]\n  ];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-512 state with the given byte buffer.\n *\n * @param s the SHA-512 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (128 byte) chunks\n  var t1_hi, t1_lo;\n  var t2_hi, t2_lo;\n  var s0_hi, s0_lo;\n  var s1_hi, s1_lo;\n  var ch_hi, ch_lo;\n  var maj_hi, maj_lo;\n  var a_hi, a_lo;\n  var b_hi, b_lo;\n  var c_hi, c_lo;\n  var d_hi, d_lo;\n  var e_hi, e_lo;\n  var f_hi, f_lo;\n  var g_hi, g_lo;\n  var h_hi, h_lo;\n  var i, hi, lo, w2, w7, w15, w16;\n  var len = bytes.length();\n  while(len >= 128) {\n    // the w array will be populated with sixteen 64-bit big-endian words\n    // and then extended into 64 64-bit words according to SHA-512\n    for(i = 0; i < 16; ++i) {\n      w[i][0] = bytes.getInt32() >>> 0;\n      w[i][1] = bytes.getInt32() >>> 0;\n    }\n    for(; i < 80; ++i) {\n      // for word 2 words ago: ROTR 19(x) ^ ROTR 61(x) ^ SHR 6(x)\n      w2 = w[i - 2];\n      hi = w2[0];\n      lo = w2[1];\n\n      // high bits\n      t1_hi = (\n        ((hi >>> 19) | (lo << 13)) ^ // ROTR 19\n        ((lo >>> 29) | (hi << 3)) ^ // ROTR 61/(swap + ROTR 29)\n        (hi >>> 6)) >>> 0; // SHR 6\n      // low bits\n      t1_lo = (\n        ((hi << 13) | (lo >>> 19)) ^ // ROTR 19\n        ((lo << 3) | (hi >>> 29)) ^ // ROTR 61/(swap + ROTR 29)\n        ((hi << 26) | (lo >>> 6))) >>> 0; // SHR 6\n\n      // for word 15 words ago: ROTR 1(x) ^ ROTR 8(x) ^ SHR 7(x)\n      w15 = w[i - 15];\n      hi = w15[0];\n      lo = w15[1];\n\n      // high bits\n      t2_hi = (\n        ((hi >>> 1) | (lo << 31)) ^ // ROTR 1\n        ((hi >>> 8) | (lo << 24)) ^ // ROTR 8\n        (hi >>> 7)) >>> 0; // SHR 7\n      // low bits\n      t2_lo = (\n        ((hi << 31) | (lo >>> 1)) ^ // ROTR 1\n        ((hi << 24) | (lo >>> 8)) ^ // ROTR 8\n        ((hi << 25) | (lo >>> 7))) >>> 0; // SHR 7\n\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^64 (carry lo overflow)\n      w7 = w[i - 7];\n      w16 = w[i - 16];\n      lo = (t1_lo + w7[1] + t2_lo + w16[1]);\n      w[i][0] = (t1_hi + w7[0] + t2_hi + w16[0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      w[i][1] = lo >>> 0;\n    }\n\n    // initialize hash value for this chunk\n    a_hi = s[0][0];\n    a_lo = s[0][1];\n    b_hi = s[1][0];\n    b_lo = s[1][1];\n    c_hi = s[2][0];\n    c_lo = s[2][1];\n    d_hi = s[3][0];\n    d_lo = s[3][1];\n    e_hi = s[4][0];\n    e_lo = s[4][1];\n    f_hi = s[5][0];\n    f_lo = s[5][1];\n    g_hi = s[6][0];\n    g_lo = s[6][1];\n    h_hi = s[7][0];\n    h_lo = s[7][1];\n\n    // round function\n    for(i = 0; i < 80; ++i) {\n      // Sum1(e) = ROTR 14(e) ^ ROTR 18(e) ^ ROTR 41(e)\n      s1_hi = (\n        ((e_hi >>> 14) | (e_lo << 18)) ^ // ROTR 14\n        ((e_hi >>> 18) | (e_lo << 14)) ^ // ROTR 18\n        ((e_lo >>> 9) | (e_hi << 23))) >>> 0; // ROTR 41/(swap + ROTR 9)\n      s1_lo = (\n        ((e_hi << 18) | (e_lo >>> 14)) ^ // ROTR 14\n        ((e_hi << 14) | (e_lo >>> 18)) ^ // ROTR 18\n        ((e_lo << 23) | (e_hi >>> 9))) >>> 0; // ROTR 41/(swap + ROTR 9)\n\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch_hi = (g_hi ^ (e_hi & (f_hi ^ g_hi))) >>> 0;\n      ch_lo = (g_lo ^ (e_lo & (f_lo ^ g_lo))) >>> 0;\n\n      // Sum0(a) = ROTR 28(a) ^ ROTR 34(a) ^ ROTR 39(a)\n      s0_hi = (\n        ((a_hi >>> 28) | (a_lo << 4)) ^ // ROTR 28\n        ((a_lo >>> 2) | (a_hi << 30)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo >>> 7) | (a_hi << 25))) >>> 0; // ROTR 39/(swap + ROTR 7)\n      s0_lo = (\n        ((a_hi << 4) | (a_lo >>> 28)) ^ // ROTR 28\n        ((a_lo << 30) | (a_hi >>> 2)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo << 25) | (a_hi >>> 7))) >>> 0; // ROTR 39/(swap + ROTR 7)\n\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj_hi = ((a_hi & b_hi) | (c_hi & (a_hi ^ b_hi))) >>> 0;\n      maj_lo = ((a_lo & b_lo) | (c_lo & (a_lo ^ b_lo))) >>> 0;\n\n      // main algorithm\n      // t1 = (h + s1 + ch + _k[i] + _w[i]) modulo 2^64 (carry lo overflow)\n      lo = (h_lo + s1_lo + ch_lo + _k[i][1] + w[i][1]);\n      t1_hi = (h_hi + s1_hi + ch_hi + _k[i][0] + w[i][0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      t1_lo = lo >>> 0;\n\n      // t2 = s0 + maj modulo 2^64 (carry lo overflow)\n      lo = s0_lo + maj_lo;\n      t2_hi = (s0_hi + maj_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      t2_lo = lo >>> 0;\n\n      h_hi = g_hi;\n      h_lo = g_lo;\n\n      g_hi = f_hi;\n      g_lo = f_lo;\n\n      f_hi = e_hi;\n      f_lo = e_lo;\n\n      // e = (d + t1) modulo 2^64 (carry lo overflow)\n      lo = d_lo + t1_lo;\n      e_hi = (d_hi + t1_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      e_lo = lo >>> 0;\n\n      d_hi = c_hi;\n      d_lo = c_lo;\n\n      c_hi = b_hi;\n      c_lo = b_lo;\n\n      b_hi = a_hi;\n      b_lo = a_lo;\n\n      // a = (t1 + t2) modulo 2^64 (carry lo overflow)\n      lo = t1_lo + t2_lo;\n      a_hi = (t1_hi + t2_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      a_lo = lo >>> 0;\n    }\n\n    // update hash state (additional modulo 2^64)\n    lo = s[0][1] + a_lo;\n    s[0][0] = (s[0][0] + a_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[0][1] = lo >>> 0;\n\n    lo = s[1][1] + b_lo;\n    s[1][0] = (s[1][0] + b_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[1][1] = lo >>> 0;\n\n    lo = s[2][1] + c_lo;\n    s[2][0] = (s[2][0] + c_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[2][1] = lo >>> 0;\n\n    lo = s[3][1] + d_lo;\n    s[3][0] = (s[3][0] + d_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[3][1] = lo >>> 0;\n\n    lo = s[4][1] + e_lo;\n    s[4][0] = (s[4][0] + e_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[4][1] = lo >>> 0;\n\n    lo = s[5][1] + f_lo;\n    s[5][0] = (s[5][0] + f_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[5][1] = lo >>> 0;\n\n    lo = s[6][1] + g_lo;\n    s[6][0] = (s[6][0] + g_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[6][1] = lo >>> 0;\n\n    lo = s[7][1] + h_lo;\n    s[7][0] = (s[7][0] + h_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[7][1] = lo >>> 0;\n\n    len -= 128;\n  }\n}\n","/**\n * Utility functions for web applications.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2018 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nvar baseN = require('./baseN');\n\n/* Utilities API */\nvar util = module.exports = forge.util = forge.util || {};\n\n// define setImmediate and nextTick\n(function() {\n  // use native nextTick (unless we're in webpack)\n  // webpack (or better node-libs-browser polyfill) sets process.browser.\n  // this way we can detect webpack properly\n  if(typeof process !== 'undefined' && process.nextTick && !process.browser) {\n    util.nextTick = process.nextTick;\n    if(typeof setImmediate === 'function') {\n      util.setImmediate = setImmediate;\n    } else {\n      // polyfill setImmediate with nextTick, older versions of node\n      // (those w/o setImmediate) won't totally starve IO\n      util.setImmediate = util.nextTick;\n    }\n    return;\n  }\n\n  // polyfill nextTick with native setImmediate\n  if(typeof setImmediate === 'function') {\n    util.setImmediate = function() { return setImmediate.apply(undefined, arguments); };\n    util.nextTick = function(callback) {\n      return setImmediate(callback);\n    };\n    return;\n  }\n\n  /* Note: A polyfill upgrade pattern is used here to allow combining\n  polyfills. For example, MutationObserver is fast, but blocks UI updates,\n  so it needs to allow UI updates periodically, so it falls back on\n  postMessage or setTimeout. */\n\n  // polyfill with setTimeout\n  util.setImmediate = function(callback) {\n    setTimeout(callback, 0);\n  };\n\n  // upgrade polyfill to use postMessage\n  if(typeof window !== 'undefined' &&\n    typeof window.postMessage === 'function') {\n    var msg = 'forge.setImmediate';\n    var callbacks = [];\n    util.setImmediate = function(callback) {\n      callbacks.push(callback);\n      // only send message when one hasn't been sent in\n      // the current turn of the event loop\n      if(callbacks.length === 1) {\n        window.postMessage(msg, '*');\n      }\n    };\n    function handler(event) {\n      if(event.source === window && event.data === msg) {\n        event.stopPropagation();\n        var copy = callbacks.slice();\n        callbacks.length = 0;\n        copy.forEach(function(callback) {\n          callback();\n        });\n      }\n    }\n    window.addEventListener('message', handler, true);\n  }\n\n  // upgrade polyfill to use MutationObserver\n  if(typeof MutationObserver !== 'undefined') {\n    // polyfill with MutationObserver\n    var now = Date.now();\n    var attr = true;\n    var div = document.createElement('div');\n    var callbacks = [];\n    new MutationObserver(function() {\n      var copy = callbacks.slice();\n      callbacks.length = 0;\n      copy.forEach(function(callback) {\n        callback();\n      });\n    }).observe(div, {attributes: true});\n    var oldSetImmediate = util.setImmediate;\n    util.setImmediate = function(callback) {\n      if(Date.now() - now > 15) {\n        now = Date.now();\n        oldSetImmediate(callback);\n      } else {\n        callbacks.push(callback);\n        // only trigger observer when it hasn't been triggered in\n        // the current turn of the event loop\n        if(callbacks.length === 1) {\n          div.setAttribute('a', attr = !attr);\n        }\n      }\n    };\n  }\n\n  util.nextTick = util.setImmediate;\n})();\n\n// check if running under Node.js\nutil.isNodejs =\n  typeof process !== 'undefined' && process.versions && process.versions.node;\n\n\n// 'self' will also work in Web Workers (instance of WorkerGlobalScope) while\n// it will point to `window` in the main thread.\n// To remain compatible with older browsers, we fall back to 'window' if 'self'\n// is not available.\nutil.globalScope = (function() {\n  if(util.isNodejs) {\n    return global;\n  }\n\n  return typeof self === 'undefined' ? window : self;\n})();\n\n// define isArray\nutil.isArray = Array.isArray || function(x) {\n  return Object.prototype.toString.call(x) === '[object Array]';\n};\n\n// define isArrayBuffer\nutil.isArrayBuffer = function(x) {\n  return typeof ArrayBuffer !== 'undefined' && x instanceof ArrayBuffer;\n};\n\n// define isArrayBufferView\nutil.isArrayBufferView = function(x) {\n  return x && util.isArrayBuffer(x.buffer) && x.byteLength !== undefined;\n};\n\n/**\n * Ensure a bits param is 8, 16, 24, or 32. Used to validate input for\n * algorithms where bit manipulation, JavaScript limitations, and/or algorithm\n * design only allow for byte operations of a limited size.\n *\n * @param n number of bits.\n *\n * Throw Error if n invalid.\n */\nfunction _checkBitsParam(n) {\n  if(!(n === 8 || n === 16 || n === 24 || n === 32)) {\n    throw new Error('Only 8, 16, 24, or 32 bits supported: ' + n);\n  }\n}\n\n// TODO: set ByteBuffer to best available backing\nutil.ByteBuffer = ByteStringBuffer;\n\n/** Buffer w/BinaryString backing */\n\n/**\n * Constructor for a binary string backed byte buffer.\n *\n * @param [b] the bytes to wrap (either encoded as string, one byte per\n *          character, or as an ArrayBuffer or Typed Array).\n */\nfunction ByteStringBuffer(b) {\n  // TODO: update to match DataBuffer API\n\n  // the data in this buffer\n  this.data = '';\n  // the pointer for reading from this buffer\n  this.read = 0;\n\n  if(typeof b === 'string') {\n    this.data = b;\n  } else if(util.isArrayBuffer(b) || util.isArrayBufferView(b)) {\n    if(typeof Buffer !== 'undefined' && b instanceof Buffer) {\n      this.data = b.toString('binary');\n    } else {\n      // convert native buffer to forge buffer\n      // FIXME: support native buffers internally instead\n      var arr = new Uint8Array(b);\n      try {\n        this.data = String.fromCharCode.apply(null, arr);\n      } catch(e) {\n        for(var i = 0; i < arr.length; ++i) {\n          this.putByte(arr[i]);\n        }\n      }\n    }\n  } else if(b instanceof ByteStringBuffer ||\n    (typeof b === 'object' && typeof b.data === 'string' &&\n    typeof b.read === 'number')) {\n    // copy existing buffer\n    this.data = b.data;\n    this.read = b.read;\n  }\n\n  // used for v8 optimization\n  this._constructedStringLength = 0;\n}\nutil.ByteStringBuffer = ByteStringBuffer;\n\n/* Note: This is an optimization for V8-based browsers. When V8 concatenates\n  a string, the strings are only joined logically using a \"cons string\" or\n  \"constructed/concatenated string\". These containers keep references to one\n  another and can result in very large memory usage. For example, if a 2MB\n  string is constructed by concatenating 4 bytes together at a time, the\n  memory usage will be ~44MB; so ~22x increase. The strings are only joined\n  together when an operation requiring their joining takes place, such as\n  substr(). This function is called when adding data to this buffer to ensure\n  these types of strings are periodically joined to reduce the memory\n  footprint. */\nvar _MAX_CONSTRUCTED_STRING_LENGTH = 4096;\nutil.ByteStringBuffer.prototype._optimizeConstructedString = function(x) {\n  this._constructedStringLength += x;\n  if(this._constructedStringLength > _MAX_CONSTRUCTED_STRING_LENGTH) {\n    // this substr() should cause the constructed string to join\n    this.data.substr(0, 1);\n    this._constructedStringLength = 0;\n  }\n};\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.ByteStringBuffer.prototype.length = function() {\n  return this.data.length - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.ByteStringBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putByte = function(b) {\n  return this.putBytes(String.fromCharCode(b));\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.fillWithByte = function(b, n) {\n  b = String.fromCharCode(b);\n  var d = this.data;\n  while(n > 0) {\n    if(n & 1) {\n      d += b;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      b += b;\n    }\n  }\n  this.data = d;\n  this._optimizeConstructedString(n);\n  return this;\n};\n\n/**\n * Puts bytes in this buffer.\n *\n * @param bytes the bytes (as a binary encoded string) to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBytes = function(bytes) {\n  this.data += bytes;\n  this._optimizeConstructedString(bytes.length);\n  return this;\n};\n\n/**\n * Puts a UTF-16 encoded string into this buffer.\n *\n * @param str the string to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putString = function(str) {\n  return this.putBytes(util.encodeUtf8(str));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 24 & 0xFF));\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  var bytes = '';\n  do {\n    n -= 8;\n    bytes += String.fromCharCode((i >> n) & 0xFF);\n  } while(n > 0);\n  return this.putBytes(bytes);\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putSignedInt = function(i, n) {\n  // putInt checks n\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBuffer = function(buffer) {\n  return this.putBytes(buffer.getBytes());\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.getByte = function() {\n  return this.data.charCodeAt(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 8 ^\n    this.data.charCodeAt(this.read + 1));\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 16 ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 24 ^\n    this.data.charCodeAt(this.read + 1) << 16 ^\n    this.data.charCodeAt(this.read + 2) << 8 ^\n    this.data.charCodeAt(this.read + 3));\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16 ^\n    this.data.charCodeAt(this.read + 3) << 24);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by ceil(n/8).\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.charCodeAt(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out as a binary encoded string and clears them from the\n * buffer. Note that the resulting string is binary encoded (in node.js this\n * encoding is referred to as `binary`, it is *not* `utf8`).\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a binary encoded string of bytes.\n */\nutil.ByteStringBuffer.prototype.getBytes = function(count) {\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a binary encoded string of the bytes from this buffer without\n * modifying the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of binary encoded characters.\n */\nutil.ByteStringBuffer.prototype.bytes = function(count) {\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.at = function(i) {\n  return this.data.charCodeAt(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.setAt = function(i, b) {\n  this.data = this.data.substr(0, this.read + i) +\n    String.fromCharCode(b) +\n    this.data.substr(this.read + i + 1);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.ByteStringBuffer.prototype.last = function() {\n  return this.data.charCodeAt(this.data.length - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.ByteStringBuffer.prototype.copy = function() {\n  var c = util.createBuffer(this.data);\n  c.read = this.read;\n  return c;\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    this.data = this.data.slice(this.read);\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.clear = function() {\n  this.data = '';\n  this.read = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.truncate = function(count) {\n  var len = Math.max(0, this.length() - count);\n  this.data = this.data.substr(this.read, len);\n  this.read = 0;\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.ByteStringBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.length; ++i) {\n    var b = this.data.charCodeAt(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a UTF-16 string (standard JavaScript string).\n *\n * @return a UTF-16 string.\n */\nutil.ByteStringBuffer.prototype.toString = function() {\n  return util.decodeUtf8(this.bytes());\n};\n\n/** End Buffer w/BinaryString backing */\n\n/** Buffer w/UInt8Array backing */\n\n/**\n * FIXME: Experimental. Do not use yet.\n *\n * Constructor for an ArrayBuffer-backed byte buffer.\n *\n * The buffer may be constructed from a string, an ArrayBuffer, DataView, or a\n * TypedArray.\n *\n * If a string is given, its encoding should be provided as an option,\n * otherwise it will default to 'binary'. A 'binary' string is encoded such\n * that each character is one byte in length and size.\n *\n * If an ArrayBuffer, DataView, or TypedArray is given, it will be used\n * *directly* without any copying. Note that, if a write to the buffer requires\n * more space, the buffer will allocate a new backing ArrayBuffer to\n * accommodate. The starting read and write offsets for the buffer may be\n * given as options.\n *\n * @param [b] the initial bytes for this buffer.\n * @param options the options to use:\n *          [readOffset] the starting read offset to use (default: 0).\n *          [writeOffset] the starting write offset to use (default: the\n *            length of the first parameter).\n *          [growSize] the minimum amount, in bytes, to grow the buffer by to\n *            accommodate writes (default: 1024).\n *          [encoding] the encoding ('binary', 'utf8', 'utf16', 'hex') for the\n *            first parameter, if it is a string (default: 'binary').\n */\nfunction DataBuffer(b, options) {\n  // default options\n  options = options || {};\n\n  // pointers for read from/write to buffer\n  this.read = options.readOffset || 0;\n  this.growSize = options.growSize || 1024;\n\n  var isArrayBuffer = util.isArrayBuffer(b);\n  var isArrayBufferView = util.isArrayBufferView(b);\n  if(isArrayBuffer || isArrayBufferView) {\n    // use ArrayBuffer directly\n    if(isArrayBuffer) {\n      this.data = new DataView(b);\n    } else {\n      // TODO: adjust read/write offset based on the type of view\n      // or specify that this must be done in the options ... that the\n      // offsets are byte-based\n      this.data = new DataView(b.buffer, b.byteOffset, b.byteLength);\n    }\n    this.write = ('writeOffset' in options ?\n      options.writeOffset : this.data.byteLength);\n    return;\n  }\n\n  // initialize to empty array buffer and add any given bytes using putBytes\n  this.data = new DataView(new ArrayBuffer(0));\n  this.write = 0;\n\n  if(b !== null && b !== undefined) {\n    this.putBytes(b);\n  }\n\n  if('writeOffset' in options) {\n    this.write = options.writeOffset;\n  }\n}\nutil.DataBuffer = DataBuffer;\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.DataBuffer.prototype.length = function() {\n  return this.write - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.DataBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Ensures this buffer has enough empty space to accommodate the given number\n * of bytes. An optional parameter may be given that indicates a minimum\n * amount to grow the buffer if necessary. If the parameter is not given,\n * the buffer will be grown by some previously-specified default amount\n * or heuristic.\n *\n * @param amount the number of bytes to accommodate.\n * @param [growSize] the minimum amount, in bytes, to grow the buffer by if\n *          necessary.\n */\nutil.DataBuffer.prototype.accommodate = function(amount, growSize) {\n  if(this.length() >= amount) {\n    return this;\n  }\n  growSize = Math.max(growSize || this.growSize, amount);\n\n  // grow buffer\n  var src = new Uint8Array(\n    this.data.buffer, this.data.byteOffset, this.data.byteLength);\n  var dst = new Uint8Array(this.length() + growSize);\n  dst.set(src);\n  this.data = new DataView(dst.buffer);\n\n  return this;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putByte = function(b) {\n  this.accommodate(1);\n  this.data.setUint8(this.write++, b);\n  return this;\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.fillWithByte = function(b, n) {\n  this.accommodate(n);\n  for(var i = 0; i < n; ++i) {\n    this.data.setUint8(b);\n  }\n  return this;\n};\n\n/**\n * Puts bytes in this buffer. The bytes may be given as a string, an\n * ArrayBuffer, a DataView, or a TypedArray.\n *\n * @param bytes the bytes to put.\n * @param [encoding] the encoding for the first parameter ('binary', 'utf8',\n *          'utf16', 'hex'), if it is a string (default: 'binary').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBytes = function(bytes, encoding) {\n  if(util.isArrayBufferView(bytes)) {\n    var src = new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    var len = src.byteLength - src.byteOffset;\n    this.accommodate(len);\n    var dst = new Uint8Array(this.data.buffer, this.write);\n    dst.set(src);\n    this.write += len;\n    return this;\n  }\n\n  if(util.isArrayBuffer(bytes)) {\n    var src = new Uint8Array(bytes);\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(this.data.buffer);\n    dst.set(src, this.write);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  // bytes is a util.DataBuffer or equivalent\n  if(bytes instanceof util.DataBuffer ||\n    (typeof bytes === 'object' &&\n    typeof bytes.read === 'number' && typeof bytes.write === 'number' &&\n    util.isArrayBufferView(bytes.data))) {\n    var src = new Uint8Array(bytes.data.byteLength, bytes.read, bytes.length());\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(bytes.data.byteLength, this.write);\n    dst.set(src);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  if(bytes instanceof util.ByteStringBuffer) {\n    // copy binary string and process as the same as a string parameter below\n    bytes = bytes.data;\n    encoding = 'binary';\n  }\n\n  // string conversion\n  encoding = encoding || 'binary';\n  if(typeof bytes === 'string') {\n    var view;\n\n    // decode from string\n    if(encoding === 'hex') {\n      this.accommodate(Math.ceil(bytes.length / 2));\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.hex.decode(bytes, view, this.write);\n      return this;\n    }\n    if(encoding === 'base64') {\n      this.accommodate(Math.ceil(bytes.length / 4) * 3);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.base64.decode(bytes, view, this.write);\n      return this;\n    }\n\n    // encode text as UTF-8 bytes\n    if(encoding === 'utf8') {\n      // encode as UTF-8 then decode string as raw binary\n      bytes = util.encodeUtf8(bytes);\n      encoding = 'binary';\n    }\n\n    // decode string as raw binary\n    if(encoding === 'binary' || encoding === 'raw') {\n      // one byte per character\n      this.accommodate(bytes.length);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.raw.decode(view);\n      return this;\n    }\n\n    // encode text as UTF-16 bytes\n    if(encoding === 'utf16') {\n      // two bytes per character\n      this.accommodate(bytes.length * 2);\n      view = new Uint16Array(this.data.buffer, this.write);\n      this.write += util.text.utf16.encode(view);\n      return this;\n    }\n\n    throw new Error('Invalid encoding: ' + encoding);\n  }\n\n  throw Error('Invalid parameter: ' + bytes);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBuffer = function(buffer) {\n  this.putBytes(buffer);\n  buffer.clear();\n  return this;\n};\n\n/**\n * Puts a string into this buffer.\n *\n * @param str the string to put.\n * @param [encoding] the encoding for the string (default: 'utf16').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putString = function(str) {\n  return this.putBytes(str, 'utf16');\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16 = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24 = function(i) {\n  this.accommodate(3);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32 = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16Le = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i, true);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24Le = function(i) {\n  this.accommodate(3);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF, true);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32Le = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i, true);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  do {\n    n -= 8;\n    this.data.setInt8(this.write++, (i >> n) & 0xFF);\n  } while(n > 0);\n  return this;\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putSignedInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.getByte = function() {\n  return this.data.getInt8(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16 = function() {\n  var rval = this.data.getInt16(this.read);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.getInt16(this.read) << 8 ^\n    this.data.getInt8(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32 = function() {\n  var rval = this.data.getInt32(this.read);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16Le = function() {\n  var rval = this.data.getInt16(this.read, true);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.getInt8(this.read) ^\n    this.data.getInt16(this.read + 1, true) << 8);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32Le = function() {\n  var rval = this.data.getInt32(this.read, true);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.getInt8(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out as a binary encoded string and clears them from the\n * buffer.\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a binary encoded string of bytes.\n */\nutil.DataBuffer.prototype.getBytes = function(count) {\n  // TODO: deprecate this method, it is poorly named and\n  // this.toString('binary') replaces it\n  // add a toTypedArray()/toArrayBuffer() function\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a binary encoded string of the bytes from this buffer without\n * modifying the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of binary encoded characters.\n */\nutil.DataBuffer.prototype.bytes = function(count) {\n  // TODO: deprecate this method, it is poorly named, add \"getString()\"\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.at = function(i) {\n  return this.data.getUint8(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.setAt = function(i, b) {\n  this.data.setUint8(i, b);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.DataBuffer.prototype.last = function() {\n  return this.data.getUint8(this.write - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.DataBuffer.prototype.copy = function() {\n  return new util.DataBuffer(this);\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    var src = new Uint8Array(this.data.buffer, this.read);\n    var dst = new Uint8Array(src.byteLength);\n    dst.set(src);\n    this.data = new DataView(dst);\n    this.write -= this.read;\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.clear = function() {\n  this.data = new DataView(new ArrayBuffer(0));\n  this.read = this.write = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.truncate = function(count) {\n  this.write = Math.max(0, this.length() - count);\n  this.read = Math.min(this.read, this.write);\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.DataBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.byteLength; ++i) {\n    var b = this.data.getUint8(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a string, using the given encoding. If no\n * encoding is given, 'utf8' (UTF-8) is used.\n *\n * @param [encoding] the encoding to use: 'binary', 'utf8', 'utf16', 'hex',\n *          'base64' (default: 'utf8').\n *\n * @return a string representation of the bytes in this buffer.\n */\nutil.DataBuffer.prototype.toString = function(encoding) {\n  var view = new Uint8Array(this.data, this.read, this.length());\n  encoding = encoding || 'utf8';\n\n  // encode to string\n  if(encoding === 'binary' || encoding === 'raw') {\n    return util.binary.raw.encode(view);\n  }\n  if(encoding === 'hex') {\n    return util.binary.hex.encode(view);\n  }\n  if(encoding === 'base64') {\n    return util.binary.base64.encode(view);\n  }\n\n  // decode to text\n  if(encoding === 'utf8') {\n    return util.text.utf8.decode(view);\n  }\n  if(encoding === 'utf16') {\n    return util.text.utf16.decode(view);\n  }\n\n  throw new Error('Invalid encoding: ' + encoding);\n};\n\n/** End Buffer w/UInt8Array backing */\n\n/**\n * Creates a buffer that stores bytes. A value may be given to populate the\n * buffer with data. This value can either be string of encoded bytes or a\n * regular string of characters. When passing a string of binary encoded\n * bytes, the encoding `raw` should be given. This is also the default. When\n * passing a string of characters, the encoding `utf8` should be given.\n *\n * @param [input] a string with encoded bytes to store in the buffer.\n * @param [encoding] (default: 'raw', other: 'utf8').\n */\nutil.createBuffer = function(input, encoding) {\n  // TODO: deprecate, use new ByteBuffer() instead\n  encoding = encoding || 'raw';\n  if(input !== undefined && encoding === 'utf8') {\n    input = util.encodeUtf8(input);\n  }\n  return new util.ByteBuffer(input);\n};\n\n/**\n * Fills a string with a particular value. If you want the string to be a byte\n * string, pass in String.fromCharCode(theByte).\n *\n * @param c the character to fill the string with, use String.fromCharCode\n *          to fill the string with a byte value.\n * @param n the number of characters of value c to fill with.\n *\n * @return the filled string.\n */\nutil.fillString = function(c, n) {\n  var s = '';\n  while(n > 0) {\n    if(n & 1) {\n      s += c;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      c += c;\n    }\n  }\n  return s;\n};\n\n/**\n * Performs a per byte XOR between two byte strings and returns the result as a\n * string of bytes.\n *\n * @param s1 first string of bytes.\n * @param s2 second string of bytes.\n * @param n the number of bytes to XOR.\n *\n * @return the XOR'd result.\n */\nutil.xorBytes = function(s1, s2, n) {\n  var s3 = '';\n  var b = '';\n  var t = '';\n  var i = 0;\n  var c = 0;\n  for(; n > 0; --n, ++i) {\n    b = s1.charCodeAt(i) ^ s2.charCodeAt(i);\n    if(c >= 10) {\n      s3 += t;\n      t = '';\n      c = 0;\n    }\n    t += String.fromCharCode(b);\n    ++c;\n  }\n  s3 += t;\n  return s3;\n};\n\n/**\n * Converts a hex string into a 'binary' encoded string of bytes.\n *\n * @param hex the hexadecimal string to convert.\n *\n * @return the binary-encoded string of bytes.\n */\nutil.hexToBytes = function(hex) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.decode instead.\"\n  var rval = '';\n  var i = 0;\n  if(hex.length & 1 == 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    rval += String.fromCharCode(parseInt(hex[0], 16));\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    rval += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n  }\n  return rval;\n};\n\n/**\n * Converts a 'binary' encoded string of bytes to hex.\n *\n * @param bytes the byte string to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.bytesToHex = function(bytes) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.encode instead.\"\n  return util.createBuffer(bytes).toHex();\n};\n\n/**\n * Converts an 32-bit integer to 4-big-endian byte string.\n *\n * @param i the integer.\n *\n * @return the byte string.\n */\nutil.int32ToBytes = function(i) {\n  return (\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n// base64 characters, reverse mapping\nvar _base64 =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nvar _base64Idx = [\n/*43 -43 = 0*/\n/*'+',  1,  2,  3,'/' */\n   62, -1, -1, -1, 63,\n\n/*'0','1','2','3','4','5','6','7','8','9' */\n   52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\n\n/*15, 16, 17,'=', 19, 20, 21 */\n  -1, -1, -1, 64, -1, -1, -1,\n\n/*65 - 43 = 22*/\n/*'A','B','C','D','E','F','G','H','I','J','K','L','M', */\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n\n/*'N','O','P','Q','R','S','T','U','V','W','X','Y','Z' */\n   13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\n\n/*91 - 43 = 48 */\n/*48, 49, 50, 51, 52, 53 */\n  -1, -1, -1, -1, -1, -1,\n\n/*97 - 43 = 54*/\n/*'a','b','c','d','e','f','g','h','i','j','k','l','m' */\n   26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n\n/*'n','o','p','q','r','s','t','u','v','w','x','y','z' */\n   39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51\n];\n\n// base58 characters (Bitcoin alphabet)\nvar _base58 = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n\n/**\n * Base64 encodes a 'binary' encoded string of bytes.\n *\n * @param input the binary encoded string of bytes to base64-encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output.\n */\nutil.encode64 = function(input, maxline) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.encode instead.\"\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.length) {\n    chr1 = input.charCodeAt(i++);\n    chr2 = input.charCodeAt(i++);\n    chr3 = input.charCodeAt(i++);\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Base64 decodes a string into a 'binary' encoded string of bytes.\n *\n * @param input the base64-encoded input.\n *\n * @return the binary encoded string.\n */\nutil.decode64 = function(input) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.decode instead.\"\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  var output = '';\n  var enc1, enc2, enc3, enc4;\n  var i = 0;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    output += String.fromCharCode((enc1 << 2) | (enc2 >> 4));\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      output += String.fromCharCode(((enc2 & 15) << 4) | (enc3 >> 2));\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        output += String.fromCharCode(((enc3 & 3) << 6) | enc4);\n      }\n    }\n  }\n\n  return output;\n};\n\n/**\n * Encodes the given string of characters (a standard JavaScript\n * string) as a binary encoded string where the bytes represent\n * a UTF-8 encoded string of characters. Non-ASCII characters will be\n * encoded as multiple bytes according to UTF-8.\n *\n * @param str a standard string of characters to encode.\n *\n * @return the binary encoded string.\n */\nutil.encodeUtf8 = function(str) {\n  return unescape(encodeURIComponent(str));\n};\n\n/**\n * Decodes a binary encoded string that contains bytes that\n * represent a UTF-8 encoded string of characters -- into a\n * string of characters (a standard JavaScript string).\n *\n * @param str the binary encoded string to decode.\n *\n * @return the resulting standard string of characters.\n */\nutil.decodeUtf8 = function(str) {\n  return decodeURIComponent(escape(str));\n};\n\n// binary encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.binary = {\n  raw: {},\n  hex: {},\n  base64: {},\n  base58: {},\n  baseN : {\n    encode: baseN.encode,\n    decode: baseN.decode\n  }\n};\n\n/**\n * Encodes a Uint8Array as a binary-encoded string. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param bytes the Uint8Array to encode.\n *\n * @return the binary-encoded string.\n */\nutil.binary.raw.encode = function(bytes) {\n  return String.fromCharCode.apply(null, bytes);\n};\n\n/**\n * Decodes a binary-encoded string to a Uint8Array. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param str the binary-encoded string to decode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.raw.decode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Encodes a 'binary' string, ArrayBuffer, DataView, TypedArray, or\n * ByteBuffer as a string of hexadecimal characters.\n *\n * @param bytes the bytes to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.binary.hex.encode = util.bytesToHex;\n\n/**\n * Decodes a hex-encoded string to a Uint8Array.\n *\n * @param hex the hexadecimal string to convert.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.hex.decode = function(hex, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(hex.length / 2));\n  }\n  offset = offset || 0;\n  var i = 0, j = offset;\n  if(hex.length & 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    out[j++] = parseInt(hex[0], 16);\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    out[j++] = parseInt(hex.substr(i, 2), 16);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Base64-encodes a Uint8Array.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output string.\n */\nutil.binary.base64.encode = function(input, maxline) {\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.byteLength) {\n    chr1 = input[i++];\n    chr2 = input[i++];\n    chr3 = input[i++];\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Decodes a base64-encoded string to a Uint8Array.\n *\n * @param input the base64-encoded input string.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.base64.decode = function(input, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(input.length / 4) * 3);\n  }\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  offset = offset || 0;\n  var enc1, enc2, enc3, enc4;\n  var i = 0, j = offset;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    out[j++] = (enc1 << 2) | (enc2 >> 4);\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      out[j++] = ((enc2 & 15) << 4) | (enc3 >> 2);\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        out[j++] = ((enc3 & 3) << 6) | enc4;\n      }\n    }\n  }\n\n  // make sure result is the exact decoded length\n  return output ? (j - offset) : out.subarray(0, j);\n};\n\n// add support for base58 encoding/decoding with Bitcoin alphabet\nutil.binary.base58.encode = function(input, maxline) {\n  return util.binary.baseN.encode(input, _base58, maxline);\n};\nutil.binary.base58.decode = function(input, maxline) {\n  return util.binary.baseN.decode(input, _base58, maxline);\n};\n\n// text encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.text = {\n  utf8: {},\n  utf16: {}\n};\n\n/**\n * Encodes the given string as UTF-8 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf8.encode = function(str, output, offset) {\n  str = util.encodeUtf8(str);\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-8 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf8.decode = function(bytes) {\n  return util.decodeUtf8(String.fromCharCode.apply(null, bytes));\n};\n\n/**\n * Encodes the given string as UTF-16 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf16.encode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length * 2);\n  }\n  var view = new Uint16Array(out.buffer);\n  offset = offset || 0;\n  var j = offset;\n  var k = offset;\n  for(var i = 0; i < str.length; ++i) {\n    view[k++] = str.charCodeAt(i);\n    j += 2;\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-16 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf16.decode = function(bytes) {\n  return String.fromCharCode.apply(null, new Uint16Array(bytes.buffer));\n};\n\n/**\n * Deflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true to return only raw deflate data, false to include zlib\n *          header and trailer.\n *\n * @return the deflated data as a string.\n */\nutil.deflate = function(api, bytes, raw) {\n  bytes = util.decode64(api.deflate(util.encode64(bytes)).rval);\n\n  // strip zlib header and trailer if necessary\n  if(raw) {\n    // zlib header is 2 bytes (CMF,FLG) where FLG indicates that\n    // there is a 4-byte DICT (alder-32) block before the data if\n    // its 5th bit is set\n    var start = 2;\n    var flg = bytes.charCodeAt(1);\n    if(flg & 0x20) {\n      start = 6;\n    }\n    // zlib trailer is 4 bytes of adler-32\n    bytes = bytes.substring(start, bytes.length - 4);\n  }\n\n  return bytes;\n};\n\n/**\n * Inflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true if the incoming data has no zlib header or trailer and is\n *          raw DEFLATE data.\n *\n * @return the inflated data as a string, null on error.\n */\nutil.inflate = function(api, bytes, raw) {\n  // TODO: add zlib header and trailer if necessary/possible\n  var rval = api.inflate(util.encode64(bytes)).rval;\n  return (rval === null) ? null : util.decode64(rval);\n};\n\n/**\n * Sets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param obj the storage object, null to remove.\n */\nvar _setStorageObject = function(api, id, obj) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  var rval;\n  if(obj === null) {\n    rval = api.removeItem(id);\n  } else {\n    // json-encode and base64-encode object\n    obj = util.encode64(JSON.stringify(obj));\n    rval = api.setItem(id, obj);\n  }\n\n  // handle potential flash error\n  if(typeof(rval) !== 'undefined' && rval.rval !== true) {\n    var error = new Error(rval.error.message);\n    error.id = rval.error.id;\n    error.name = rval.error.name;\n    throw error;\n  }\n};\n\n/**\n * Gets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n *\n * @return the storage object entry or null if none exists.\n */\nvar _getStorageObject = function(api, id) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  // get the existing entry\n  var rval = api.getItem(id);\n\n  /* Note: We check api.init because we can't do (api == localStorage)\n    on IE because of \"Class doesn't support Automation\" exception. Only\n    the flash api has an init method so this works too, but we need a\n    better solution in the future. */\n\n  // flash returns item wrapped in an object, handle special case\n  if(api.init) {\n    if(rval.rval === null) {\n      if(rval.error) {\n        var error = new Error(rval.error.message);\n        error.id = rval.error.id;\n        error.name = rval.error.name;\n        throw error;\n      }\n      // no error, but also no item\n      rval = null;\n    } else {\n      rval = rval.rval;\n    }\n  }\n\n  // handle decoding\n  if(rval !== null) {\n    // base64-decode and json-decode data\n    rval = JSON.parse(util.decode64(rval));\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item in local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n */\nvar _setItem = function(api, id, key, data) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj === null) {\n    // create a new storage object\n    obj = {};\n  }\n  // update key\n  obj[key] = data;\n\n  // set storage object\n  _setStorageObject(api, id, obj);\n};\n\n/**\n * Gets an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n *\n * @return the item.\n */\nvar _getItem = function(api, id, key) {\n  // get storage object\n  var rval = _getStorageObject(api, id);\n  if(rval !== null) {\n    // return data at key\n    rval = (key in rval) ? rval[key] : null;\n  }\n\n  return rval;\n};\n\n/**\n * Removes an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n */\nvar _removeItem = function(api, id, key) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj !== null && key in obj) {\n    // remove key\n    delete obj[key];\n\n    // see if entry has no keys remaining\n    var empty = true;\n    for(var prop in obj) {\n      empty = false;\n      break;\n    }\n    if(empty) {\n      // remove entry entirely if no keys are left\n      obj = null;\n    }\n\n    // set storage object\n    _setStorageObject(api, id, obj);\n  }\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n */\nvar _clearItems = function(api, id) {\n  _setStorageObject(api, id, null);\n};\n\n/**\n * Calls a storage function.\n *\n * @param func the function to call.\n * @param args the arguments for the function.\n * @param location the location argument.\n *\n * @return the return value from the function.\n */\nvar _callStorageFunction = function(func, args, location) {\n  var rval = null;\n\n  // default storage types\n  if(typeof(location) === 'undefined') {\n    location = ['web', 'flash'];\n  }\n\n  // apply storage types in order of preference\n  var type;\n  var done = false;\n  var exception = null;\n  for(var idx in location) {\n    type = location[idx];\n    try {\n      if(type === 'flash' || type === 'both') {\n        if(args[0] === null) {\n          throw new Error('Flash local storage not available.');\n        }\n        rval = func.apply(this, args);\n        done = (type === 'flash');\n      }\n      if(type === 'web' || type === 'both') {\n        args[0] = localStorage;\n        rval = func.apply(this, args);\n        done = true;\n      }\n    } catch(ex) {\n      exception = ex;\n    }\n    if(done) {\n      break;\n    }\n  }\n\n  if(!done) {\n    throw exception;\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item on local disk.\n *\n * The available types of local storage include 'flash', 'web', and 'both'.\n *\n * The type 'flash' refers to flash local storage (SharedObject). In order\n * to use flash local storage, the 'api' parameter must be valid. The type\n * 'web' refers to WebStorage, if supported by the browser. The type 'both'\n * refers to storing using both 'flash' and 'web', not just one or the\n * other.\n *\n * The location array should list the storage types to use in order of\n * preference:\n *\n * ['flash']: flash only storage\n * ['web']: web only storage\n * ['both']: try to store in both\n * ['flash','web']: store in flash first, but if not available, 'web'\n * ['web','flash']: store in web first, but if not available, 'flash'\n *\n * The location array defaults to: ['web', 'flash']\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n * @param location an array with the preferred types of storage to use.\n */\nutil.setItem = function(api, id, key, data, location) {\n  _callStorageFunction(_setItem, arguments, location);\n};\n\n/**\n * Gets an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n *\n * @return the item.\n */\nutil.getItem = function(api, id, key, location) {\n  return _callStorageFunction(_getItem, arguments, location);\n};\n\n/**\n * Removes an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n */\nutil.removeItem = function(api, id, key, location) {\n  _callStorageFunction(_removeItem, arguments, location);\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface if flash is available.\n * @param id the storage ID to use.\n * @param location an array with the preferred types of storage to use.\n */\nutil.clearItems = function(api, id, location) {\n  _callStorageFunction(_clearItems, arguments, location);\n};\n\n/**\n * Check if an object is empty.\n *\n * Taken from:\n * http://stackoverflow.com/questions/679915/how-do-i-test-for-an-empty-javascript-object-from-json/679937#679937\n *\n * @param object the object to check.\n */\nutil.isEmpty = function(obj) {\n  for(var prop in obj) {\n    if(obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Format with simple printf-style interpolation.\n *\n * %%: literal '%'\n * %s,%o: convert next argument into a string.\n *\n * @param format the string to format.\n * @param ... arguments to interpolate into the format string.\n */\nutil.format = function(format) {\n  var re = /%./g;\n  // current match\n  var match;\n  // current part\n  var part;\n  // current arg index\n  var argi = 0;\n  // collected parts to recombine later\n  var parts = [];\n  // last index found\n  var last = 0;\n  // loop while matches remain\n  while((match = re.exec(format))) {\n    part = format.substring(last, re.lastIndex - 2);\n    // don't add empty strings (ie, parts between %s%s)\n    if(part.length > 0) {\n      parts.push(part);\n    }\n    last = re.lastIndex;\n    // switch on % code\n    var code = match[0][1];\n    switch(code) {\n    case 's':\n    case 'o':\n      // check if enough arguments were given\n      if(argi < arguments.length) {\n        parts.push(arguments[argi++ + 1]);\n      } else {\n        parts.push('<?>');\n      }\n      break;\n    // FIXME: do proper formating for numbers, etc\n    //case 'f':\n    //case 'd':\n    case '%':\n      parts.push('%');\n      break;\n    default:\n      parts.push('<%' + code + '?>');\n    }\n  }\n  // add trailing part of format string\n  parts.push(format.substring(last));\n  return parts.join('');\n};\n\n/**\n * Formats a number.\n *\n * http://snipplr.com/view/5945/javascript-numberformat--ported-from-php/\n */\nutil.formatNumber = function(number, decimals, dec_point, thousands_sep) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +     bugfix by: Michael White (http://crestidg.com)\n  // +     bugfix by: Benjamin Lupton\n  // +     bugfix by: Allan Jensen (http://www.winternet.no)\n  // +    revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // *     example 1: number_format(1234.5678, 2, '.', '');\n  // *     returns 1: 1234.57\n\n  var n = number, c = isNaN(decimals = Math.abs(decimals)) ? 2 : decimals;\n  var d = dec_point === undefined ? ',' : dec_point;\n  var t = thousands_sep === undefined ?\n   '.' : thousands_sep, s = n < 0 ? '-' : '';\n  var i = parseInt((n = Math.abs(+n || 0).toFixed(c)), 10) + '';\n  var j = (i.length > 3) ? i.length % 3 : 0;\n  return s + (j ? i.substr(0, j) + t : '') +\n    i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + t) +\n    (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '');\n};\n\n/**\n * Formats a byte size.\n *\n * http://snipplr.com/view/5949/format-humanize-file-byte-size-presentation-in-javascript/\n */\nutil.formatSize = function(size) {\n  if(size >= 1073741824) {\n    size = util.formatNumber(size / 1073741824, 2, '.', '') + ' GiB';\n  } else if(size >= 1048576) {\n    size = util.formatNumber(size / 1048576, 2, '.', '') + ' MiB';\n  } else if(size >= 1024) {\n    size = util.formatNumber(size / 1024, 0) + ' KiB';\n  } else {\n    size = util.formatNumber(size, 0) + ' bytes';\n  }\n  return size;\n};\n\n/**\n * Converts an IPv4 or IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv4 or IPv6 address to convert.\n *\n * @return the 4-byte IPv6 or 16-byte IPv6 address or null if the address can't\n *         be parsed.\n */\nutil.bytesFromIP = function(ip) {\n  if(ip.indexOf('.') !== -1) {\n    return util.bytesFromIPv4(ip);\n  }\n  if(ip.indexOf(':') !== -1) {\n    return util.bytesFromIPv6(ip);\n  }\n  return null;\n};\n\n/**\n * Converts an IPv4 string representation into bytes (in network order).\n *\n * @param ip the IPv4 address to convert.\n *\n * @return the 4-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv4 = function(ip) {\n  ip = ip.split('.');\n  if(ip.length !== 4) {\n    return null;\n  }\n  var b = util.createBuffer();\n  for(var i = 0; i < ip.length; ++i) {\n    var num = parseInt(ip[i], 10);\n    if(isNaN(num)) {\n      return null;\n    }\n    b.putByte(num);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts an IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv6 address to convert.\n *\n * @return the 16-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv6 = function(ip) {\n  var blanks = 0;\n  ip = ip.split(':').filter(function(e) {\n    if(e.length === 0) ++blanks;\n    return true;\n  });\n  var zeros = (8 - ip.length + blanks) * 2;\n  var b = util.createBuffer();\n  for(var i = 0; i < 8; ++i) {\n    if(!ip[i] || ip[i].length === 0) {\n      b.fillWithByte(0, zeros);\n      zeros = 0;\n      continue;\n    }\n    var bytes = util.hexToBytes(ip[i]);\n    if(bytes.length < 2) {\n      b.putByte(0);\n    }\n    b.putBytes(bytes);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation or 16-bytes into\n * an IPv6 string representation. The bytes must be in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 or IPv6 string representation if 4 or 16 bytes,\n *         respectively, are given, otherwise null.\n */\nutil.bytesToIP = function(bytes) {\n  if(bytes.length === 4) {\n    return util.bytesToIPv4(bytes);\n  }\n  if(bytes.length === 16) {\n    return util.bytesToIPv6(bytes);\n  }\n  return null;\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv4 = function(bytes) {\n  if(bytes.length !== 4) {\n    return null;\n  }\n  var ip = [];\n  for(var i = 0; i < bytes.length; ++i) {\n    ip.push(bytes.charCodeAt(i));\n  }\n  return ip.join('.');\n};\n\n/**\n * Converts 16-bytes into an IPv16 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv16 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv6 = function(bytes) {\n  if(bytes.length !== 16) {\n    return null;\n  }\n  var ip = [];\n  var zeroGroups = [];\n  var zeroMaxGroup = 0;\n  for(var i = 0; i < bytes.length; i += 2) {\n    var hex = util.bytesToHex(bytes[i] + bytes[i + 1]);\n    // canonicalize zero representation\n    while(hex[0] === '0' && hex !== '0') {\n      hex = hex.substr(1);\n    }\n    if(hex === '0') {\n      var last = zeroGroups[zeroGroups.length - 1];\n      var idx = ip.length;\n      if(!last || idx !== last.end + 1) {\n        zeroGroups.push({start: idx, end: idx});\n      } else {\n        last.end = idx;\n        if((last.end - last.start) >\n          (zeroGroups[zeroMaxGroup].end - zeroGroups[zeroMaxGroup].start)) {\n          zeroMaxGroup = zeroGroups.length - 1;\n        }\n      }\n    }\n    ip.push(hex);\n  }\n  if(zeroGroups.length > 0) {\n    var group = zeroGroups[zeroMaxGroup];\n    // only shorten group of length > 0\n    if(group.end - group.start > 0) {\n      ip.splice(group.start, group.end - group.start + 1, '');\n      if(group.start === 0) {\n        ip.unshift('');\n      }\n      if(group.end === 7) {\n        ip.push('');\n      }\n    }\n  }\n  return ip.join(':');\n};\n\n/**\n * Estimates the number of processes that can be run concurrently. If\n * creating Web Workers, keep in mind that the main JavaScript process needs\n * its own core.\n *\n * @param options the options to use:\n *          update true to force an update (not use the cached value).\n * @param callback(err, max) called once the operation completes.\n */\nutil.estimateCores = function(options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  if('cores' in util && !options.update) {\n    return callback(null, util.cores);\n  }\n  if(typeof navigator !== 'undefined' &&\n    'hardwareConcurrency' in navigator &&\n    navigator.hardwareConcurrency > 0) {\n    util.cores = navigator.hardwareConcurrency;\n    return callback(null, util.cores);\n  }\n  if(typeof Worker === 'undefined') {\n    // workers not available\n    util.cores = 1;\n    return callback(null, util.cores);\n  }\n  if(typeof Blob === 'undefined') {\n    // can't estimate, default to 2\n    util.cores = 2;\n    return callback(null, util.cores);\n  }\n\n  // create worker concurrency estimation code as blob\n  var blobUrl = URL.createObjectURL(new Blob(['(',\n    function() {\n      self.addEventListener('message', function(e) {\n        // run worker for 4 ms\n        var st = Date.now();\n        var et = st + 4;\n        while(Date.now() < et);\n        self.postMessage({st: st, et: et});\n      });\n    }.toString(),\n  ')()'], {type: 'application/javascript'}));\n\n  // take 5 samples using 16 workers\n  sample([], 5, 16);\n\n  function sample(max, samples, numWorkers) {\n    if(samples === 0) {\n      // get overlap average\n      var avg = Math.floor(max.reduce(function(avg, x) {\n        return avg + x;\n      }, 0) / max.length);\n      util.cores = Math.max(1, avg);\n      URL.revokeObjectURL(blobUrl);\n      return callback(null, util.cores);\n    }\n    map(numWorkers, function(err, results) {\n      max.push(reduce(numWorkers, results));\n      sample(max, samples - 1, numWorkers);\n    });\n  }\n\n  function map(numWorkers, callback) {\n    var workers = [];\n    var results = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      var worker = new Worker(blobUrl);\n      worker.addEventListener('message', function(e) {\n        results.push(e.data);\n        if(results.length === numWorkers) {\n          for(var i = 0; i < numWorkers; ++i) {\n            workers[i].terminate();\n          }\n          callback(null, results);\n        }\n      });\n      workers.push(worker);\n    }\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].postMessage(i);\n    }\n  }\n\n  function reduce(numWorkers, results) {\n    // find overlapping time windows\n    var overlaps = [];\n    for(var n = 0; n < numWorkers; ++n) {\n      var r1 = results[n];\n      var overlap = overlaps[n] = [];\n      for(var i = 0; i < numWorkers; ++i) {\n        if(n === i) {\n          continue;\n        }\n        var r2 = results[i];\n        if((r1.st > r2.st && r1.st < r2.et) ||\n          (r2.st > r1.st && r2.st < r1.et)) {\n          overlap.push(i);\n        }\n      }\n    }\n    // get maximum overlaps ... don't include overlapping worker itself\n    // as the main JS process was also being scheduled during the work and\n    // would have to be subtracted from the estimate anyway\n    return overlaps.reduce(function(max, overlap) {\n      return Math.max(max, overlap.length);\n    }, 0);\n  }\n};\n","/**\n * Javascript implementation of X.509 and related components (such as\n * Certification Signing Requests) of a Public Key Infrastructure.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The ASN.1 representation of an X.509v3 certificate is as follows\n * (see RFC 2459):\n *\n * Certificate ::= SEQUENCE {\n *   tbsCertificate       TBSCertificate,\n *   signatureAlgorithm   AlgorithmIdentifier,\n *   signatureValue       BIT STRING\n * }\n *\n * TBSCertificate ::= SEQUENCE {\n *   version         [0]  EXPLICIT Version DEFAULT v1,\n *   serialNumber         CertificateSerialNumber,\n *   signature            AlgorithmIdentifier,\n *   issuer               Name,\n *   validity             Validity,\n *   subject              Name,\n *   subjectPublicKeyInfo SubjectPublicKeyInfo,\n *   issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   extensions      [3]  EXPLICIT Extensions OPTIONAL\n *                        -- If present, version shall be v3\n * }\n *\n * Version ::= INTEGER  { v1(0), v2(1), v3(2) }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * Name ::= CHOICE {\n *   // only one possible choice for now\n *   RDNSequence\n * }\n *\n * RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n *\n * RelativeDistinguishedName ::= SET OF AttributeTypeAndValue\n *\n * AttributeTypeAndValue ::= SEQUENCE {\n *   type     AttributeType,\n *   value    AttributeValue\n * }\n * AttributeType ::= OBJECT IDENTIFIER\n * AttributeValue ::= ANY DEFINED BY AttributeType\n *\n * Validity ::= SEQUENCE {\n *   notBefore      Time,\n *   notAfter       Time\n * }\n *\n * Time ::= CHOICE {\n *   utcTime        UTCTime,\n *   generalTime    GeneralizedTime\n * }\n *\n * UniqueIdentifier ::= BIT STRING\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm            AlgorithmIdentifier,\n *   subjectPublicKey     BIT STRING\n * }\n *\n * Extensions ::= SEQUENCE SIZE (1..MAX) OF Extension\n *\n * Extension ::= SEQUENCE {\n *   extnID      OBJECT IDENTIFIER,\n *   critical    BOOLEAN DEFAULT FALSE,\n *   extnValue   OCTET STRING\n * }\n *\n * The only key algorithm currently supported for PKI is RSA.\n *\n * RSASSA-PSS signatures are described in RFC 3447 and RFC 4055.\n *\n * PKCS#10 v1.7 describes certificate signing requests:\n *\n * CertificationRequestInfo:\n *\n * CertificationRequestInfo ::= SEQUENCE {\n *   version       INTEGER { v1(0) } (v1,...),\n *   subject       Name,\n *   subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\n *   attributes    [0] Attributes{{ CRIAttributes }}\n * }\n *\n * Attributes { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}\n *\n * CRIAttributes  ATTRIBUTE  ::= {\n *   ... -- add any locally defined attributes here -- }\n *\n * Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {\n *   type   ATTRIBUTE.&id({IOSet}),\n *   values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\n * }\n *\n * CertificationRequest ::= SEQUENCE {\n *   certificationRequestInfo CertificationRequestInfo,\n *   signatureAlgorithm AlgorithmIdentifier{{ SignatureAlgorithms }},\n *   signature          BIT STRING\n * }\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./mgf');\nrequire('./oids');\nrequire('./pem');\nrequire('./pss');\nrequire('./rsa');\nrequire('./util');\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\nvar oids = pki.oids;\n\n// short name OID mappings\nvar _shortNames = {};\n_shortNames['CN'] = oids['commonName'];\n_shortNames['commonName'] = 'CN';\n_shortNames['C'] = oids['countryName'];\n_shortNames['countryName'] = 'C';\n_shortNames['L'] = oids['localityName'];\n_shortNames['localityName'] = 'L';\n_shortNames['ST'] = oids['stateOrProvinceName'];\n_shortNames['stateOrProvinceName'] = 'ST';\n_shortNames['O'] = oids['organizationName'];\n_shortNames['organizationName'] = 'O';\n_shortNames['OU'] = oids['organizationalUnitName'];\n_shortNames['organizationalUnitName'] = 'OU';\n_shortNames['E'] = oids['emailAddress'];\n_shortNames['emailAddress'] = 'E';\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator;\n\n// validator for an X.509v3 certificate\nvar x509CertificateValidator = {\n  name: 'Certificate',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Certificate.TBSCertificate',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'tbsCertificate',\n    value: [{\n      name: 'Certificate.TBSCertificate.version',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 0,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.version.integer',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'certVersion'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'certSerialNumber'\n    }, {\n      name: 'Certificate.TBSCertificate.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.signature.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'certinfoSignatureOid'\n      }, {\n        name: 'Certificate.TBSCertificate.signature.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'certinfoSignatureParams'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certIssuer'\n    }, {\n      name: 'Certificate.TBSCertificate.validity',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      // Note: UTC and generalized times may both appear so the capture\n      // names are based on their detected order, the names used below\n      // are only for the common case, which validity time really means\n      // \"notBefore\" and which means \"notAfter\" will be determined by order\n      value: [{\n        // notBefore (Time) (UTC time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity1UTCTime'\n      }, {\n        // notBefore (Time) (generalized time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity2GeneralizedTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity3UTCTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity4GeneralizedTime'\n      }]\n    }, {\n      // Name (subject) (RDNSequence)\n      name: 'Certificate.TBSCertificate.subject',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certSubject'\n    },\n    // SubjectPublicKeyInfo\n    publicKeyValidator,\n    {\n      // issuerUniqueID (optional)\n      name: 'Certificate.TBSCertificate.issuerUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 1,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.issuerUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certIssuerUniqueId'\n      }]\n    }, {\n      // subjectUniqueID (optional)\n      name: 'Certificate.TBSCertificate.subjectUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 2,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.subjectUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certSubjectUniqueId'\n      }]\n    }, {\n      // Extensions (optional)\n      name: 'Certificate.TBSCertificate.extensions',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 3,\n      constructed: true,\n      captureAsn1: 'certExtensions',\n      optional: true\n    }]\n  }, {\n    // AlgorithmIdentifier (signature algorithm)\n    name: 'Certificate.signatureAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      // algorithm\n      name: 'Certificate.signatureAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'certSignatureOid'\n    }, {\n      name: 'Certificate.TBSCertificate.signature.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      optional: true,\n      captureAsn1: 'certSignatureParams'\n    }]\n  }, {\n    // SignatureValue\n    name: 'Certificate.signatureValue',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    captureBitStringValue: 'certSignature'\n  }]\n};\n\nvar rsassaPssParameterValidator = {\n  name: 'rsapss',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'rsapss.hashAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    value: [{\n      name: 'rsapss.hashAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'hashOid'\n        /* parameter block omitted, for SHA1 NULL anyhow. */\n      }]\n    }]\n  }, {\n    name: 'rsapss.maskGenAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    value: [{\n      name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'maskGenOid'\n      }, {\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        value: [{\n          name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'maskGenHashOid'\n          /* parameter block omitted, for SHA1 NULL anyhow. */\n        }]\n      }]\n    }]\n  }, {\n    name: 'rsapss.saltLength',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 2,\n    optional: true,\n    value: [{\n      name: 'rsapss.saltLength.saltLength',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'saltLength'\n    }]\n  }, {\n    name: 'rsapss.trailerField',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 3,\n    optional: true,\n    value: [{\n      name: 'rsapss.trailer.trailer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'trailer'\n    }]\n  }]\n};\n\n// validator for a CertificationRequestInfo structure\nvar certificationRequestInfoValidator = {\n  name: 'CertificationRequestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'certificationRequestInfo',\n  value: [{\n    name: 'CertificationRequestInfo.integer',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'certificationRequestInfoVersion'\n  }, {\n    // Name (subject) (RDNSequence)\n    name: 'CertificationRequestInfo.subject',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'certificationRequestInfoSubject'\n  },\n  // SubjectPublicKeyInfo\n  publicKeyValidator,\n  {\n    name: 'CertificationRequestInfo.attributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'certificationRequestInfoAttributes',\n    value: [{\n      name: 'CertificationRequestInfo.attributes',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'CertificationRequestInfo.attributes.type',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false\n      }, {\n        name: 'CertificationRequestInfo.attributes.value',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SET,\n        constructed: true\n      }]\n    }]\n  }]\n};\n\n// validator for a CertificationRequest structure\nvar certificationRequestValidator = {\n  name: 'CertificationRequest',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'csr',\n  value: [\n    certificationRequestInfoValidator, {\n      // AlgorithmIdentifier (signature algorithm)\n      name: 'CertificationRequest.signatureAlgorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        // algorithm\n        name: 'CertificationRequest.signatureAlgorithm.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'csrSignatureOid'\n      }, {\n        name: 'CertificationRequest.signatureAlgorithm.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'csrSignatureParams'\n      }]\n    }, {\n      // signature\n      name: 'CertificationRequest.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.BITSTRING,\n      constructed: false,\n      captureBitStringValue: 'csrSignature'\n    }\n  ]\n};\n\n/**\n * Converts an RDNSequence of ASN.1 DER-encoded RelativeDistinguishedName\n * sets into an array with objects that have type and value properties.\n *\n * @param rdn the RDNSequence to convert.\n * @param md a message digest to append type and value to if provided.\n */\npki.RDNAttributesAsArray = function(rdn, md) {\n  var rval = [];\n\n  // each value in 'rdn' in is a SET of RelativeDistinguishedName\n  var set, attr, obj;\n  for(var si = 0; si < rdn.value.length; ++si) {\n    // get the RelativeDistinguishedName set\n    set = rdn.value[si];\n\n    // each value in the SET is an AttributeTypeAndValue sequence\n    // containing first a type (an OID) and second a value (defined by\n    // the OID)\n    for(var i = 0; i < set.value.length; ++i) {\n      obj = {};\n      attr = set.value[i];\n      obj.type = asn1.derToOid(attr.value[0].value);\n      obj.value = attr.value[1].value;\n      obj.valueTagClass = attr.value[1].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      if(md) {\n        md.update(obj.type);\n        md.update(obj.value);\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Converts ASN.1 CRIAttributes into an array with objects that have type and\n * value properties.\n *\n * @param attributes the CRIAttributes to convert.\n */\npki.CRIAttributesAsArray = function(attributes) {\n  var rval = [];\n\n  // each value in 'attributes' in is a SEQUENCE with an OID and a SET\n  for(var si = 0; si < attributes.length; ++si) {\n    // get the attribute sequence\n    var seq = attributes[si];\n\n    // each value in the SEQUENCE containing first a type (an OID) and\n    // second a set of values (defined by the OID)\n    var type = asn1.derToOid(seq.value[0].value);\n    var values = seq.value[1].value;\n    for(var vi = 0; vi < values.length; ++vi) {\n      var obj = {};\n      obj.type = type;\n      obj.value = values[vi].value;\n      obj.valueTagClass = values[vi].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      // parse extensions\n      if(obj.type === oids.extensionRequest) {\n        obj.extensions = [];\n        for(var ei = 0; ei < obj.value.length; ++ei) {\n          obj.extensions.push(pki.certificateExtensionFromAsn1(obj.value[ei]));\n        }\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Gets an issuer or subject attribute from its name, type, or short name.\n *\n * @param obj the issuer or subject object.\n * @param options a short name string or an object with:\n *          shortName the short name for the attribute.\n *          name the name for the attribute.\n *          type the type for the attribute.\n *\n * @return the attribute.\n */\nfunction _getAttribute(obj, options) {\n  if(typeof options === 'string') {\n    options = {shortName: options};\n  }\n\n  var rval = null;\n  var attr;\n  for(var i = 0; rval === null && i < obj.attributes.length; ++i) {\n    attr = obj.attributes[i];\n    if(options.type && options.type === attr.type) {\n      rval = attr;\n    } else if(options.name && options.name === attr.name) {\n      rval = attr;\n    } else if(options.shortName && options.shortName === attr.shortName) {\n      rval = attr;\n    }\n  }\n  return rval;\n}\n\n/**\n * Converts signature parameters from ASN.1 structure.\n *\n * Currently only RSASSA-PSS supported.  The PKCS#1 v1.5 signature scheme had\n * no parameters.\n *\n * RSASSA-PSS-params  ::=  SEQUENCE  {\n *   hashAlgorithm      [0] HashAlgorithm DEFAULT\n *                             sha1Identifier,\n *   maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT\n *                             mgf1SHA1Identifier,\n *   saltLength         [2] INTEGER DEFAULT 20,\n *   trailerField       [3] INTEGER DEFAULT 1\n * }\n *\n * HashAlgorithm  ::=  AlgorithmIdentifier\n *\n * MaskGenAlgorithm  ::=  AlgorithmIdentifier\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * @param oid The OID specifying the signature algorithm\n * @param obj The ASN.1 structure holding the parameters\n * @param fillDefaults Whether to use return default values where omitted\n * @return signature parameter object\n */\nvar _readSignatureParameters = function(oid, obj, fillDefaults) {\n  var params = {};\n\n  if(oid !== oids['RSASSA-PSS']) {\n    return params;\n  }\n\n  if(fillDefaults) {\n    params = {\n      hash: {\n        algorithmOid: oids['sha1']\n      },\n      mgf: {\n        algorithmOid: oids['mgf1'],\n        hash: {\n          algorithmOid: oids['sha1']\n        }\n      },\n      saltLength: 20\n    };\n  }\n\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, rsassaPssParameterValidator, capture, errors)) {\n    var error = new Error('Cannot read RSASSA-PSS parameter block.');\n    error.errors = errors;\n    throw error;\n  }\n\n  if(capture.hashOid !== undefined) {\n    params.hash = params.hash || {};\n    params.hash.algorithmOid = asn1.derToOid(capture.hashOid);\n  }\n\n  if(capture.maskGenOid !== undefined) {\n    params.mgf = params.mgf || {};\n    params.mgf.algorithmOid = asn1.derToOid(capture.maskGenOid);\n    params.mgf.hash = params.mgf.hash || {};\n    params.mgf.hash.algorithmOid = asn1.derToOid(capture.maskGenHashOid);\n  }\n\n  if(capture.saltLength !== undefined) {\n    params.saltLength = capture.saltLength.charCodeAt(0);\n  }\n\n  return params;\n};\n\n/**\n * Create signature digest for OID.\n *\n * @param options\n *   signatureOid: the OID specifying the signature algorithm.\n *   type: a human readable type for error messages\n * @return a created md instance. throws if unknown oid.\n */\nvar _createSignatureDigest = function(options) {\n  switch(oids[options.signatureOid]) {\n    case 'sha1WithRSAEncryption':\n    // deprecated alias\n    case 'sha1WithRSASignature':\n      return forge.md.sha1.create();\n    case 'md5WithRSAEncryption':\n      return forge.md.md5.create();\n    case 'sha256WithRSAEncryption':\n      return forge.md.sha256.create();\n    case 'sha384WithRSAEncryption':\n      return forge.md.sha384.create();\n    case 'sha512WithRSAEncryption':\n      return forge.md.sha512.create();\n    case 'RSASSA-PSS':\n      return forge.md.sha256.create();\n    default:\n      var error = new Error(\n        'Could not compute ' + options.type + ' digest. ' +\n        'Unknown signature OID.');\n      error.signatureOid = options.signatureOid;\n      throw error;\n  }\n};\n\n/**\n * Verify signature on certificate or CSR.\n *\n * @param options:\n *   certificate the certificate or CSR to verify.\n *   md the signature digest.\n *   signature the signature\n * @return a created md instance. throws if unknown oid.\n */\nvar _verifySignature = function(options) {\n  var cert = options.certificate;\n  var scheme;\n\n  switch(cert.signatureOid) {\n    case oids.sha1WithRSAEncryption:\n    // deprecated alias\n    case oids.sha1WithRSASignature:\n      /* use PKCS#1 v1.5 padding scheme */\n      break;\n    case oids['RSASSA-PSS']:\n      var hash, mgf;\n\n      /* initialize mgf */\n      hash = oids[cert.signatureParameters.mgf.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported MGF hash function.');\n        error.oid = cert.signatureParameters.mgf.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      mgf = oids[cert.signatureParameters.mgf.algorithmOid];\n      if(mgf === undefined || forge.mgf[mgf] === undefined) {\n        var error = new Error('Unsupported MGF function.');\n        error.oid = cert.signatureParameters.mgf.algorithmOid;\n        error.name = mgf;\n        throw error;\n      }\n\n      mgf = forge.mgf[mgf].create(forge.md[hash].create());\n\n      /* initialize hash function */\n      hash = oids[cert.signatureParameters.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported RSASSA-PSS hash function.');\n        error.oid = cert.signatureParameters.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      scheme = forge.pss.create(\n        forge.md[hash].create(), mgf, cert.signatureParameters.saltLength\n      );\n      break;\n  }\n\n  // verify signature on cert using public key\n  return cert.publicKey.verify(\n    options.md.digest().getBytes(), options.signature, scheme\n  );\n};\n\n/**\n * Converts an X.509 certificate from PEM format.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. This will scan the TBSCertificate part of the ASN.1\n * object while it is converted so it doesn't need to be converted back\n * to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certificate.\n */\npki.certificateFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE' &&\n    msg.type !== 'X509 CERTIFICATE' &&\n    msg.type !== 'TRUSTED CERTIFICATE') {\n    var error = new Error(\n      'Could not convert certificate from PEM; PEM header type ' +\n      'is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or \"TRUSTED CERTIFICATE\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error(\n      'Could not convert certificate from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificateFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts an X.509 certificate to PEM format.\n *\n * @param cert the certificate.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certificate.\n */\npki.certificateToPem = function(cert, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE',\n    body: asn1.toDer(pki.certificateToAsn1(cert)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key from PEM format.\n *\n * @param pem the PEM-formatted public key.\n *\n * @return the public key.\n */\npki.publicKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PUBLIC KEY' && msg.type !== 'RSA PUBLIC KEY') {\n    var error = new Error('Could not convert public key from PEM; PEM header ' +\n      'type is not \"PUBLIC KEY\" or \"RSA PUBLIC KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert public key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.publicKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA public key to PEM format (using a SubjectPublicKeyInfo).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key to PEM format (using an RSAPublicKey).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToRSAPublicKeyPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Gets a fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.sha1).\n *          [type] the type of fingerprint, such as 'RSAPublicKey',\n *            'SubjectPublicKeyInfo' (defaults to 'RSAPublicKey').\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\npki.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.sha1.create();\n  var type = options.type || 'RSAPublicKey';\n\n  var bytes;\n  switch(type) {\n    case 'RSAPublicKey':\n      bytes = asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes();\n      break;\n    case 'SubjectPublicKeyInfo':\n      bytes = asn1.toDer(pki.publicKeyToAsn1(key)).getBytes();\n      break;\n    default:\n      throw new Error('Unknown fingerprint type \"' + options.type + '\".');\n  }\n\n  // hash public key bytes\n  md.start();\n  md.update(bytes);\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from PEM format.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. This will scan the CertificationRequestInfo part of\n * the ASN.1 object while it is converted so it doesn't need to be converted\n * back to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE REQUEST') {\n    var error = new Error('Could not convert certification request from PEM; ' +\n      'PEM header type is not \"CERTIFICATE REQUEST\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert certification request from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificationRequestFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) to PEM format.\n *\n * @param csr the certification request.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certification request.\n */\npki.certificationRequestToPem = function(csr, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE REQUEST',\n    body: asn1.toDer(pki.certificationRequestToAsn1(csr)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Creates an empty X.509v3 RSA certificate.\n *\n * @return the certificate.\n */\npki.createCertificate = function() {\n  var cert = {};\n  cert.version = 0x02;\n  cert.serialNumber = '00';\n  cert.signatureOid = null;\n  cert.signature = null;\n  cert.siginfo = {};\n  cert.siginfo.algorithmOid = null;\n  cert.validity = {};\n  cert.validity.notBefore = new Date();\n  cert.validity.notAfter = new Date();\n\n  cert.issuer = {};\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = [];\n  cert.issuer.hash = null;\n\n  cert.subject = {};\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = [];\n  cert.subject.hash = null;\n\n  cert.extensions = [];\n  cert.publicKey = null;\n  cert.md = null;\n\n  /**\n   * Sets the subject of this certificate.\n   *\n   * @param attrs the array of subject attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setSubject = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.subject.attributes = attrs;\n    delete cert.subject.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.subject.uniqueId = uniqueId;\n    }\n    cert.subject.hash = null;\n  };\n\n  /**\n   * Sets the issuer of this certificate.\n   *\n   * @param attrs the array of issuer attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setIssuer = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.issuer.attributes = attrs;\n    delete cert.issuer.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.issuer.uniqueId = uniqueId;\n    }\n    cert.issuer.hash = null;\n  };\n\n  /**\n   * Sets the extensions of this certificate.\n   *\n   * @param exts the array of extensions to use.\n   */\n  cert.setExtensions = function(exts) {\n    for(var i = 0; i < exts.length; ++i) {\n      _fillMissingExtensionFields(exts[i], {cert: cert});\n    }\n    // set new extensions\n    cert.extensions = exts;\n  };\n\n  /**\n   * Gets an extension by its name or id.\n   *\n   * @param options the name to use or an object with:\n   *          name the name to use.\n   *          id the id to use.\n   *\n   * @return the extension or null if not found.\n   */\n  cert.getExtension = function(options) {\n    if(typeof options === 'string') {\n      options = {name: options};\n    }\n\n    var rval = null;\n    var ext;\n    for(var i = 0; rval === null && i < cert.extensions.length; ++i) {\n      ext = cert.extensions[i];\n      if(options.id && ext.id === options.id) {\n        rval = ext;\n      } else if(options.name && ext.name === options.name) {\n        rval = ext;\n      }\n    }\n    return rval;\n  };\n\n  /**\n   * Signs this certificate using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  cert.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    cert.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[cert.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certificate digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = cert.md.algorithm;\n      throw error;\n    }\n    cert.signatureOid = cert.siginfo.algorithmOid = algorithmOid;\n\n    // get TBSCertificate, convert to DER\n    cert.tbsCertificate = pki.getTBSCertificate(cert);\n    var bytes = asn1.toDer(cert.tbsCertificate);\n\n    // digest and sign\n    cert.md.update(bytes.getBytes());\n    cert.signature = key.sign(cert.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certificate using this\n   * certificate's public key.\n   *\n   * @param child the certificate to verify.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verify = function(child) {\n    var rval = false;\n\n    if(!cert.issued(child)) {\n      var issuer = child.issuer;\n      var subject = cert.subject;\n      var error = new Error(\n        'The parent certificate did not issue the given child ' +\n        'certificate; the child certificate\\'s issuer does not match the ' +\n        'parent\\'s subject.');\n      error.expectedIssuer = subject.attributes;\n      error.actualIssuer = issuer.attributes;\n      throw error;\n    }\n\n    var md = child.md;\n    if(md === null) {\n      // create digest for OID signature types\n      md = _createSignatureDigest({\n        signatureOid: child.signatureOid,\n        type: 'certificate'\n      });\n\n      // produce DER formatted TBSCertificate and digest it\n      var tbsCertificate = child.tbsCertificate || pki.getTBSCertificate(child);\n      var bytes = asn1.toDer(tbsCertificate);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: cert, md: md, signature: child.signature\n      });\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's issuer matches the passed\n   * certificate's subject. Note that no signature check is performed.\n   *\n   * @param parent the certificate to check.\n   *\n   * @return true if this certificate's issuer matches the passed certificate's\n   *         subject.\n   */\n  cert.isIssuer = function(parent) {\n    var rval = false;\n\n    var i = cert.issuer;\n    var s = parent.subject;\n\n    // compare hashes if present\n    if(i.hash && s.hash) {\n      rval = (i.hash === s.hash);\n    } else if(i.attributes.length === s.attributes.length) {\n      // all attributes are the same so issuer matches subject\n      rval = true;\n      var iattr, sattr;\n      for(var n = 0; rval && n < i.attributes.length; ++n) {\n        iattr = i.attributes[n];\n        sattr = s.attributes[n];\n        if(iattr.type !== sattr.type || iattr.value !== sattr.value) {\n          // attribute mismatch\n          rval = false;\n        }\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's subject matches the issuer of the\n   * given certificate). Note that not signature check is performed.\n   *\n   * @param child the certificate to check.\n   *\n   * @return true if this certificate's subject matches the passed\n   *         certificate's issuer.\n   */\n  cert.issued = function(child) {\n    return child.isIssuer(cert);\n  };\n\n  /**\n   * Generates the subjectKeyIdentifier for this certificate as byte buffer.\n   *\n   * @return the subjectKeyIdentifier for this certificate as byte buffer.\n   */\n  cert.generateSubjectKeyIdentifier = function() {\n    /* See: 4.2.1.2 section of the the RFC3280, keyIdentifier is either:\n\n      (1) The keyIdentifier is composed of the 160-bit SHA-1 hash of the\n        value of the BIT STRING subjectPublicKey (excluding the tag,\n        length, and number of unused bits).\n\n      (2) The keyIdentifier is composed of a four bit type field with\n        the value 0100 followed by the least significant 60 bits of the\n        SHA-1 hash of the value of the BIT STRING subjectPublicKey\n        (excluding the tag, length, and number of unused bit string bits).\n    */\n\n    // skipping the tag, length, and number of unused bits is the same\n    // as just using the RSAPublicKey (for RSA keys, which are the\n    // only ones supported)\n    return pki.getPublicKeyFingerprint(cert.publicKey, {type: 'RSAPublicKey'});\n  };\n\n  /**\n   * Verifies the subjectKeyIdentifier extension value for this certificate\n   * against its public key. If no extension is found, false will be\n   * returned.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verifySubjectKeyIdentifier = function() {\n    var oid = oids['subjectKeyIdentifier'];\n    for(var i = 0; i < cert.extensions.length; ++i) {\n      var ext = cert.extensions[i];\n      if(ext.id === oid) {\n        var ski = cert.generateSubjectKeyIdentifier().getBytes();\n        return (forge.util.hexToBytes(ext.subjectKeyIdentifier) === ski);\n      }\n    }\n    return false;\n  };\n\n  return cert;\n};\n\n/**\n * Converts an X.509v3 RSA certificate from an ASN.1 object.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the TBSCertificate part of the ASN.1\n * object needs to be scanned before the cert object is created.\n *\n * @param obj the asn1 representation of an X.509v3 RSA certificate.\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certificate.\n */\npki.certificateFromAsn1 = function(obj, computeHash) {\n  // validate certificate and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, x509CertificateValidator, capture, errors)) {\n    var error = new Error('Cannot read X.509 certificate. ' +\n      'ASN.1 object is not an X509v3 Certificate.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certificate\n  var cert = pki.createCertificate();\n  cert.version = capture.certVersion ?\n    capture.certVersion.charCodeAt(0) : 0;\n  var serial = forge.util.createBuffer(capture.certSerialNumber);\n  cert.serialNumber = serial.toHex();\n  cert.signatureOid = forge.asn1.derToOid(capture.certSignatureOid);\n  cert.signatureParameters = _readSignatureParameters(\n    cert.signatureOid, capture.certSignatureParams, true);\n  cert.siginfo.algorithmOid = forge.asn1.derToOid(capture.certinfoSignatureOid);\n  cert.siginfo.parameters = _readSignatureParameters(cert.siginfo.algorithmOid,\n    capture.certinfoSignatureParams, false);\n  cert.signature = capture.certSignature;\n\n  var validity = [];\n  if(capture.certValidity1UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity1UTCTime));\n  }\n  if(capture.certValidity2GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity2GeneralizedTime));\n  }\n  if(capture.certValidity3UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity3UTCTime));\n  }\n  if(capture.certValidity4GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity4GeneralizedTime));\n  }\n  if(validity.length > 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; more ' +\n      'than two times were provided in the certificate.');\n  }\n  if(validity.length < 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; they ' +\n      'were not provided as either UTCTime or GeneralizedTime.');\n  }\n  cert.validity.notBefore = validity[0];\n  cert.validity.notAfter = validity[1];\n\n  // keep TBSCertificate to preserve signature when exporting\n  cert.tbsCertificate = capture.tbsCertificate;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    cert.md = _createSignatureDigest({\n      signatureOid: cert.signatureOid,\n      type: 'certificate'\n    });\n\n    // produce DER formatted TBSCertificate and digest it\n    var bytes = asn1.toDer(cert.tbsCertificate);\n    cert.md.update(bytes.getBytes());\n  }\n\n  // handle issuer, build issuer message digest\n  var imd = forge.md.sha1.create();\n  var ibytes = asn1.toDer(capture.certIssuer);\n  imd.update(ibytes.getBytes());\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = pki.RDNAttributesAsArray(capture.certIssuer);\n  if(capture.certIssuerUniqueId) {\n    cert.issuer.uniqueId = capture.certIssuerUniqueId;\n  }\n  cert.issuer.hash = imd.digest().toHex();\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  var sbytes = asn1.toDer(capture.certSubject);\n  smd.update(sbytes.getBytes());\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = pki.RDNAttributesAsArray(capture.certSubject);\n  if(capture.certSubjectUniqueId) {\n    cert.subject.uniqueId = capture.certSubjectUniqueId;\n  }\n  cert.subject.hash = smd.digest().toHex();\n\n  // handle extensions\n  if(capture.certExtensions) {\n    cert.extensions = pki.certificateExtensionsFromAsn1(capture.certExtensions);\n  } else {\n    cert.extensions = [];\n  }\n\n  // convert RSA public key from ASN.1\n  cert.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  return cert;\n};\n\n/**\n * Converts an ASN.1 extensions object (with extension sequences as its\n * values) into an array of extension objects with types and values.\n *\n * Supported extensions:\n *\n * id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }\n * KeyUsage ::= BIT STRING {\n *   digitalSignature        (0),\n *   nonRepudiation          (1),\n *   keyEncipherment         (2),\n *   dataEncipherment        (3),\n *   keyAgreement            (4),\n *   keyCertSign             (5),\n *   cRLSign                 (6),\n *   encipherOnly            (7),\n *   decipherOnly            (8)\n * }\n *\n * id-ce-basicConstraints OBJECT IDENTIFIER ::=  { id-ce 19 }\n * BasicConstraints ::= SEQUENCE {\n *   cA                      BOOLEAN DEFAULT FALSE,\n *   pathLenConstraint       INTEGER (0..MAX) OPTIONAL\n * }\n *\n * subjectAltName EXTENSION ::= {\n *   SYNTAX GeneralNames\n *   IDENTIFIED BY id-ce-subjectAltName\n * }\n *\n * GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName\n *\n * GeneralName ::= CHOICE {\n *   otherName      [0] INSTANCE OF OTHER-NAME,\n *   rfc822Name     [1] IA5String,\n *   dNSName        [2] IA5String,\n *   x400Address    [3] ORAddress,\n *   directoryName  [4] Name,\n *   ediPartyName   [5] EDIPartyName,\n *   uniformResourceIdentifier [6] IA5String,\n *   IPAddress      [7] OCTET STRING,\n *   registeredID   [8] OBJECT IDENTIFIER\n * }\n *\n * OTHER-NAME ::= TYPE-IDENTIFIER\n *\n * EDIPartyName ::= SEQUENCE {\n *   nameAssigner [0] DirectoryString {ub-name} OPTIONAL,\n *   partyName    [1] DirectoryString {ub-name}\n * }\n *\n * @param exts the extensions ASN.1 with extension sequences to parse.\n *\n * @return the array.\n */\npki.certificateExtensionsFromAsn1 = function(exts) {\n  var rval = [];\n  for(var i = 0; i < exts.value.length; ++i) {\n    // get extension sequence\n    var extseq = exts.value[i];\n    for(var ei = 0; ei < extseq.value.length; ++ei) {\n      rval.push(pki.certificateExtensionFromAsn1(extseq.value[ei]));\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Parses a single certificate extension from ASN.1.\n *\n * @param ext the extension in ASN.1 format.\n *\n * @return the parsed extension as an object.\n */\npki.certificateExtensionFromAsn1 = function(ext) {\n  // an extension has:\n  // [0] extnID      OBJECT IDENTIFIER\n  // [1] critical    BOOLEAN DEFAULT FALSE\n  // [2] extnValue   OCTET STRING\n  var e = {};\n  e.id = asn1.derToOid(ext.value[0].value);\n  e.critical = false;\n  if(ext.value[1].type === asn1.Type.BOOLEAN) {\n    e.critical = (ext.value[1].value.charCodeAt(0) !== 0x00);\n    e.value = ext.value[2].value;\n  } else {\n    e.value = ext.value[1].value;\n  }\n  // if the oid is known, get its name\n  if(e.id in oids) {\n    e.name = oids[e.id];\n\n    // handle key usage\n    if(e.name === 'keyUsage') {\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      var b3 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n        b3 = ev.value.length > 2 ? ev.value.charCodeAt(2) : 0;\n      }\n      // set flags\n      e.digitalSignature = (b2 & 0x80) === 0x80;\n      e.nonRepudiation = (b2 & 0x40) === 0x40;\n      e.keyEncipherment = (b2 & 0x20) === 0x20;\n      e.dataEncipherment = (b2 & 0x10) === 0x10;\n      e.keyAgreement = (b2 & 0x08) === 0x08;\n      e.keyCertSign = (b2 & 0x04) === 0x04;\n      e.cRLSign = (b2 & 0x02) === 0x02;\n      e.encipherOnly = (b2 & 0x01) === 0x01;\n      e.decipherOnly = (b3 & 0x80) === 0x80;\n    } else if(e.name === 'basicConstraints') {\n      // handle basic constraints\n      // get value as SEQUENCE\n      var ev = asn1.fromDer(e.value);\n      // get cA BOOLEAN flag (defaults to false)\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.BOOLEAN) {\n        e.cA = (ev.value[0].value.charCodeAt(0) !== 0x00);\n      } else {\n        e.cA = false;\n      }\n      // get path length constraint\n      var value = null;\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.INTEGER) {\n        value = ev.value[0].value;\n      } else if(ev.value.length > 1) {\n        value = ev.value[1].value;\n      }\n      if(value !== null) {\n        e.pathLenConstraint = asn1.derToInteger(value);\n      }\n    } else if(e.name === 'extKeyUsage') {\n      // handle extKeyUsage\n      // value is a SEQUENCE of OIDs\n      var ev = asn1.fromDer(e.value);\n      for(var vi = 0; vi < ev.value.length; ++vi) {\n        var oid = asn1.derToOid(ev.value[vi].value);\n        if(oid in oids) {\n          e[oids[oid]] = true;\n        } else {\n          e[oid] = true;\n        }\n      }\n    } else if(e.name === 'nsCertType') {\n      // handle nsCertType\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n      }\n      // set flags\n      e.client = (b2 & 0x80) === 0x80;\n      e.server = (b2 & 0x40) === 0x40;\n      e.email = (b2 & 0x20) === 0x20;\n      e.objsign = (b2 & 0x10) === 0x10;\n      e.reserved = (b2 & 0x08) === 0x08;\n      e.sslCA = (b2 & 0x04) === 0x04;\n      e.emailCA = (b2 & 0x02) === 0x02;\n      e.objCA = (b2 & 0x01) === 0x01;\n    } else if(\n      e.name === 'subjectAltName' ||\n      e.name === 'issuerAltName') {\n      // handle subjectAltName/issuerAltName\n      e.altNames = [];\n\n      // ev is a SYNTAX SEQUENCE\n      var gn;\n      var ev = asn1.fromDer(e.value);\n      for(var n = 0; n < ev.value.length; ++n) {\n        // get GeneralName\n        gn = ev.value[n];\n\n        var altName = {\n          type: gn.type,\n          value: gn.value\n        };\n        e.altNames.push(altName);\n\n        // Note: Support for types 1,2,6,7,8\n        switch(gn.type) {\n          // rfc822Name\n          case 1:\n          // dNSName\n          case 2:\n          // uniformResourceIdentifier (URI)\n          case 6:\n            break;\n          // IPAddress\n          case 7:\n            // convert to IPv4/IPv6 string representation\n            altName.ip = forge.util.bytesToIP(gn.value);\n            break;\n          // registeredID\n          case 8:\n            altName.oid = asn1.derToOid(gn.value);\n            break;\n          default:\n            // unsupported\n        }\n      }\n    } else if(e.name === 'subjectKeyIdentifier') {\n      // value is an OCTETSTRING w/the hash of the key-type specific\n      // public key structure (eg: RSAPublicKey)\n      var ev = asn1.fromDer(e.value);\n      e.subjectKeyIdentifier = forge.util.bytesToHex(ev.value);\n    }\n  }\n  return e;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from an ASN.1 object.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the CertificationRequestInfo part of the\n * ASN.1 object needs to be scanned before the csr object is created.\n *\n * @param obj the asn1 representation of a PKCS#10 certification request (CSR).\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromAsn1 = function(obj, computeHash) {\n  // validate certification request and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, certificationRequestValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#10 certificate request. ' +\n      'ASN.1 object is not a PKCS#10 CertificationRequest.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certification request\n  var csr = pki.createCertificationRequest();\n  csr.version = capture.csrVersion ? capture.csrVersion.charCodeAt(0) : 0;\n  csr.signatureOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.signatureParameters = _readSignatureParameters(\n    csr.signatureOid, capture.csrSignatureParams, true);\n  csr.siginfo.algorithmOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.siginfo.parameters = _readSignatureParameters(\n    csr.siginfo.algorithmOid, capture.csrSignatureParams, false);\n  csr.signature = capture.csrSignature;\n\n  // keep CertificationRequestInfo to preserve signature when exporting\n  csr.certificationRequestInfo = capture.certificationRequestInfo;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    csr.md = _createSignatureDigest({\n      signatureOid: csr.signatureOid,\n      type: 'certification request'\n    });\n\n    // produce DER formatted CertificationRequestInfo and digest it\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n    csr.md.update(bytes.getBytes());\n  }\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = pki.RDNAttributesAsArray(\n    capture.certificationRequestInfoSubject, smd);\n  csr.subject.hash = smd.digest().toHex();\n\n  // convert RSA public key from ASN.1\n  csr.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  // convert attributes from ASN.1\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.attributes = pki.CRIAttributesAsArray(\n    capture.certificationRequestInfoAttributes || []);\n\n  return csr;\n};\n\n/**\n * Creates an empty certification request (a CSR or certificate signing\n * request). Once created, its public key and attributes can be set and then\n * it can be signed.\n *\n * @return the empty certification request.\n */\npki.createCertificationRequest = function() {\n  var csr = {};\n  csr.version = 0x00;\n  csr.signatureOid = null;\n  csr.signature = null;\n  csr.siginfo = {};\n  csr.siginfo.algorithmOid = null;\n\n  csr.subject = {};\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = [];\n  csr.subject.hash = null;\n\n  csr.publicKey = null;\n  csr.attributes = [];\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.md = null;\n\n  /**\n   * Sets the subject of this certification request.\n   *\n   * @param attrs the array of subject attributes to use.\n   */\n  csr.setSubject = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.subject.attributes = attrs;\n    csr.subject.hash = null;\n  };\n\n  /**\n   * Sets the attributes of this certification request.\n   *\n   * @param attrs the array of attributes to use.\n   */\n  csr.setAttributes = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.attributes = attrs;\n  };\n\n  /**\n   * Signs this certification request using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  csr.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    csr.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[csr.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certification request digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = csr.md.algorithm;\n      throw error;\n    }\n    csr.signatureOid = csr.siginfo.algorithmOid = algorithmOid;\n\n    // get CertificationRequestInfo, convert to DER\n    csr.certificationRequestInfo = pki.getCertificationRequestInfo(csr);\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n\n    // digest and sign\n    csr.md.update(bytes.getBytes());\n    csr.signature = key.sign(csr.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certification request using\n   * its public key.\n   *\n   * A CSR that has been exported to a file in PEM format can be verified using\n   * OpenSSL using this command:\n   *\n   * openssl req -in <the-csr-pem-file> -verify -noout -text\n   *\n   * @return true if verified, false if not.\n   */\n  csr.verify = function() {\n    var rval = false;\n\n    var md = csr.md;\n    if(md === null) {\n      md = _createSignatureDigest({\n        signatureOid: csr.signatureOid,\n        type: 'certification request'\n      });\n\n      // produce DER formatted CertificationRequestInfo and digest it\n      var cri = csr.certificationRequestInfo ||\n        pki.getCertificationRequestInfo(csr);\n      var bytes = asn1.toDer(cri);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: csr, md: md, signature: csr.signature\n      });\n    }\n\n    return rval;\n  };\n\n  return csr;\n};\n\n/**\n * Converts an X.509 subject or issuer to an ASN.1 RDNSequence.\n *\n * @param obj the subject or issuer (distinguished name).\n *\n * @return the ASN.1 RDNSequence.\n */\nfunction _dnToAsn1(obj) {\n  // create an empty RDNSequence\n  var rval = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // iterate over attributes\n  var attr, set;\n  var attrs = obj.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.PRINTABLESTRING;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n\n      if(valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(value);\n      }\n      // FIXME: handle more encodings\n    }\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    set = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // AttributeType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(attr.type).getBytes()),\n        // AttributeValue\n        asn1.create(asn1.Class.UNIVERSAL, valueTagClass, false, value)\n      ])\n    ]);\n    rval.value.push(set);\n  }\n\n  return rval;\n}\n\n/**\n * Gets all printable attributes (typically of an issuer or subject) in a\n * simplified JSON format for display.\n *\n * @param attrs the attributes.\n *\n * @return the JSON for display.\n */\nfunction _getAttributesAsJson(attrs) {\n  var rval = {};\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    if(attr.shortName && (\n      attr.valueTagClass === asn1.Type.UTF8 ||\n      attr.valueTagClass === asn1.Type.PRINTABLESTRING ||\n      attr.valueTagClass === asn1.Type.IA5STRING)) {\n      var value = attr.value;\n      if(attr.valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(attr.value);\n      }\n      if(!(attr.shortName in rval)) {\n        rval[attr.shortName] = value;\n      } else if(forge.util.isArray(rval[attr.shortName])) {\n        rval[attr.shortName].push(value);\n      } else {\n        rval[attr.shortName] = [rval[attr.shortName], value];\n      }\n    }\n  }\n  return rval;\n}\n\n/**\n * Fills in missing fields in attributes.\n *\n * @param attrs the attributes to fill missing fields in.\n */\nfunction _fillMissingFields(attrs) {\n  var attr;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n\n    // populate missing name\n    if(typeof attr.name === 'undefined') {\n      if(attr.type && attr.type in pki.oids) {\n        attr.name = pki.oids[attr.type];\n      } else if(attr.shortName && attr.shortName in _shortNames) {\n        attr.name = pki.oids[_shortNames[attr.shortName]];\n      }\n    }\n\n    // populate missing type (OID)\n    if(typeof attr.type === 'undefined') {\n      if(attr.name && attr.name in pki.oids) {\n        attr.type = pki.oids[attr.name];\n      } else {\n        var error = new Error('Attribute type not specified.');\n        error.attribute = attr;\n        throw error;\n      }\n    }\n\n    // populate missing shortname\n    if(typeof attr.shortName === 'undefined') {\n      if(attr.name && attr.name in _shortNames) {\n        attr.shortName = _shortNames[attr.name];\n      }\n    }\n\n    // convert extensions to value\n    if(attr.type === oids.extensionRequest) {\n      attr.valueConstructed = true;\n      attr.valueTagClass = asn1.Type.SEQUENCE;\n      if(!attr.value && attr.extensions) {\n        attr.value = [];\n        for(var ei = 0; ei < attr.extensions.length; ++ei) {\n          attr.value.push(pki.certificateExtensionToAsn1(\n            _fillMissingExtensionFields(attr.extensions[ei])));\n        }\n      }\n    }\n\n    if(typeof attr.value === 'undefined') {\n      var error = new Error('Attribute value not specified.');\n      error.attribute = attr;\n      throw error;\n    }\n  }\n}\n\n/**\n * Fills in missing fields in certificate extensions.\n *\n * @param e the extension.\n * @param [options] the options to use.\n *          [cert] the certificate the extensions are for.\n *\n * @return the extension.\n */\nfunction _fillMissingExtensionFields(e, options) {\n  options = options || {};\n\n  // populate missing name\n  if(typeof e.name === 'undefined') {\n    if(e.id && e.id in pki.oids) {\n      e.name = pki.oids[e.id];\n    }\n  }\n\n  // populate missing id\n  if(typeof e.id === 'undefined') {\n    if(e.name && e.name in pki.oids) {\n      e.id = pki.oids[e.name];\n    } else {\n      var error = new Error('Extension ID not specified.');\n      error.extension = e;\n      throw error;\n    }\n  }\n\n  if(typeof e.value !== 'undefined') {\n    return e;\n  }\n\n  // handle missing value:\n\n  // value is a BIT STRING\n  if(e.name === 'keyUsage') {\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n    var b3 = 0x00;\n    if(e.digitalSignature) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.nonRepudiation) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.keyEncipherment) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.dataEncipherment) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.keyAgreement) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.keyCertSign) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.cRLSign) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.encipherOnly) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n    if(e.decipherOnly) {\n      b3 |= 0x80;\n      unused = 7;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b3 !== 0) {\n      value += String.fromCharCode(b2) + String.fromCharCode(b3);\n    } else if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'basicConstraints') {\n    // basicConstraints is a SEQUENCE\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    // cA BOOLEAN flag defaults to false\n    if(e.cA) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n        String.fromCharCode(0xFF)));\n    }\n    if('pathLenConstraint' in e) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(e.pathLenConstraint).getBytes()));\n    }\n  } else if(e.name === 'extKeyUsage') {\n    // extKeyUsage is a SEQUENCE of OIDs\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n    for(var key in e) {\n      if(e[key] !== true) {\n        continue;\n      }\n      // key is name in OID map\n      if(key in oids) {\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(oids[key]).getBytes()));\n      } else if(key.indexOf('.') !== -1) {\n        // assume key is an OID\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(key).getBytes()));\n      }\n    }\n  } else if(e.name === 'nsCertType') {\n    // nsCertType is a BIT STRING\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n\n    if(e.client) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.server) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.email) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.objsign) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.reserved) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.sslCA) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.emailCA) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.objCA) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'subjectAltName' || e.name === 'issuerAltName') {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      e.value.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n  } else if(e.name === 'nsComment' && options.cert) {\n    // sanity check value is ASCII (req'd) and not too big\n    if(!(/^[\\x00-\\x7F]*$/.test(e.comment)) ||\n      (e.comment.length < 1) || (e.comment.length > 128)) {\n      throw new Error('Invalid \"nsComment\" content.');\n    }\n    // IA5STRING opaque comment\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.IA5STRING, false, e.comment);\n  } else if(e.name === 'subjectKeyIdentifier' && options.cert) {\n    var ski = options.cert.generateSubjectKeyIdentifier();\n    e.subjectKeyIdentifier = ski.toHex();\n    // OCTETSTRING w/digest\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, ski.getBytes());\n  } else if(e.name === 'authorityKeyIdentifier' && options.cert) {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    if(e.keyIdentifier) {\n      var keyIdentifier = (e.keyIdentifier === true ?\n        options.cert.generateSubjectKeyIdentifier().getBytes() :\n        e.keyIdentifier);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, false, keyIdentifier));\n    }\n\n    if(e.authorityCertIssuer) {\n      var authorityCertIssuer = [\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 4, true, [\n          _dnToAsn1(e.authorityCertIssuer === true ?\n            options.cert.issuer : e.authorityCertIssuer)\n        ])\n      ];\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, authorityCertIssuer));\n    }\n\n    if(e.serialNumber) {\n      var serialNumber = forge.util.hexToBytes(e.serialNumber === true ?\n        options.cert.serialNumber : e.serialNumber);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, false, serialNumber));\n    }\n  } else if(e.name === 'cRLDistributionPoints') {\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    // Create sub SEQUENCE of DistributionPointName\n    var subSeq = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    // Create fullName CHOICE\n    var fullNameGeneralNames = asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      fullNameGeneralNames.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n\n    // Add to the parent SEQUENCE\n    subSeq.value.push(asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, [fullNameGeneralNames]));\n    seq.push(subSeq);\n  }\n\n  // ensure value has been defined by now\n  if(typeof e.value === 'undefined') {\n    var error = new Error('Extension value not specified.');\n    error.extension = e;\n    throw error;\n  }\n\n  return e;\n}\n\n/**\n * Convert signature parameters object to ASN.1\n *\n * @param {String} oid Signature algorithm OID\n * @param params The signature parametrs object\n * @return ASN.1 object representing signature parameters\n */\nfunction _signatureParametersToAsn1(oid, params) {\n  switch(oid) {\n    case oids['RSASSA-PSS']:\n      var parts = [];\n\n      if(params.hash.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.hash.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n          ])\n        ]));\n      }\n\n      if(params.mgf.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.mgf.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n                asn1.oidToDer(params.mgf.hash.algorithmOid).getBytes()),\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n            ])\n          ])\n        ]));\n      }\n\n      if(params.saltLength !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(params.saltLength).getBytes())\n        ]));\n      }\n\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, parts);\n\n    default:\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '');\n  }\n}\n\n/**\n * Converts a certification request's attributes to an ASN.1 set of\n * CRIAttributes.\n *\n * @param csr certification request.\n *\n * @return the ASN.1 set of CRIAttributes.\n */\nfunction _CRIAttributesToAsn1(csr) {\n  // create an empty context-specific container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n  // no attributes, return empty container\n  if(csr.attributes.length === 0) {\n    return rval;\n  }\n\n  // each attribute has a sequence with a type and a set of values\n  var attrs = csr.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.UTF8;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n    }\n    if(valueTagClass === asn1.Type.UTF8) {\n      value = forge.util.encodeUtf8(value);\n    }\n    var valueConstructed = false;\n    if('valueConstructed' in attr) {\n      valueConstructed = attr.valueConstructed;\n    }\n    // FIXME: handle more encodings\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // AttributeType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(attr.type).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n        // AttributeValue\n        asn1.create(\n          asn1.Class.UNIVERSAL, valueTagClass, valueConstructed, value)\n      ])\n    ]);\n    rval.value.push(seq);\n  }\n\n  return rval;\n}\n\nvar jan_1_1950 = new Date('1950-01-01T00:00:00Z');\nvar jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n\n/**\n * Converts a Date object to ASN.1\n * Handles the different format before and after 1st January 2050\n *\n * @param date date object.\n *\n * @return the ASN.1 object representing the date.\n */\nfunction _dateToAsn1(date) {\n  if(date >= jan_1_1950 && date < jan_1_2050) {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n      asn1.dateToUtcTime(date));\n  } else {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n      asn1.dateToGeneralizedTime(date));\n  }\n}\n\n/**\n * Gets the ASN.1 TBSCertificate part of an X.509v3 certificate.\n *\n * @param cert the certificate.\n *\n * @return the asn1 TBSCertificate.\n */\npki.getTBSCertificate = function(cert) {\n  // TBSCertificate\n  var notBefore = _dateToAsn1(cert.validity.notBefore);\n  var notAfter = _dateToAsn1(cert.validity.notAfter);\n  var tbs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      // integer\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(cert.version).getBytes())\n    ]),\n    // serialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      forge.util.hexToBytes(cert.serialNumber)),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.siginfo.algorithmOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(\n        cert.siginfo.algorithmOid, cert.siginfo.parameters)\n    ]),\n    // issuer\n    _dnToAsn1(cert.issuer),\n    // validity\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      notBefore,\n      notAfter\n    ]),\n    // subject\n    _dnToAsn1(cert.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(cert.publicKey)\n  ]);\n\n  if(cert.issuer.uniqueId) {\n    // issuerUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.issuer.uniqueId\n        )\n      ])\n    );\n  }\n  if(cert.subject.uniqueId) {\n    // subjectUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.subject.uniqueId\n        )\n      ])\n    );\n  }\n\n  if(cert.extensions.length > 0) {\n    // extensions (optional)\n    tbs.value.push(pki.certificateExtensionsToAsn1(cert.extensions));\n  }\n\n  return tbs;\n};\n\n/**\n * Gets the ASN.1 CertificationRequestInfo part of a\n * PKCS#10 CertificationRequest.\n *\n * @param csr the certification request.\n *\n * @return the asn1 CertificationRequestInfo.\n */\npki.getCertificationRequestInfo = function(csr) {\n  // CertificationRequestInfo\n  var cri = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(csr.version).getBytes()),\n    // subject\n    _dnToAsn1(csr.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(csr.publicKey),\n    // attributes\n    _CRIAttributesToAsn1(csr)\n  ]);\n\n  return cri;\n};\n\n/**\n * Converts a DistinguishedName (subject or issuer) to an ASN.1 object.\n *\n * @param dn the DistinguishedName.\n *\n * @return the asn1 representation of a DistinguishedName.\n */\npki.distinguishedNameToAsn1 = function(dn) {\n  return _dnToAsn1(dn);\n};\n\n/**\n * Converts an X.509v3 RSA certificate to an ASN.1 object.\n *\n * @param cert the certificate.\n *\n * @return the asn1 representation of an X.509v3 RSA certificate.\n */\npki.certificateToAsn1 = function(cert) {\n  // prefer cached TBSCertificate over generating one\n  var tbsCertificate = cert.tbsCertificate || pki.getTBSCertificate(cert);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // TBSCertificate\n    tbsCertificate,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(cert.signatureOid, cert.signatureParameters)\n    ]),\n    // SignatureValue\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + cert.signature)\n  ]);\n};\n\n/**\n * Converts X.509v3 certificate extensions to ASN.1.\n *\n * @param exts the extensions to convert.\n *\n * @return the extensions in ASN.1 format.\n */\npki.certificateExtensionsToAsn1 = function(exts) {\n  // create top-level extension container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 3, true, []);\n\n  // create extension sequence (stores a sequence for each extension)\n  var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  rval.value.push(seq);\n\n  for(var i = 0; i < exts.length; ++i) {\n    seq.value.push(pki.certificateExtensionToAsn1(exts[i]));\n  }\n\n  return rval;\n};\n\n/**\n * Converts a single certificate extension to ASN.1.\n *\n * @param ext the extension to convert.\n *\n * @return the extension in ASN.1 format.\n */\npki.certificateExtensionToAsn1 = function(ext) {\n  // create a sequence for each extension\n  var extseq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // extnID (OID)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n    asn1.oidToDer(ext.id).getBytes()));\n\n  // critical defaults to false\n  if(ext.critical) {\n    // critical BOOLEAN DEFAULT FALSE\n    extseq.value.push(asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n      String.fromCharCode(0xFF)));\n  }\n\n  var value = ext.value;\n  if(typeof ext.value !== 'string') {\n    // value is asn.1\n    value = asn1.toDer(value).getBytes();\n  }\n\n  // extnValue (OCTET STRING)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, value));\n\n  return extseq;\n};\n\n/**\n * Converts a PKCS#10 certification request to an ASN.1 object.\n *\n * @param csr the certification request.\n *\n * @return the asn1 representation of a certification request.\n */\npki.certificationRequestToAsn1 = function(csr) {\n  // prefer cached CertificationRequestInfo over generating one\n  var cri = csr.certificationRequestInfo ||\n    pki.getCertificationRequestInfo(csr);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // CertificationRequestInfo\n    cri,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(csr.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(csr.signatureOid, csr.signatureParameters)\n    ]),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + csr.signature)\n  ]);\n};\n\n/**\n * Creates a CA store.\n *\n * @param certs an optional array of certificate objects or PEM-formatted\n *          certificate strings to add to the CA store.\n *\n * @return the CA store.\n */\npki.createCaStore = function(certs) {\n  // create CA store\n  var caStore = {\n    // stored certificates\n    certs: {}\n  };\n\n  /**\n   * Gets the certificate that issued the passed certificate or its\n   * 'parent'.\n   *\n   * @param cert the certificate to get the parent for.\n   *\n   * @return the parent certificate or null if none was found.\n   */\n  caStore.getIssuer = function(cert) {\n    var rval = getBySubject(cert.issuer);\n\n    // see if there are multiple matches\n    /*if(forge.util.isArray(rval)) {\n      // TODO: resolve multiple matches by checking\n      // authorityKey/subjectKey/issuerUniqueID/other identifiers, etc.\n      // FIXME: or alternatively do authority key mapping\n      // if possible (X.509v1 certs can't work?)\n      throw new Error('Resolving multiple issuer matches not implemented yet.');\n    }*/\n\n    return rval;\n  };\n\n  /**\n   * Adds a trusted certificate to the store.\n   *\n   * @param cert the certificate to add as a trusted certificate (either a\n   *          pki.certificate object or a PEM-formatted certificate).\n   */\n  caStore.addCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    ensureSubjectHasHash(cert.subject);\n\n    if(!caStore.hasCertificate(cert)) { // avoid duplicate certificates in store\n      if(cert.subject.hash in caStore.certs) {\n        // subject hash already exists, append to array\n        var tmp = caStore.certs[cert.subject.hash];\n        if(!forge.util.isArray(tmp)) {\n          tmp = [tmp];\n        }\n        tmp.push(cert);\n        caStore.certs[cert.subject.hash] = tmp;\n      } else {\n        caStore.certs[cert.subject.hash] = cert;\n      }\n    }\n  };\n\n  /**\n   * Checks to see if the given certificate is in the store.\n   *\n   * @param cert the certificate to check (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return true if the certificate is in the store, false if not.\n   */\n  caStore.hasCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    var match = getBySubject(cert.subject);\n    if(!match) {\n      return false;\n    }\n    if(!forge.util.isArray(match)) {\n      match = [match];\n    }\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Lists all of the certificates kept in the store.\n   *\n   * @return an array of all of the pki.certificate objects in the store.\n   */\n  caStore.listAllCertificates = function() {\n    var certList = [];\n\n    for(var hash in caStore.certs) {\n      if(caStore.certs.hasOwnProperty(hash)) {\n        var value = caStore.certs[hash];\n        if(!forge.util.isArray(value)) {\n          certList.push(value);\n        } else {\n          for(var i = 0; i < value.length; ++i) {\n            certList.push(value[i]);\n          }\n        }\n      }\n    }\n\n    return certList;\n  };\n\n  /**\n   * Removes a certificate from the store.\n   *\n   * @param cert the certificate to remove (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return the certificate that was removed or null if the certificate\n   *           wasn't in store.\n   */\n  caStore.removeCertificate = function(cert) {\n    var result;\n\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n    ensureSubjectHasHash(cert.subject);\n    if(!caStore.hasCertificate(cert)) {\n      return null;\n    }\n\n    var match = getBySubject(cert.subject);\n\n    if(!forge.util.isArray(match)) {\n      result = caStore.certs[cert.subject.hash];\n      delete caStore.certs[cert.subject.hash];\n      return result;\n    }\n\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        result = match[i];\n        match.splice(i, 1);\n      }\n    }\n    if(match.length === 0) {\n      delete caStore.certs[cert.subject.hash];\n    }\n\n    return result;\n  };\n\n  function getBySubject(subject) {\n    ensureSubjectHasHash(subject);\n    return caStore.certs[subject.hash] || null;\n  }\n\n  function ensureSubjectHasHash(subject) {\n    // produce subject hash if it doesn't exist\n    if(!subject.hash) {\n      var md = forge.md.sha1.create();\n      subject.attributes = pki.RDNAttributesAsArray(_dnToAsn1(subject), md);\n      subject.hash = md.digest().toHex();\n    }\n  }\n\n  // auto-add passed in certs\n  if(certs) {\n    // parse PEM-formatted certificates as necessary\n    for(var i = 0; i < certs.length; ++i) {\n      var cert = certs[i];\n      caStore.addCertificate(cert);\n    }\n  }\n\n  return caStore;\n};\n\n/**\n * Certificate verification errors, based on TLS.\n */\npki.certificateError = {\n  bad_certificate: 'forge.pki.BadCertificate',\n  unsupported_certificate: 'forge.pki.UnsupportedCertificate',\n  certificate_revoked: 'forge.pki.CertificateRevoked',\n  certificate_expired: 'forge.pki.CertificateExpired',\n  certificate_unknown: 'forge.pki.CertificateUnknown',\n  unknown_ca: 'forge.pki.UnknownCertificateAuthority'\n};\n\n/**\n * Verifies a certificate chain against the given Certificate Authority store\n * with an optional custom verify callback.\n *\n * @param caStore a certificate store to verify against.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end (an array of certificates).\n * @param options a callback to be called for every certificate in the chain or\n *                  an object with:\n *                  verify a callback to be called for every certificate in the\n *                    chain\n *                  validityCheckDate the date against which the certificate\n *                    validity period should be checked. Pass null to not check\n *                    the validity period. By default, the current date is used.\n *\n * The verify callback has the following signature:\n *\n * verified - Set to true if certificate was verified, otherwise the\n *   pki.certificateError for why the certificate failed.\n * depth - The current index in the chain, where 0 is the end point's cert.\n * certs - The certificate chain, *NOTE* an empty chain indicates an anonymous\n *   end point.\n *\n * The function returns true on success and on failure either the appropriate\n * pki.certificateError or an object with 'error' set to the appropriate\n * pki.certificateError and 'message' set to a custom error message.\n *\n * @return true if successful, error thrown if not.\n */\npki.verifyCertificateChain = function(caStore, chain, options) {\n  /* From: RFC3280 - Internet X.509 Public Key Infrastructure Certificate\n    Section 6: Certification Path Validation\n    See inline parentheticals related to this particular implementation.\n\n    The primary goal of path validation is to verify the binding between\n    a subject distinguished name or a subject alternative name and subject\n    public key, as represented in the end entity certificate, based on the\n    public key of the trust anchor. This requires obtaining a sequence of\n    certificates that support that binding. That sequence should be provided\n    in the passed 'chain'. The trust anchor should be in the given CA\n    store. The 'end entity' certificate is the certificate provided by the\n    end point (typically a server) and is the first in the chain.\n\n    To meet this goal, the path validation process verifies, among other\n    things, that a prospective certification path (a sequence of n\n    certificates or a 'chain') satisfies the following conditions:\n\n    (a) for all x in {1, ..., n-1}, the subject of certificate x is\n          the issuer of certificate x+1;\n\n    (b) certificate 1 is issued by the trust anchor;\n\n    (c) certificate n is the certificate to be validated; and\n\n    (d) for all x in {1, ..., n}, the certificate was valid at the\n          time in question.\n\n    Note that here 'n' is index 0 in the chain and 1 is the last certificate\n    in the chain and it must be signed by a certificate in the connection's\n    CA store.\n\n    The path validation process also determines the set of certificate\n    policies that are valid for this path, based on the certificate policies\n    extension, policy mapping extension, policy constraints extension, and\n    inhibit any-policy extension.\n\n    Note: Policy mapping extension not supported (Not Required).\n\n    Note: If the certificate has an unsupported critical extension, then it\n    must be rejected.\n\n    Note: A certificate is self-issued if the DNs that appear in the subject\n    and issuer fields are identical and are not empty.\n\n    The path validation algorithm assumes the following seven inputs are\n    provided to the path processing logic. What this specific implementation\n    will use is provided parenthetically:\n\n    (a) a prospective certification path of length n (the 'chain')\n    (b) the current date/time: ('now').\n    (c) user-initial-policy-set: A set of certificate policy identifiers\n          naming the policies that are acceptable to the certificate user.\n          The user-initial-policy-set contains the special value any-policy\n          if the user is not concerned about certificate policy\n          (Not implemented. Any policy is accepted).\n    (d) trust anchor information, describing a CA that serves as a trust\n          anchor for the certification path. The trust anchor information\n          includes:\n\n      (1)  the trusted issuer name,\n      (2)  the trusted public key algorithm,\n      (3)  the trusted public key, and\n      (4)  optionally, the trusted public key parameters associated\n             with the public key.\n\n      (Trust anchors are provided via certificates in the CA store).\n\n      The trust anchor information may be provided to the path processing\n      procedure in the form of a self-signed certificate. The trusted anchor\n      information is trusted because it was delivered to the path processing\n      procedure by some trustworthy out-of-band procedure. If the trusted\n      public key algorithm requires parameters, then the parameters are\n      provided along with the trusted public key (No parameters used in this\n      implementation).\n\n    (e) initial-policy-mapping-inhibit, which indicates if policy mapping is\n          allowed in the certification path.\n          (Not implemented, no policy checking)\n\n    (f) initial-explicit-policy, which indicates if the path must be valid\n          for at least one of the certificate policies in the user-initial-\n          policy-set.\n          (Not implemented, no policy checking)\n\n    (g) initial-any-policy-inhibit, which indicates whether the\n          anyPolicy OID should be processed if it is included in a\n          certificate.\n          (Not implemented, so any policy is valid provided that it is\n          not marked as critical) */\n\n  /* Basic Path Processing:\n\n    For each certificate in the 'chain', the following is checked:\n\n    1. The certificate validity period includes the current time.\n    2. The certificate was signed by its parent (where the parent is either\n       the next in the chain or from the CA store). Allow processing to\n       continue to the next step if no parent is found but the certificate is\n       in the CA store.\n    3. TODO: The certificate has not been revoked.\n    4. The certificate issuer name matches the parent's subject name.\n    5. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is within one of the permitted subtrees of X.500 distinguished names\n       and that each of the alternative names in the subjectAltName extension\n       (critical or non-critical) is within one of the permitted subtrees for\n       that name type.\n    6. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is not within one of the excluded subtrees for X.500 distinguished\n       names and none of the subjectAltName extension names are excluded for\n       that name type.\n    7. The other steps in the algorithm for basic path processing involve\n       handling the policy extension which is not presently supported in this\n       implementation. Instead, if a critical policy extension is found, the\n       certificate is rejected as not supported.\n    8. If the certificate is not the first or if its the only certificate in\n       the chain (having no parent from the CA store or is self-signed) and it\n       has a critical key usage extension, verify that the keyCertSign bit is\n       set. If the key usage extension exists, verify that the basic\n       constraints extension exists. If the basic constraints extension exists,\n       verify that the cA flag is set. If pathLenConstraint is set, ensure that\n       the number of certificates that precede in the chain (come earlier\n       in the chain as implemented below), excluding the very first in the\n       chain (typically the end-entity one), isn't greater than the\n       pathLenConstraint. This constraint limits the number of intermediate\n       CAs that may appear below a CA before only end-entity certificates\n       may be issued. */\n\n  // if a verify callback is passed as the third parameter, package it within\n  // the options object. This is to support a legacy function signature that\n  // expected the verify callback as the third parameter.\n  if(typeof options === 'function') {\n    options = {verify: options};\n  }\n  options = options || {};\n\n  // copy cert chain references to another array to protect against changes\n  // in verify callback\n  chain = chain.slice(0);\n  var certs = chain.slice(0);\n\n  var validityCheckDate = options.validityCheckDate;\n  // if no validityCheckDate is specified, default to the current date. Make\n  // sure to maintain the value null because it indicates that the validity\n  // period should not be checked.\n  if(typeof validityCheckDate === 'undefined') {\n    validityCheckDate = new Date();\n  }\n\n  // verify each cert in the chain using its parent, where the parent\n  // is either the next in the chain or from the CA store\n  var first = true;\n  var error = null;\n  var depth = 0;\n  do {\n    var cert = chain.shift();\n    var parent = null;\n    var selfSigned = false;\n\n    if(validityCheckDate) {\n      // 1. check valid time\n      if(validityCheckDate < cert.validity.notBefore ||\n         validityCheckDate > cert.validity.notAfter) {\n        error = {\n          message: 'Certificate is not valid yet or has expired.',\n          error: pki.certificateError.certificate_expired,\n          notBefore: cert.validity.notBefore,\n          notAfter: cert.validity.notAfter,\n          // TODO: we might want to reconsider renaming 'now' to\n          // 'validityCheckDate' should this API be changed in the future.\n          now: validityCheckDate\n        };\n      }\n    }\n\n    // 2. verify with parent from chain or CA store\n    if(error === null) {\n      parent = chain[0] || caStore.getIssuer(cert);\n      if(parent === null) {\n        // check for self-signed cert\n        if(cert.isIssuer(cert)) {\n          selfSigned = true;\n          parent = cert;\n        }\n      }\n\n      if(parent) {\n        // FIXME: current CA store implementation might have multiple\n        // certificates where the issuer can't be determined from the\n        // certificate (happens rarely with, eg: old certificates) so normalize\n        // by always putting parents into an array\n        // TODO: there's may be an extreme degenerate case currently uncovered\n        // where an old intermediate certificate seems to have a matching parent\n        // but none of the parents actually verify ... but the intermediate\n        // is in the CA and it should pass this check; needs investigation\n        var parents = parent;\n        if(!forge.util.isArray(parents)) {\n          parents = [parents];\n        }\n\n        // try to verify with each possible parent (typically only one)\n        var verified = false;\n        while(!verified && parents.length > 0) {\n          parent = parents.shift();\n          try {\n            verified = parent.verify(cert);\n          } catch(ex) {\n            // failure to verify, don't care why, try next one\n          }\n        }\n\n        if(!verified) {\n          error = {\n            message: 'Certificate signature is invalid.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n\n      if(error === null && (!parent || selfSigned) &&\n        !caStore.hasCertificate(cert)) {\n        // no parent issuer and certificate itself is not trusted\n        error = {\n          message: 'Certificate is not trusted.',\n          error: pki.certificateError.unknown_ca\n        };\n      }\n    }\n\n    // TODO: 3. check revoked\n\n    // 4. check for matching issuer/subject\n    if(error === null && parent && !cert.isIssuer(parent)) {\n      // parent is not issuer\n      error = {\n        message: 'Certificate issuer is invalid.',\n        error: pki.certificateError.bad_certificate\n      };\n    }\n\n    // 5. TODO: check names with permitted names tree\n\n    // 6. TODO: check names against excluded names tree\n\n    // 7. check for unsupported critical extensions\n    if(error === null) {\n      // supported extensions\n      var se = {\n        keyUsage: true,\n        basicConstraints: true\n      };\n      for(var i = 0; error === null && i < cert.extensions.length; ++i) {\n        var ext = cert.extensions[i];\n        if(ext.critical && !(ext.name in se)) {\n          error = {\n            message:\n              'Certificate has an unsupported critical extension.',\n            error: pki.certificateError.unsupported_certificate\n          };\n        }\n      }\n    }\n\n    // 8. check for CA if cert is not first or is the only certificate\n    // remaining in chain with no parent or is self-signed\n    if(error === null &&\n      (!first || (chain.length === 0 && (!parent || selfSigned)))) {\n      // first check keyUsage extension and then basic constraints\n      var bcExt = cert.getExtension('basicConstraints');\n      var keyUsageExt = cert.getExtension('keyUsage');\n      if(keyUsageExt !== null) {\n        // keyCertSign must be true and there must be a basic\n        // constraints extension\n        if(!keyUsageExt.keyCertSign || bcExt === null) {\n          // bad certificate\n          error = {\n            message:\n              'Certificate keyUsage or basicConstraints conflict ' +\n              'or indicate that the certificate is not a CA. ' +\n              'If the certificate is the only one in the chain or ' +\n              'isn\\'t the first then the certificate must be a ' +\n              'valid CA.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n      // basic constraints cA flag must be set\n      if(error === null && bcExt !== null && !bcExt.cA) {\n        // bad certificate\n        error = {\n          message:\n            'Certificate basicConstraints indicates the certificate ' +\n            'is not a CA.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n      // if error is not null and keyUsage is available, then we know it\n      // has keyCertSign and there is a basic constraints extension too,\n      // which means we can check pathLenConstraint (if it exists)\n      if(error === null && keyUsageExt !== null &&\n        'pathLenConstraint' in bcExt) {\n        // pathLen is the maximum # of intermediate CA certs that can be\n        // found between the current certificate and the end-entity (depth 0)\n        // certificate; this number does not include the end-entity (depth 0,\n        // last in the chain) even if it happens to be a CA certificate itself\n        var pathLen = depth - 1;\n        if(pathLen > bcExt.pathLenConstraint) {\n          // pathLenConstraint violated, bad certificate\n          error = {\n            message:\n              'Certificate basicConstraints pathLenConstraint violated.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n    }\n\n    // call application callback\n    var vfd = (error === null) ? true : error.error;\n    var ret = options.verify ? options.verify(vfd, depth, certs) : vfd;\n    if(ret === true) {\n      // clear any set error\n      error = null;\n    } else {\n      // if passed basic tests, set default message and alert\n      if(vfd === true) {\n        error = {\n          message: 'The application rejected the certificate.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n\n      // check for custom error info\n      if(ret || ret === 0) {\n        // set custom message and error\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.error) {\n            error.error = ret.error;\n          }\n        } else if(typeof ret === 'string') {\n          // set custom error\n          error.error = ret;\n        }\n      }\n\n      // throw error\n      throw error;\n    }\n\n    // no longer first cert in chain\n    first = false;\n    ++depth;\n  } while(chain.length > 0);\n\n  return true;\n};\n","/*!\n * algorithms/aes-cbc-hmac-sha2.js - AES-CBC-HMAC-SHA2 Composited Encryption\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar helpers = require(\"./helpers.js\"),\n    HMAC = require(\"./hmac.js\"),\n    sha = require(\"./sha.js\"),\n    forge = require(\"../deps/forge.js\"),\n    DataBuffer = require(\"../util/databuffer.js\"),\n    util = require(\"../util\");\n\nfunction checkIv(iv) {\n  if (16 !== iv.length) {\n    throw new Error(\"invalid iv\");\n  }\n}\n\nfunction commonCbcEncryptFN(size) {\n  // ### 'fallback' implementation -- uses forge\n  var fallback = function(encKey, pdata, iv) {\n    try {\n      checkIv(iv);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var promise = Promise.resolve();\n\n    promise = promise.then(function() {\n      var cipher = forge.cipher.createCipher(\"AES-CBC\", new DataBuffer(encKey));\n      cipher.start({\n        iv: new DataBuffer(iv)\n      });\n\n      // TODO: chunk data\n      cipher.update(new DataBuffer(pdata));\n      if (!cipher.finish()) {\n        return Promise.reject(new Error(\"encryption failed\"));\n      }\n\n      var cdata = Buffer.from(cipher.output.bytes(), \"binary\");\n      return cdata;\n    });\n\n    return promise;\n  };\n\n  // ### WebCryptoAPI implementation\n  // TODO: cache CryptoKey sooner\n  var webcrypto = function(encKey, pdata, iv) {\n    try {\n      checkIv(iv);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var promise = Promise.resolve();\n\n    promise = promise.then(function() {\n      var alg = {\n        name: \"AES-CBC\"\n      };\n      return helpers.subtleCrypto.importKey(\"raw\", encKey, alg, true, [\"encrypt\"]);\n    });\n    promise = promise.then(function(key) {\n      var alg = {\n        name: \"AES-CBC\",\n        iv: iv\n      };\n      return helpers.subtleCrypto.encrypt(alg, key, pdata);\n    });\n    promise = promise.then(function(cdata) {\n      cdata = Buffer.from(cdata);\n      return cdata;\n    });\n\n    return promise;\n  };\n\n  // ### NodeJS implementation\n  var nodejs = function(encKey, pdata, iv) {\n    try {\n      checkIv(iv);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var promise = Promise.resolve(pdata);\n\n    promise = promise.then(function(pdata) {\n      var name = \"AES-\" + size + \"-CBC\";\n      var cipher = helpers.nodeCrypto.createCipheriv(name, encKey, iv);\n      var cdata = Buffer.concat([\n        cipher.update(pdata),\n        cipher.final()\n      ]);\n      return cdata;\n    });\n\n    return promise;\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction commonCbcDecryptFN(size) {\n  // ### 'fallback' implementation -- uses forge\n  var fallback = function(encKey, cdata, iv) {\n    // validate inputs\n    try {\n      checkIv(iv);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var promise = Promise.resolve();\n\n    promise = promise.then(function() {\n      var cipher = forge.cipher.createDecipher(\"AES-CBC\", new DataBuffer(encKey));\n      cipher.start({\n        iv: new DataBuffer(iv)\n      });\n\n      // TODO: chunk data\n      cipher.update(new DataBuffer(cdata));\n      if (!cipher.finish()) {\n        return Promise.reject(new Error(\"encryption failed\"));\n      }\n\n      var pdata = Buffer.from(cipher.output.bytes(), \"binary\");\n      return pdata;\n    });\n\n    return promise;\n  };\n\n  // ### WebCryptoAPI implementation\n  // TODO: cache CryptoKey sooner\n  var webcrypto = function(encKey, cdata, iv) {\n    // validate inputs\n    try {\n      checkIv(iv);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var promise = Promise.resolve();\n\n    promise = promise.then(function() {\n      var alg = {\n        name: \"AES-CBC\"\n      };\n      return helpers.subtleCrypto.importKey(\"raw\", encKey, alg, true, [\"decrypt\"]);\n    });\n    promise = promise.then(function(key) {\n      var alg = {\n        name: \"AES-CBC\",\n        iv: iv\n      };\n      return helpers.subtleCrypto.decrypt(alg, key, cdata);\n    });\n    promise = promise.then(function(pdata) {\n      pdata = Buffer.from(pdata);\n      return pdata;\n    });\n\n    return promise;\n  };\n\n  // ### NodeJS implementation\n  var nodejs = function(encKey, cdata, iv) {\n    // validate inputs\n    try {\n      checkIv(iv);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var promise = Promise.resolve();\n\n    promise = promise.then(function() {\n      var name = \"AES-\" + size + \"-CBC\";\n      var cipher = helpers.nodeCrypto.createDecipheriv(name, encKey, iv);\n      var pdata = Buffer.concat([\n        cipher.update(cdata),\n        cipher.final()\n      ]);\n      return pdata;\n    });\n\n    return promise;\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction checkKey(key, size) {\n  if ((size << 1) !== (key.length << 3)) {\n    throw new Error(\"invalid encryption key size\");\n  }\n}\n\nfunction cbcHmacEncryptFN(size) {\n  var commonEncrypt = commonCbcEncryptFN(size);\n  return function(key, pdata, props) {\n    // validate inputs\n    try {\n      checkKey(key, size);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var eKey = key.slice(size / 8),\n        iKey = key.slice(0, size / 8),\n        iv = props.iv || Buffer.alloc(0),\n        adata = props.aad || props.adata || Buffer.alloc(0);\n\n    // STEP 1 -- Encrypt\n    var promise = commonEncrypt(eKey, pdata, iv);\n\n    // STEP 2 -- MAC\n    promise = promise.then(function(cdata){\n      var mdata = Buffer.concat([\n        adata,\n        iv,\n        cdata,\n        helpers.int64ToBuffer(adata.length * 8)\n      ]);\n\n      var promise;\n      promise = HMAC[\"HS\" + (size * 2)].sign(iKey, mdata, {\n        length: size\n      });\n      promise = promise.then(function(result) {\n        // TODO: move slice to hmac.js\n        var tag = result.mac.slice(0, size / 8);\n        return {\n          data: cdata,\n          tag: tag\n        };\n      });\n      return promise;\n    });\n\n    return promise;\n  };\n}\n\nfunction cbcHmacDecryptFN(size) {\n  var commonDecrypt = commonCbcDecryptFN(size);\n\n  return function(key, cdata, props) {\n    // validate inputs\n    try {\n      checkKey(key, size);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var eKey = key.slice(size / 8),\n        iKey = key.slice(0, size / 8),\n        iv = props.iv || Buffer.alloc(0),\n        adata = props.aad || props.adata || Buffer.alloc(0),\n        tag = props.tag || props.mac || Buffer.alloc(0);\n\n    var promise = Promise.resolve();\n\n    // STEP 1 -- MAC\n    promise = promise.then(function() {\n      var promise;\n      // construct MAC input\n      var mdata = Buffer.concat([\n        adata,\n        iv,\n        cdata,\n        helpers.int64ToBuffer(adata.length * 8)\n      ]);\n      promise = HMAC[\"HS\" + (size * 2)].verify(iKey, mdata, tag, {\n        length: size\n      });\n      promise = promise.then(function() {\n        return cdata;\n      }, function() {\n        // failure -- invalid tag error\n        throw new Error(\"mac check failed\");\n      });\n      return promise;\n    });\n\n    // STEP 2 -- Decrypt\n    promise = promise.then(function(){\n      return commonDecrypt(eKey, cdata, iv);\n    });\n\n    return promise;\n  };\n}\n\nvar EncryptionLabel = Buffer.from(\"Encryption\", \"utf8\");\nvar IntegrityLabel = Buffer.from(\"Integrity\", \"utf8\");\nvar DotLabel = Buffer.from(\".\", \"utf8\");\n\nfunction generateCek(masterKey, alg, epu, epv) {\n  var masterSize = masterKey.length * 8;\n  var cekSize = masterSize / 2;\n  var promise = Promise.resolve();\n\n  promise = promise.then(function(){\n    var input = Buffer.concat([\n      helpers.int32ToBuffer(1),\n      masterKey,\n      helpers.int32ToBuffer(cekSize),\n      Buffer.from(alg, \"utf8\"),\n      epu,\n      epv,\n      EncryptionLabel\n    ]);\n\n    return input;\n  });\n\n  promise = promise.then( function(input) {\n    return sha[\"SHA-\" + masterSize].digest(input).then(function(digest) {\n      return digest.slice(0, cekSize / 8);\n    });\n  });\n  promise = Promise.resolve(promise);\n\n  return promise;\n}\n\nfunction generateCik(masterKey, alg, epu, epv) {\n  var masterSize = masterKey.length * 8;\n  var cikSize = masterSize;\n  var promise = Promise.resolve();\n\n  promise = promise.then(function(){\n    var input = Buffer.concat([\n      helpers.int32ToBuffer(1),\n      masterKey,\n      helpers.int32ToBuffer(cikSize),\n      Buffer.from(alg, \"utf8\"),\n      epu,\n      epv,\n      IntegrityLabel\n    ]);\n\n    return input;\n  });\n\n  promise = promise.then( function(input) {\n    return sha[\"SHA-\" + masterSize].digest(input).then(function(digest) {\n      return digest.slice(0, cikSize / 8);\n    });\n  });\n  promise = Promise.resolve(promise);\n\n  return promise;\n}\n\nfunction concatKdfCbcHmacEncryptFN(size, alg) {\n  var commonEncrypt = commonCbcEncryptFN(size);\n\n  return function(key, pdata, props) {\n    var epu = props.epu || helpers.int32ToBuffer(0),\n        epv = props.epv || helpers.int32ToBuffer(0),\n        iv = props.iv || Buffer.alloc(0),\n        adata = props.aad || props.adata || Buffer.alloc(0),\n        kdata = props.kdata || Buffer.alloc(0);\n\n    // Pre Step 1 -- Generate Keys\n    var promises = [\n      generateCek(key, alg, epu, epv),\n      generateCik(key, alg, epu, epv)\n    ];\n\n    var cek,\n        cik;\n    var promise = Promise.all(promises).then(function(keys) {\n      cek = keys[0];\n      cik = keys[1];\n    });\n\n    // STEP 1 -- Encrypt\n    promise = promise.then(function(){\n      return commonEncrypt(cek, pdata, iv);\n    });\n\n    // STEP 2 -- Mac\n    promise = promise.then(function(cdata){\n      var mdata = Buffer.concat([\n        adata,\n        DotLabel,\n        Buffer.from(kdata),\n        DotLabel,\n        Buffer.from(util.base64url.encode(iv), \"utf8\"),\n        DotLabel,\n        Buffer.from(util.base64url.encode(cdata), \"utf8\")\n      ]);\n      return Promise.all([\n        Promise.resolve(cdata),\n        HMAC[\"HS\" + (size * 2)].sign(cik, mdata, { length: size })\n      ]);\n    });\n    promise = promise.then(function(result){\n      return {\n        data: result[0],\n        tag: result[1].mac\n      };\n    });\n\n    return promise;\n  };\n}\n\nfunction concatKdfCbcHmacDecryptFN(size, alg) {\n  var commonDecrypt = commonCbcDecryptFN(size);\n\n  return function(key, cdata, props) {\n    var epu = props.epu || helpers.int32ToBuffer(0),\n        epv = props.epv || helpers.int32ToBuffer(0),\n        iv = props.iv || Buffer.alloc(0),\n        adata = props.aad || props.adata || Buffer.alloc(0),\n        kdata = props.kdata || Buffer.alloc(0),\n        tag = props.tag || props.mac || Buffer.alloc(0);\n\n    // Pre Step 1 -- Generate Keys\n    var promises = [\n      generateCek(key, alg, epu, epv),\n      generateCik(key, alg, epu, epv)\n    ];\n\n    var cek,\n        cik;\n    var promise = Promise.all(promises).then(function(keys){\n      cek = keys[0];\n      cik = keys[1];\n    });\n\n\n    // STEP 1 -- MAC\n    promise = promise.then(function() {\n      // construct MAC input\n      var mdata = Buffer.concat([\n        adata,\n        DotLabel,\n        Buffer.from(kdata),\n        DotLabel,\n        Buffer.from(util.base64url.encode(iv), \"utf8\"),\n        DotLabel,\n        Buffer.from(util.base64url.encode(cdata), \"utf8\")\n      ]);\n\n      try {\n        return HMAC[\"HS\" + (size * 2)].verify(cik, mdata, tag, {\n          loose: false\n        });\n      } catch (e) {\n        throw new Error(\"mac check failed\");\n      }\n    });\n\n    // STEP 2 -- Decrypt\n    promise = promise.then(function(){\n      return commonDecrypt(cek, cdata, iv);\n    });\n\n    return promise;\n  };\n}\n\n// ### Public API\n// * [name].encrypt\n// * [name].decrypt\nvar aesCbcHmacSha2 = {};\n[\n  \"A128CBC-HS256\",\n  \"A192CBC-HS384\",\n  \"A256CBC-HS512\"\n].forEach(function(alg) {\n  var size = parseInt(/A(\\d+)CBC-HS(\\d+)?/g.exec(alg)[1]);\n  aesCbcHmacSha2[alg] = {\n    encrypt: cbcHmacEncryptFN(size),\n    decrypt: cbcHmacDecryptFN(size)\n  };\n});\n\n[\n  \"A128CBC+HS256\",\n  \"A192CBC+HS384\",\n  \"A256CBC+HS512\"\n].forEach(function(alg) {\n  var size = parseInt(/A(\\d+)CBC\\+HS(\\d+)?/g.exec(alg)[1]);\n  aesCbcHmacSha2[alg] = {\n    encrypt: concatKdfCbcHmacEncryptFN(size, alg),\n    decrypt: concatKdfCbcHmacDecryptFN(size, alg)\n  };\n});\n\nmodule.exports = aesCbcHmacSha2;\n","/*!\n * algorithms/aes-gcm.js - AES-GCM Encryption and Key-Wrapping\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar helpers = require(\"./helpers.js\"),\n    util = require(\"../util\"),\n    CONSTANTS = require(\"./constants.js\"),\n    GCM = require(\"../deps/ciphermodes/gcm\");\n\nfunction gcmEncryptFN(size, wrap) {\n  function commonChecks(key, iv) {\n    if (size !== (key.length << 3)) {\n       throw new Error(\"invalid key size\");\n    }\n    if (!iv && !wrap) {\n      throw new Error(\"invalid iv\");\n    }\n    if (iv && 12 !== iv.length) {\n      throw new Error(\"invalid iv\");\n    }\n  }\n\n  function prepareResults(results) {\n    if (wrap) {\n      var iv = util.base64url.encode(results.iv);\n      var tag = util.base64url.encode(results.tag);\n\n      results = {\n        data: results.data,\n        header: {\n          iv: iv,\n          tag: tag\n        }\n      };\n    }\n\n    return results;\n  }\n\n  // ### 'fallback' implementation -- uses forge\n  var fallback = function(key, pdata, props) {\n    var iv = props.iv,\n        adata = props.aad || props.adata || Buffer.alloc(0),\n        cipher,\n        cdata;\n\n    // validate inputs\n    try {\n      commonChecks(key, iv, adata);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    iv = iv || util.randomBytes(12);\n\n    // setup cipher\n    cipher = GCM.createCipher({\n      key: key,\n      iv: iv,\n      additionalData: adata\n    });\n    // ciphertext is the same length as plaintext\n    cdata = Buffer.alloc(pdata.length);\n\n    var promise = new Promise(function(resolve, reject) {\n      var amt = CONSTANTS.CHUNK_SIZE,\n          clen = 0,\n          poff = 0;\n\n      (function doChunk() {\n        var plen = Math.min(amt, pdata.length - poff);\n        clen += cipher.update(pdata,\n                              poff,\n                              plen,\n                              cdata,\n                              clen);\n        poff += plen;\n        if (pdata.length > poff) {\n          setTimeout(doChunk, 0);\n          return;\n        }\n\n        // finish it\n        clen += cipher.finish(cdata, clen);\n        if (clen !== pdata.length) {\n          reject(new Error(\"encryption failed\"));\n          return;\n        }\n\n        // resolve with output\n        var tag = cipher.tag;\n        resolve(prepareResults({\n          data: cdata,\n          iv: iv,\n          tag: tag\n        }));\n      })();\n    });\n\n    return promise;\n  };\n\n  // ### WebCryptoAPI implementation\n  // TODO: cache CryptoKey sooner\n  var webcrypto = function(key, pdata, props) {\n    var iv = props.iv,\n        adata = props.aad || props.adata || Buffer.alloc(0);\n\n    try {\n      commonChecks(key, iv, adata);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    iv = iv || util.randomBytes(12);\n\n    var alg = {\n      name: \"AES-GCM\"\n    };\n    var promise;\n    promise = helpers.subtleCrypto.importKey(\"raw\", key, alg, true, [\"encrypt\"]);\n    promise = promise.then(function(key) {\n      alg.iv = iv;\n      alg.tagLength = 128;\n      if (adata.length) {\n        alg.additionalData = adata;\n      }\n\n      return helpers.subtleCrypto.encrypt(alg, key, pdata);\n    });\n    promise = promise.then(function(result) {\n      var tagStart = result.byteLength - 16;\n\n      var tag = result.slice(tagStart);\n      tag = Buffer.from(tag);\n\n      var cdata = result.slice(0, tagStart);\n      cdata = Buffer.from(cdata);\n\n      return prepareResults({\n        data: cdata,\n        iv: iv,\n        tag: tag\n      });\n    });\n\n    return promise;\n  };\n\n  // ### NodeJS implementation\n  var nodejs = function(key, pdata, props) {\n    var iv = props.iv,\n        adata = props.aad || props.adata || Buffer.alloc(0);\n\n    try {\n      commonChecks(key, iv, adata);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    iv = iv || util.randomBytes(12);\n\n    var alg = \"aes-\" + (key.length * 8) + \"-gcm\";\n    var cipher;\n    try {\n      cipher = helpers.nodeCrypto.createCipheriv(alg, key, iv);\n    } catch (err) {\n      throw new Error(\"unsupported algorithm: \" + alg);\n    }\n    if (\"function\" !== typeof cipher.setAAD) {\n      throw new Error(\"unsupported algorithm: \" + alg);\n    }\n    if (adata.length) {\n      cipher.setAAD(adata);\n    }\n\n    var cdata = Buffer.concat([\n      cipher.update(pdata),\n      cipher.final()\n    ]);\n    var tag = cipher.getAuthTag();\n\n    return prepareResults({\n      data: cdata,\n      iv: iv,\n      tag: tag\n    });\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction gcmDecryptFN(size) {\n  function commonChecks(key, iv, tag) {\n    if (size !== (key.length << 3)) {\n      throw new Error(\"invalid key size\");\n    }\n    if (12 !== iv.length) {\n      throw new Error(\"invalid iv\");\n    }\n    if (16 !== tag.length) {\n      throw new Error(\"invalid tag length\");\n    }\n  }\n\n  // ### fallback implementation -- uses forge\n  var fallback = function(key, cdata, props) {\n    var adata = props.aad || props.adata || Buffer.alloc(0),\n        iv = props.iv || Buffer.alloc(0),\n        tag = props.tag || props.mac || Buffer.alloc(0),\n        cipher,\n        pdata;\n\n    // validate inputs\n    try {\n      commonChecks(key, iv, tag);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    // setup cipher\n    cipher = GCM.createDecipher({\n      key: key,\n      iv: iv,\n      additionalData: adata,\n      tag: tag\n    });\n    // plaintext is the same length as ciphertext\n    pdata = Buffer.alloc(cdata.length);\n\n    var promise = new Promise(function(resolve, reject) {\n      var amt = CONSTANTS.CHUNK_SIZE,\n          plen = 0,\n          coff = 0;\n\n      (function doChunk() {\n        var clen = Math.min(amt, cdata.length - coff);\n        plen += cipher.update(cdata,\n                              coff,\n                              clen,\n                              pdata,\n                              plen);\n        coff += clen;\n        if (cdata.length > coff) {\n          setTimeout(doChunk, 0);\n          return;\n        }\n\n        try {\n          plen += cipher.finish(pdata, plen);\n        } catch (err) {\n          reject(new Error(\"decryption failed\"));\n          return;\n        }\n\n        if (plen !== cdata.length) {\n          reject(new Error(\"decryption failed\"));\n          return;\n        }\n\n        // resolve with output\n        resolve(pdata);\n      })();\n    });\n\n    return promise;\n  };\n\n  // ### WebCryptoAPI implementation\n  // TODO: cache CryptoKey sooner\n  var webcrypto = function(key, cdata, props) {\n    var adata = props.aad || props.adata || Buffer.alloc(0),\n        iv = props.iv || Buffer.alloc(0),\n        tag = props.tag || props.mac || Buffer.alloc(0);\n\n    // validate inputs\n    try {\n      commonChecks(key, iv, tag);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var alg = {\n      name: \"AES-GCM\"\n    };\n    var promise;\n    promise = helpers.subtleCrypto.importKey(\"raw\", key, alg, true, [\"decrypt\"]);\n    promise = promise.then(function(key) {\n      alg.iv = iv;\n      alg.tagLength = 128;\n      if (adata.length) {\n        alg.additionalData = adata;\n      }\n\n      // concatenate cdata and tag\n      cdata = Buffer.concat([cdata, tag], cdata.length + tag.length);\n\n      return helpers.subtleCrypto.decrypt(alg, key, cdata);\n    });\n    promise = promise.then(function(pdata) {\n      pdata = Buffer.from(pdata);\n      return pdata;\n    });\n\n    return promise;\n  };\n\n  var nodejs = function(key, cdata, props) {\n    var adata = props.aad || props.adata || Buffer.alloc(0),\n        iv = props.iv || Buffer.alloc(0),\n        tag = props.tag || props.mac || Buffer.alloc(0);\n\n    // validate inputs\n    try {\n      commonChecks(key, iv, tag);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var alg = \"aes-\" + (key.length * 8) + \"-gcm\";\n    var cipher;\n    try {\n      cipher = helpers.nodeCrypto.createDecipheriv(alg, key, iv);\n    } catch(err) {\n      throw new Error(\"unsupported algorithm: \" + alg);\n    }\n    if (\"function\" !== typeof cipher.setAAD) {\n      throw new Error(\"unsupported algorithm: \" + alg);\n    }\n    cipher.setAuthTag(tag);\n    if (adata.length) {\n      cipher.setAAD(adata);\n    }\n\n    try {\n      var pdata = Buffer.concat([\n        cipher.update(cdata),\n        cipher.final()\n      ]);\n\n      return pdata;\n    } catch (err) {\n      throw new Error(\"decryption failed\");\n    }\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\n// ### Public API\n// * [name].encrypt\n// * [name].decrypt\nvar aesGcm = {};\n[\n  \"A128GCM\",\n  \"A192GCM\",\n  \"A256GCM\",\n  \"A128GCMKW\",\n  \"A192GCMKW\",\n  \"A256GCMKW\"\n].forEach(function(alg) {\n  var parts = /A(\\d+)GCM(KW)?/g.exec(alg);\n  var size = parseInt(parts[1]);\n  var wrap = (parts[2] === \"KW\");\n  aesGcm[alg] = {\n    encrypt: gcmEncryptFN(size, wrap),\n    decrypt: gcmDecryptFN(size, wrap)\n  };\n});\n\nmodule.exports = aesGcm;\n","/*!\n * algorithms/aes-kw.js - AES-KW Key-Wrapping\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar helpers = require(\"./helpers.js\"),\n    forge = require(\"../deps/forge.js\"),\n    DataBuffer = require(\"../util/databuffer.js\");\n\nvar A0 = Buffer.from(\"a6a6a6a6a6a6a6a6\", \"hex\");\n\n// ### helpers\nfunction xor(a, b) {\n  var len = Math.max(a.length, b.length);\n  var result = Buffer.alloc(len);\n  for (var idx = 0; len > idx; idx++) {\n    result[idx] = (a[idx] || 0) ^ (b[idx] || 0);\n  }\n  return result;\n}\n\nfunction split(input, size) {\n  var output = [];\n  for (var idx = 0; input.length > idx; idx += size) {\n    output.push(input.slice(idx, idx + size));\n  }\n  return output;\n}\n\nfunction longToBigEndian(input) {\n  var hi = Math.floor(input / 4294967296),\n      lo = input % 4294967296;\n  var output = Buffer.alloc(8);\n  output[0] = 0xff & (hi >>> 24);\n  output[1] = 0xff & (hi >>> 16);\n  output[2] = 0xff & (hi >>> 8);\n  output[3] = 0xff & (hi >>> 0);\n  output[4] = 0xff & (lo >>> 24);\n  output[5] = 0xff & (lo >>> 16);\n  output[6] = 0xff & (lo >>> 8);\n  output[7] = 0xff & (lo >>> 0);\n  return output;\n}\n\nfunction kwEncryptFN(size) {\n  function commonChecks(key, data) {\n    if (size !== (key.length << 3)) {\n      throw new Error(\"invalid key size\");\n    }\n    if (0 < data.length && 0 !== (data.length % 8)) {\n      throw new Error(\"invalid data length\");\n    }\n  }\n\n  // ### 'fallback' implementation -- uses forge\n  var fallback = function(key, pdata) {\n    try {\n      commonChecks(key, pdata);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    // setup cipher\n    var cipher = forge.cipher.createCipher(\"AES\", new DataBuffer(key));\n\n    // split input into chunks\n    var R = split(pdata, 8);\n    var A,\n        B,\n        count;\n    A = A0;\n    for (var jdx = 0; 6 > jdx; jdx++) {\n      for (var idx = 0; R.length > idx; idx++) {\n        count = (R.length * jdx) + idx + 1;\n        B = Buffer.concat([A, R[idx]]);\n        cipher.start();\n        cipher.update(new DataBuffer(B));\n        cipher.finish();\n        B = Buffer.from(cipher.output.bytes(), \"binary\");\n\n        A = xor(B.slice(0, 8),\n                longToBigEndian(count));\n        R[idx] = B.slice(8, 16);\n      }\n    }\n    R = [A].concat(R);\n    var cdata = Buffer.concat(R);\n    return Promise.resolve({\n      data: cdata\n    });\n  };\n  // ### WebCryptoAPI implementation\n  var webcrypto = function(key, pdata) {\n    try {\n      commonChecks(key, pdata);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var alg = {\n      name: \"AES-KW\"\n    };\n    var promise = [\n      helpers.subtleCrypto.importKey(\"raw\", pdata, { name: \"HMAC\", hash: \"SHA-256\" }, true, [\"sign\"]),\n      helpers.subtleCrypto.importKey(\"raw\", key, alg, true, [\"wrapKey\"])\n    ];\n    promise = Promise.all(promise);\n    promise = promise.then(function(keys) {\n      return helpers.subtleCrypto.wrapKey(\"raw\",\n                                          keys[0], // key\n                                          keys[1], // wrappingKey\n                                          alg);\n    });\n    promise = promise.then(function(result) {\n      result = Buffer.from(result);\n\n      return {\n        data: result\n      };\n    });\n    return promise;\n  };\n  var node = function(key, pdata) {\n    try {\n      commonChecks(key, pdata);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    // split input into chunks\n    var R = split(pdata, 8),\n        iv = Buffer.alloc(16);\n    var A,\n        B,\n        count;\n    A = A0;\n    for (var jdx = 0; 6 > jdx; jdx++) {\n      for (var idx = 0; R.length > idx; idx++) {\n        count = (R.length * jdx) + idx + 1;\n        B = Buffer.concat([A, R[idx]]);\n        var cipher = helpers.nodeCrypto.createCipheriv(\"AES\" + size, key, iv);\n        B = cipher.update(B);\n\n        A = xor(B.slice(0, 8),\n                longToBigEndian(count));\n        R[idx] = B.slice(8, 16);\n      }\n    }\n    R = [A].concat(R);\n    var cdata = Buffer.concat(R);\n    return Promise.resolve({\n      data: cdata\n    });\n  };\n\n  return helpers.setupFallback(node, webcrypto, fallback);\n}\nfunction kwDecryptFN(size) {\n  function commonChecks(key, data) {\n    if (size !== (key.length << 3)) {\n      throw new Error(\"invalid key size\");\n    }\n    if (0 < (data.length - 8) && 0 !== (data.length % 8)) {\n      throw new Error(\"invalid data length\");\n    }\n  }\n\n  // ### 'fallback' implementation -- uses forge\n  var fallback = function(key, cdata) {\n    try {\n      commonChecks(key, cdata);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    // setup cipher\n    var cipher = forge.cipher.createDecipher(\"AES\", new DataBuffer(key));\n\n    // prepare inputs\n    var R = split(cdata, 8),\n        A,\n        B,\n        count;\n    A = R[0];\n    R = R.slice(1);\n    for (var jdx = 5; 0 <= jdx; --jdx) {\n      for (var idx = R.length - 1; 0 <= idx; --idx) {\n        count = (R.length * jdx) + idx + 1;\n        B = xor(A,\n                longToBigEndian(count));\n        B = Buffer.concat([B, R[idx]]);\n        cipher.start();\n        cipher.update(new DataBuffer(B));\n        cipher.finish();\n        B = Buffer.from(cipher.output.bytes(), \"binary\");\n\n        A = B.slice(0, 8);\n        R[idx] = B.slice(8, 16);\n      }\n    }\n    if (A.toString() !== A0.toString()) {\n      return Promise.reject(new Error(\"decryption failed\"));\n    }\n    var pdata = Buffer.concat(R);\n    return Promise.resolve(pdata);\n  };\n  // ### WebCryptoAPI implementation\n  var webcrypto = function(key, cdata) {\n    try {\n      commonChecks(key, cdata);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var alg = {\n      name: \"AES-KW\"\n    };\n    var promise = helpers.subtleCrypto.importKey(\"raw\", key, alg, true, [\"unwrapKey\"]);\n    promise = promise.then(function(key) {\n      return helpers.subtleCrypto.unwrapKey(\"raw\", cdata, key, alg, {name: \"HMAC\", hash: \"SHA-256\"}, true, [\"sign\"]);\n    });\n    promise = promise.then(function(result) {\n      // unwrapped CryptoKey -- extract raw\n      return helpers.subtleCrypto.exportKey(\"raw\", result);\n    });\n    promise = promise.then(function(result) {\n      result = Buffer.from(result);\n      return result;\n    });\n    return promise;\n  };\n  var node = function(key, cdata) {\n    try {\n      commonChecks(key, cdata);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    // prepare inputs\n    var R = split(cdata, 8),\n        iv = Buffer.alloc(16),\n        A,\n        B,\n        count;\n    A = R[0];\n    R = R.slice(1);\n    for (var jdx = 5; 0 <= jdx; --jdx) {\n      for (var idx = R.length - 1; 0 <= idx; --idx) {\n        count = (R.length * jdx) + idx + 1;\n        B = xor(A,\n                longToBigEndian(count));\n        B = Buffer.concat([B, R[idx], iv]);\n        var cipher = helpers.nodeCrypto.createDecipheriv(\"AES\" + size, key, iv);\n        B = cipher.update(B);\n\n        A = B.slice(0, 8);\n        R[idx] = B.slice(8, 16);\n      }\n    }\n    if (A.toString() !== A0.toString()) {\n      return Promise.reject(new Error(\"decryption failed\"));\n    }\n    var pdata = Buffer.concat(R);\n    return Promise.resolve(pdata);\n  };\n\n  return helpers.setupFallback(node, webcrypto, fallback);\n}\n\n// ### Public API\n// * [name].encrypt\n// * [name].decrypt\nvar aesKw = {};\n[\n  \"A128KW\",\n  \"A192KW\",\n  \"A256KW\"\n].forEach(function(alg) {\n  var size = parseInt(/A(\\d+)KW/g.exec(alg)[1]);\n  aesKw[alg] = {\n    encrypt: kwEncryptFN(size),\n    decrypt: kwDecryptFN(size)\n  };\n});\n\nmodule.exports = aesKw;\n","/*!\n * algorithms/concat.js - Concat Key Derivation\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar CONSTANTS = require(\"./constants.js\"),\n    sha = require(\"./sha.js\");\n\nfunction concatDeriveFn(name) {\n  name = name.replace(\"CONCAT-\", \"\");\n\n  // NOTE: no nodejs/webcrypto/fallback model, since ConcatKDF is\n  //       implemented using the SHA algorithms\n\n  var fn = function(key, props) {\n    props = props || {};\n\n    var keyLen = props.length,\n        hashLen = CONSTANTS.HASHLENGTH[name];\n    if (!keyLen) {\n      return Promise.reject(new Error(\"invalid key length\"));\n    }\n\n    // setup otherInfo\n    if (!props.otherInfo) {\n      return Promise.reject(new Error(\"invalid otherInfo\"));\n    }\n    var otherInfo = props.otherInfo;\n\n    var op = sha[name].digest;\n    var N = Math.ceil(keyLen / hashLen),\n        idx = 0,\n        okm = [];\n    function step() {\n      if (N === idx++) {\n        return Buffer.concat(okm).slice(0, keyLen);\n      }\n\n      var T = Buffer.alloc(4 + key.length + otherInfo.length);\n      T.writeUInt32BE(idx, 0);\n      key.copy(T, 4);\n      otherInfo.copy(T, 4 + key.length);\n      return op(T).then(function(result) {\n        okm.push(result);\n        return step();\n      });\n    }\n\n    return step();\n  };\n\n  return fn;\n}\n\n// Public API\n// * [name].derive\nvar concat = {};\n[\n  \"CONCAT-SHA-1\",\n  \"CONCAT-SHA-256\",\n  \"CONCAT-SHA-384\",\n  \"CONCAT-SHA-512\"\n].forEach(function(name) {\n  concat[name] = {\n    derive: concatDeriveFn(name)\n  };\n});\n\nmodule.exports = concat;\n","/*!\n * algorithms/constants.js - Constants used in Cryptographic Algorithms\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n \"use strict\";\n\nmodule.exports = {\n  CHUNK_SIZE: 1024,\n  HASHLENGTH: {\n    \"SHA-1\": 160,\n    \"SHA-256\": 256,\n    \"SHA-384\": 384,\n    \"SHA-512\": 512\n  },\n  ENCLENGTH: {\n    \"AES-128-CBC\": 128,\n    \"AES-192-CBC\": 192,\n    \"AES-256-CBC\": 256,\n    \"AES-128-KW\": 128,\n    \"AES-192-KW\": 192,\n    \"AES-256-KW\": 256\n  },\n  KEYLENGTH: {\n    \"A128CBC-HS256\": 256,\n    \"A192CBC-HS384\": 384,\n    \"A256CBC-HS512\": 512,\n    \"A128CBC+HS256\": 256,\n    \"A192CBC+HS384\": 384,\n    \"A256CBC+HS512\": 512,\n    \"A128GCM\": 128,\n    \"A192GCM\": 192,\n    \"A256GCM\": 256,\n    \"A128KW\": 128,\n    \"A192KW\": 192,\n    \"A256KW\": 256,\n    \"ECDH-ES+A128KW\": 128,\n    \"ECDH-ES+A192KW\": 192,\n    \"ECDH-ES+A256KW\": 256\n  },\n  NONCELENGTH: {\n    \"A128CBC-HS256\": 128,\n    \"A192CBC-HS384\": 128,\n    \"A256CBC-HS512\": 128,\n    \"A128CBC+HS256\": 128,\n    \"A192CBC+HS384\": 128,\n    \"A256CBC+HS512\": 128,\n    \"A128GCM\": 96,\n    \"A192GCM\": 96,\n    \"A256GCM\": 96\n  }\n};\n","/*!\n * algorithms/dir.js - Direct key mode\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nfunction dirEncryptFN(key) {\n  // NOTE: pdata unused\n  // NOTE: props unused\n  return Promise.resolve({\n    data: key,\n    once: true,\n    direct: true\n  });\n}\nfunction dirDecryptFN(key) {\n  // NOTE: pdata unused\n  // NOTE: props unused\n  return Promise.resolve(key);\n}\n\n// ### Public API\n// * [name].encrypt\n// * [name].decrypt\nvar direct = {\n  dir: {\n    encrypt: dirEncryptFN,\n    decrypt: dirDecryptFN\n  }\n};\n\nmodule.exports = direct;\n","/*!\n * algorithms/ec-util.js - Elliptic Curve Utility Functions\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar clone = require(\"lodash/clone\"),\n    ecc = require(\"../deps/ecc\"),\n    forge = require(\"../deps/forge.js\"),\n    util = require(\"../util\");\n\nvar EC_KEYSIZES = {\n  \"P-256\": 256,\n  \"P-384\": 384,\n  \"P-521\": 521\n};\n\nfunction convertToForge(key, isPublic) {\n  var parts = isPublic ?\n              [\"x\", \"y\"] :\n              [\"d\"];\n  parts = parts.map(function(f) {\n    return new forge.jsbn.BigInteger(key[f].toString(\"hex\"), 16);\n  });\n  // prefix with curve\n  parts = [key.crv].concat(parts);\n  var fn = isPublic ?\n           ecc.asPublicKey :\n           ecc.asPrivateKey;\n  return fn.apply(ecc, parts);\n}\n\nfunction convertToJWK(key, isPublic) {\n  var result = clone(key);\n  var parts = isPublic ?\n              [\"x\", \"y\"] :\n              [\"x\", \"y\", \"d\"];\n  parts.forEach(function(f) {\n    result[f] = util.base64url.encode(result[f]);\n  });\n\n  // remove potentially troublesome properties\n  delete result.key_ops;\n  delete result.use;\n  delete result.alg;\n\n  if (isPublic) {\n    delete result.d;\n  }\n\n  return result;\n}\n\nfunction convertToObj(key, isPublic) {\n  var result = clone(key);\n  var parts = isPublic ?\n              [\"x\", \"y\"] :\n              [\"d\"];\n  parts.forEach(function(f) {\n    // assume string if base64url-encoded\n    result[f] = util.asBuffer(result[f], \"base64url\");\n  });\n\n  return result;\n}\n\nvar UNCOMPRESSED = Buffer.from([0x04]);\nfunction convertToBuffer(key, isPublic) {\n  key = convertToObj(key, isPublic);\n  var result = isPublic ?\n               Buffer.concat([UNCOMPRESSED, key.x, key.y]) :\n               key.d;\n  return result;\n}\n\nfunction curveSize(crv) {\n  return EC_KEYSIZES[crv || \"\"] || NaN;\n}\n\nfunction curveNameToOid(crv) {\n  switch (crv) {\n    case \"P-256\":\n      return \"1.2.840.10045.3.1.7\";\n    case \"P-384\":\n      return \"1.3.132.0.34\";\n    case \"P-521\":\n      return \"1.3.132.0.35\";\n    default:\n      return null;\n  }\n}\n\nvar EC_OID = \"1.2.840.10045.2.1\";\nfunction convertToPEM(key, isPrivate) {\n  // curveName to OID\n  var oid = key.crv;\n  oid = curveNameToOid(oid);\n  oid = forge.asn1.oidToDer(oid);\n  // key as bytes\n  var type,\n      pub,\n      asn1;\n  if (isPrivate) {\n    type = \"EC PRIVATE KEY\";\n    pub = Buffer.concat([\n      Buffer.from([0x00, 0x04]),\n      key.x,\n      key.y\n    ]).toString(\"binary\");\n    key = key.d.toString(\"binary\");\n    asn1 = forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.SEQUENCE, true, [\n      forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.INTEGER, false, \"\\u0001\"),\n      forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.OCTETSTRING, false, key),\n      forge.asn1.create(forge.asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.OID, false, oid.bytes())\n      ]),\n      forge.asn1.create(forge.asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n        forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.BITSTRING, false, pub)\n      ])\n    ]);\n  } else {\n    type = \"PUBLIC KEY\";\n    key = Buffer.concat([\n      Buffer.from([0x00, 0x04]),\n      key.x,\n      key.y\n    ]).toString(\"binary\");\n    asn1 = forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.SEQUENCE, true, [\n      forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.SEQUENCE, true, [\n        forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.OID, false, forge.asn1.oidToDer(EC_OID).bytes()),\n        forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.OID, false, oid.bytes())\n      ]),\n      forge.asn1.create(forge.asn1.Class.UNIVERSAL, forge.asn1.Type.BITSTRING, false, key)\n    ]);\n  }\n  asn1 = forge.asn1.toDer(asn1).bytes();\n  var pem = forge.pem.encode({\n    type: type,\n    body: asn1\n  });\n  return pem;\n}\n\n// Inspired by teifip/node-webtokens/blob/master/lib/ecdsa.js\nvar ERR_MSG = \"Could not extract parameters from DER signature\";\nfunction derToConcat(signature, size) {\n  var offset = 0;\n  if (signature[offset++] !== 0x30) {\n    throw new Error(ERR_MSG);\n  }\n  var seqLength = signature[offset++];\n  if (seqLength === 0x81) {\n    seqLength = signature[offset++];\n  }\n  if (seqLength > signature.length - offset) {\n    throw new Error(ERR_MSG);\n  }\n  if (signature[offset++] !== 0x02) {\n    throw new Error(ERR_MSG);\n  }\n  var rLength = signature[offset++];\n  if (rLength > signature.length - offset - 2) {\n    throw new Error(ERR_MSG);\n  }\n  if (rLength > size + 1) {\n    throw new Error(ERR_MSG);\n  }\n  var rOffset = offset;\n  offset += rLength;\n  if (signature[offset++] !== 0x02) {\n    throw new Error(ERR_MSG);\n  }\n  var sLength = signature[offset++];\n  if (sLength !== signature.length - offset) {\n    throw new Error(ERR_MSG);\n  }\n  if (sLength > size + 1) {\n    throw new Error(ERR_MSG);\n  }\n  var sOffset = offset;\n  offset += sLength;\n  if (offset !== signature.length) {\n    throw new Error(ERR_MSG);\n  }\n  var rPadding = size - rLength;\n  var sPadding = size - sLength;\n  var dst = Buffer.alloc(rPadding + rLength + sPadding + sLength);\n  for (offset = 0; offset < rPadding; ++offset) {\n    dst[offset] = 0;\n  }\n  var rPad = Math.max(-rPadding, 0);\n  signature.copy(dst, offset, rOffset + rPad, rOffset + rLength);\n  offset = size;\n  for (var o = offset; offset < o + sPadding; ++offset) {\n    dst[offset] = 0;\n  }\n  var sPad = Math.max(-sPadding, 0);\n  signature.copy(dst, offset, sOffset + sPad, sOffset + sLength);\n  return dst;\n}\n\nfunction countPadding(buf, start, stop) {\n  var padding = 0;\n  while (start + padding < stop && buf[start + padding] === 0) {\n    ++padding;\n  }\n  var needsSign = buf[start + padding] >= 0x80;\n  if (needsSign) {\n    --padding;\n  }\n  return padding;\n}\n\nfunction concatToDer(signature, size) {\n  var rPadding = countPadding(signature, 0, size);\n  var sPadding = countPadding(signature, size, signature.length);\n  var rLength = size - rPadding;\n  var sLength = size - sPadding;\n  var rsBytes = rLength + sLength + 4;\n  var shortLength = rsBytes < 0x80;\n  var dst = Buffer.alloc((shortLength ? 2 : 3) + rsBytes);\n  var offset = 0;\n  dst[offset++] = 0x30;\n  if (shortLength) {\n    dst[offset++] = rsBytes;\n  } else {\n    dst[offset++] = 0x81;\n    dst[offset++] = rsBytes & 0xFF;\n  }\n  dst[offset++] = 0x02;\n  dst[offset++] = rLength;\n  if (rPadding < 0) {\n    dst[offset++] = 0;\n    offset += signature.copy(dst, offset, 0, size);\n  } else {\n    offset += signature.copy(dst, offset, rPadding, size);\n  }\n  dst[offset++] = 0x02;\n  dst[offset++] = sLength;\n  if (sPadding < 0) {\n    dst[offset++] = 0;\n    signature.copy(dst, offset, size);\n  } else {\n    signature.copy(dst, offset, size + sPadding);\n  }\n  return dst;\n}\n\nmodule.exports = {\n  convertToForge: convertToForge,\n  convertToJWK: convertToJWK,\n  convertToObj: convertToObj,\n  convertToBuffer: convertToBuffer,\n  curveSize: curveSize,\n  derToConcat: derToConcat,\n  concatToDer: concatToDer,\n  convertToPEM: convertToPEM,\n  EC_OID: EC_OID\n};\n","/*!\n * algorithms/ecdh.js - Elliptic Curve Diffie-Hellman algorithms\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar merge = require(\"../util/merge\"),\n    util = require(\"../util\"),\n    ecUtil = require(\"./ec-util.js\"),\n    hkdf = require(\"./hkdf.js\"),\n    concat = require(\"./concat.js\"),\n    aesKw = require(\"./aes-kw.js\"),\n    helpers = require(\"./helpers.js\"),\n    CONSTANTS = require(\"./constants.js\");\n\nvar clone = require(\"lodash/clone\");\nvar omit = require(\"lodash/omit\");\nvar pick = require(\"lodash/pick\");\n\nfunction idealHash(curve) {\n  switch (curve) {\n    case \"P-256\":\n      return \"SHA-256\";\n    case \"P-384\":\n      return \"SHA-384\";\n    case \"P-521\":\n      return \"SHA-512\";\n    default:\n      throw new Error(\"unsupported curve: \" + curve);\n  }\n}\n\n// ### Exported\nvar ecdh = module.exports = {};\n\n// ### Derivation algorithms\n// ### \"raw\" ECDH\nfunction ecdhDeriveFn() {\n  var alg = {\n    name: \"ECDH\"\n  };\n\n  var validatePublic = function(pk, form) {\n    var pubKey = pk && ecUtil.convertToForge(pk, true);\n    if (!pubKey || !pubKey.isValid()) {\n      return Promise.reject(new Error(\"invalid EC public key\"));\n    }\n\n    switch (form) {\n      case \"jwk\":\n        pubKey = ecUtil.convertToJWK(pk, true);\n        break;\n      case \"buffer\":\n        pubKey = ecUtil.convertToBuffer(pk, true);\n        break;\n    }\n    return Promise.resolve(pubKey);\n  }\n\n  // ### fallback implementation -- uses ecc + forge\n  var fallback = function(key, props) {\n    props = props || {};\n    var keyLen = props.length || 0;\n    // assume {key} is privateKey\n    // assume {props.public} is publicKey\n    var privKey = ecUtil.convertToForge(key, false);\n\n    var p = validatePublic(props.public, \"forge\");\n    p = p.then(function(pubKey) {\n      // {pubKey} is \"forge\"\n\n      var secret = privKey.computeSecret(pubKey);\n      if (keyLen) {\n        // truncate to requested key length\n        if (secret.length < keyLen) {\n          return Promise.reject(new Error(\"key length too large: \" + keyLen));\n        }\n        secret = secret.slice(0, keyLen);\n      }\n\n      return secret;\n    });\n    return p;\n  };\n\n  // ### WebCryptoAPI implementation\n  // TODO: cache CryptoKey sooner\n  var webcrypto = function(key, props) {\n    key = key || {};\n    props = props || {};\n\n    var keyLen = props.length || 0,\n        algParams = merge(clone(alg), {\n          namedCurve: key.crv\n        });\n\n    // assume {key} is privateKey\n    if (!keyLen) {\n      // calculate key length from private key size\n      keyLen = key.d.length;\n    }\n    var privKey = ecUtil.convertToJWK(key, false);\n    privKey = helpers.subtleCrypto.importKey(\"jwk\",\n                                             privKey,\n                                             algParams,\n                                             false,\n                                             [ \"deriveBits\" ]);\n\n    // assume {props.public} is publicKey\n    var pubKey = validatePublic(props.public, \"jwk\");\n    pubKey = pubKey.then(function(pubKey) {\n      // {pubKey} is \"jwk\"\n      return helpers.subtleCrypto.importKey(\"jwk\",\n                                            pubKey,\n                                            algParams,\n                                            false,\n                                            []);\n    });\n\n    var p = Promise.all([privKey, pubKey]);\n    p = p.then(function(keypair) {\n      var privKey = keypair[0],\n          pubKey = keypair[1];\n\n      var algParams = merge(clone(alg), {\n        public: pubKey\n      });\n      return helpers.subtleCrypto.deriveBits(algParams, privKey, keyLen * 8);\n    });\n    p = p.then(function(result) {\n      result = Buffer.from(result);\n      return result;\n    });\n    return p;\n  };\n\n  var nodejs = function(key, props) {\n    if (\"function\" !== typeof helpers.nodeCrypto.createECDH) {\n      throw new Error(\"unsupported algorithm: ECDH\");\n    }\n\n    props = props || {};\n    var keyLen = props.length || 0;\n    var curve;\n    switch (key.crv) {\n      case \"P-256\":\n        curve = \"prime256v1\";\n        break;\n      case \"P-384\":\n        curve = \"secp384r1\";\n        break;\n      case \"P-521\":\n        curve = \"secp521r1\";\n        break;\n      default:\n        return Promise.reject(new Error(\"invalid curve: \" + curve));\n    }\n\n    // assume {key} is privateKey\n    // assume {props.public} is publicKey\n    var privKey = ecUtil.convertToBuffer(key, false);\n\n    var p = validatePublic(props.public, \"buffer\");\n    p = p.then(function(pubKey) {\n      // {pubKey} is \"buffer\"\n      var ecdh = helpers.nodeCrypto.createECDH(curve);\n      // dummy call so computeSecret doesn't fail\n      // ecdh.generateKeys();\n      ecdh.setPrivateKey(privKey);\n      var secret = ecdh.computeSecret(pubKey);\n      if (keyLen) {\n        if (secret.length < keyLen) {\n          return Promise.reject(new Error(\"key length too large: \" + keyLen));\n        }\n        secret = secret.slice(0, keyLen);\n      }\n      return secret;\n    });\n    return p;\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction ecdhConcatDeriveFn() {\n  // NOTE: no nodejs/webcrypto/fallback model, since this algorithm is\n  //       implemented using other primitives\n\n  var fn = function(key, props) {\n    props = props || {};\n\n    var hash;\n    try {\n      hash = props.hash || idealHash(key.crv);\n      if (!hash) {\n        throw new Error(\"invalid hash: \" + hash);\n      }\n      hash.toUpperCase();\n    } catch (ex) {\n      return Promise.reject(ex);\n    }\n\n    var params = [\"public\"];\n    // derive shared secret\n    // NOTE: whitelist items from {props} for ECDH\n    var promise = ecdh.ECDH.derive(key, pick(props, params));\n    // expand\n    promise = promise.then(function(shared) {\n      // NOTE: blacklist items from {props} for ECDH\n      return concat[\"CONCAT-\" + hash].derive(shared, omit(props, params));\n    });\n    return promise;\n  };\n\n  return fn;\n}\n\nfunction ecdhHkdfDeriveFn() {\n  // NOTE: no nodejs/webcrypto/fallback model, since this algorithm is\n  //       implemented using other primitives\n\n  var fn = function(key, props) {\n    props = props || {};\n\n    var hash;\n    try {\n      hash = props.hash || idealHash(key.crv);\n      if (!hash) {\n        throw new Error(\"invalid hash: \" + hash);\n      }\n      hash.toUpperCase();\n    } catch (ex) {\n      return Promise.reject(ex);\n    }\n\n    var params = [\"public\"];\n    // derive shared secret\n    // NOTE: whitelist items from {props} for ECDH\n    var promise = ecdh.ECDH.derive(key, pick(props, params));\n    // extract-and-expand\n    promise = promise.then(function(shared) {\n      // NOTE: blacklist items from {props} for ECDH\n      return hkdf[\"HKDF-\" + hash].derive(shared, omit(props, params));\n    });\n    return promise;\n  };\n\n  return fn;\n}\n\n// ### Wrap/Unwrap algorithms\nfunction doEcdhesCommonDerive(privKey, pubKey, props) {\n  function prependLen(input) {\n    return Buffer.concat([\n      helpers.int32ToBuffer(input.length),\n      input\n    ]);\n  }\n\n  var algId = props.algorithm || \"\",\n      keyLen = CONSTANTS.KEYLENGTH[algId],\n      apu = util.asBuffer(props.apu || \"\", \"base64url\"),\n      apv = util.asBuffer(props.apv || \"\", \"base64url\");\n  var otherInfo = Buffer.concat([\n    prependLen(Buffer.from(algId, \"utf8\")),\n    prependLen(apu),\n    prependLen(apv),\n    helpers.int32ToBuffer(keyLen)\n  ]);\n\n  var params = {\n    public: pubKey,\n    length: keyLen / 8,\n    hash: \"SHA-256\",\n    otherInfo: otherInfo\n  };\n  return ecdh[\"ECDH-CONCAT\"].derive(privKey, params);\n}\n\nfunction ecdhesDirEncryptFn() {\n  // NOTE: no nodejs/webcrypto/fallback model, since this algorithm is\n  //       implemented using other primitives\n  var fn = function(key, pdata, props) {\n    props = props || {};\n\n    // {props.epk} is private\n    if (!props.epk || !props.epk.d) {\n      return Promise.reject(new Error(\"missing ephemeral private key\"));\n    }\n    var epk = ecUtil.convertToObj(props.epk, false);\n\n    // {key} is public\n    if (!key || !key.x || !key.y) {\n      return Promise.reject(new Error(\"missing static public key\"));\n    }\n    var spk = ecUtil.convertToObj(key, true);\n\n    // derive ECDH shared\n    var promise = doEcdhesCommonDerive(epk, spk, {\n      algorithm: props.enc,\n      apu: props.apu,\n      apv: props.apv\n    });\n    promise = promise.then(function(shared) {\n      return {\n        data: shared,\n        once: true,\n        direct: true\n      };\n    });\n    return promise;\n  };\n\n  return fn;\n}\nfunction ecdhesDirDecryptFn() {\n  // NOTE: no nodejs/webcrypto/fallback model, since this algorithm is\n  //       implemented using other primitives\n  var fn = function(key, cdata, props) {\n    props = props || {};\n\n    // {props.epk} is public\n    if (!props.epk || !props.epk.x || !props.epk.y) {\n      return Promise.reject(new Error(\"missing ephemeral public key\"));\n    }\n    var epk = ecUtil.convertToObj(props.epk, true);\n\n    // {key} is private\n    if (!key || !key.d) {\n      return Promise.reject(new Error(\"missing static private key\"));\n    }\n    var spk = ecUtil.convertToObj(key, false);\n\n    // derive ECDH shared\n    var promise = doEcdhesCommonDerive(spk, epk, {\n      algorithm: props.enc,\n      apu: props.apu,\n      apv: props.apv\n    });\n    promise = promise.then(function(shared) {\n      return shared;\n    });\n    return promise;\n  };\n\n  return fn;\n}\n\nfunction ecdhesKwEncryptFn(wrap) {\n  // NOTE: no nodejs/webcrypto/fallback model, since this algorithm is\n  //       implemented using other primitives\n  var fn = function(key, pdata, props) {\n    props = props || {};\n\n    // {props.epk} is private\n    if (!props.epk || !props.epk.d) {\n      return Promise.reject(new Error(\"missing ephemeral private key\"));\n    }\n    var epk = ecUtil.convertToObj(props.epk, false);\n\n    // {key} is public\n    if (!key || !key.x || !key.y) {\n      return Promise.reject(new Error(\"missing static public key\"));\n    }\n    var spk = ecUtil.convertToObj(key, true);\n\n    // derive ECDH shared\n    var promise = doEcdhesCommonDerive(epk, spk, {\n      algorithm: props.alg,\n      apu: props.apu,\n      apv: props.apv\n    });\n    promise = promise.then(function(shared) {\n      // wrap provided key with ECDH shared\n      return wrap(shared, pdata);\n    });\n    return promise;\n  };\n\n  return fn;\n}\n\nfunction ecdhesKwDecryptFn(unwrap) {\n  // NOTE: no nodejs/webcrypto/fallback model, since this algorithm is\n  //       implemented using other primitives\n  var fn = function(key, cdata, props) {\n    props = props || {};\n\n    // {props.epk} is public\n    if (!props.epk || !props.epk.x || !props.epk.y) {\n      return Promise.reject(new Error(\"missing ephemeral public key\"));\n    }\n    var epk = ecUtil.convertToObj(props.epk, true);\n\n    // {key} is private\n    if (!key || !key.d) {\n      return Promise.reject(new Error(\"missing static private key\"));\n    }\n    var spk = ecUtil.convertToObj(key, false);\n\n    // derive ECDH shared\n    var promise = doEcdhesCommonDerive(spk, epk, {\n      algorithm: props.alg,\n      apu: props.apu,\n      apv: props.apv\n    });\n    promise = promise.then(function(shared) {\n      // unwrap provided key with ECDH shared\n      return unwrap(shared, cdata);\n    });\n    return promise;\n  };\n\n  return fn;\n}\n\n// ### Public API\n// * [name].derive\n[\n  \"ECDH\",\n  \"ECDH-HKDF\",\n  \"ECDH-CONCAT\"\n].forEach(function(name) {\n  var kdf = /^ECDH(?:-(\\w+))?$/g.exec(name || \"\")[1];\n  var op = ecdh[name] = ecdh[name] || {};\n  switch (kdf || \"\") {\n    case \"CONCAT\":\n      op.derive = ecdhConcatDeriveFn();\n      break;\n    case \"HKDF\":\n      op.derive = ecdhHkdfDeriveFn();\n      break;\n    case \"\":\n      op.derive = ecdhDeriveFn();\n      break;\n    default:\n      op.derive = null;\n  }\n});\n\n// * [name].encrypt\n// * [name].decrypt\n[\n  \"ECDH-ES\",\n  \"ECDH-ES+A128KW\",\n  \"ECDH-ES+A192KW\",\n  \"ECDH-ES+A256KW\"\n].forEach(function(name) {\n  var kw = /^ECDH-ES(?:\\+(.+))?/g.exec(name || \"\")[1];\n  var op = ecdh[name] = ecdh[name] || {};\n  if (!kw) {\n    op.encrypt = ecdhesDirEncryptFn();\n    op.decrypt = ecdhesDirDecryptFn();\n  } else {\n    kw = aesKw[kw];\n    if (kw) {\n      op.encrypt = ecdhesKwEncryptFn(kw.encrypt);\n      op.decrypt = ecdhesKwDecryptFn(kw.decrypt);\n    } else {\n      op.ecrypt = op.decrypt = null;\n    }\n  }\n});\n//*/\n","/*!\n * algorithms/ecdsa.js - Elliptic Curve Digitial Signature Algorithms\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar ecUtil = require(\"./ec-util.js\"),\n    helpers = require(\"./helpers.js\"),\n    sha = require(\"./sha.js\");\n\nfunction idealCurve(hash) {\n  switch (hash) {\n    case \"SHA-256\":\n      return \"P-256\";\n    case \"SHA-384\":\n      return \"P-384\";\n    case \"SHA-512\":\n      return \"P-521\";\n    default:\n      throw new Error(\"unsupported hash: \" + hash);\n  }\n}\n\nfunction ecdsaSignFN(hash) {\n  var curve = idealCurve(hash);\n\n  // ### Fallback implementation -- uses forge\n  var fallback = function(key, pdata /*, props */) {\n    if (curve !== key.crv) {\n      return Promise.reject(new Error(\"invalid curve\"));\n    }\n    var pk = ecUtil.convertToForge(key, false);\n\n    var promise;\n    // generate hash\n    promise = sha[hash].digest(pdata);\n    // sign hash\n    promise = promise.then(function(result) {\n      result = pk.sign(result);\n      result = Buffer.concat([result.r, result.s]);\n      return {\n        data: pdata,\n        mac: result\n      };\n    });\n    return promise;\n  };\n\n  // ### WebCrypto API implementation\n  var webcrypto = function(key, pdata /*, props */) {\n    if (curve !== key.crv) {\n      return Promise.reject(new Error(\"invalid curve\"));\n    }\n    var pk = ecUtil.convertToJWK(key, false);\n\n    var promise;\n    var alg = {\n      name: \"ECDSA\",\n      namedCurve: pk.crv,\n      hash: {\n        name: hash\n      }\n    };\n    promise = helpers.subtleCrypto.importKey(\"jwk\",\n                                             pk,\n                                             alg,\n                                             true,\n                                             [ \"sign\" ]);\n    promise = promise.then(function(key) {\n      return helpers.subtleCrypto.sign(alg, key, pdata);\n    });\n    promise = promise.then(function(result) {\n      result = Buffer.from(result);\n      return {\n        data: pdata,\n        mac: result\n      };\n    });\n    return promise;\n  };\n\n  var nodejs;\n  var nodeHash = hash.toLowerCase().replace(\"-\", \"\");\n  if (helpers.nodeCrypto && helpers.nodeCrypto.getHashes().indexOf(nodeHash) > -1) {\n    nodejs = function(key, pdata) {\n      if (curve !== key.crv) {\n        return Promise.reject(new Error(\"invalid curve\"));\n      }\n\n      var promise;\n      promise = Promise.resolve(helpers.nodeCrypto.createSign(nodeHash));\n      promise = promise.then(function (sign) {\n        sign.update(pdata);\n        return sign;\n      });\n\n      var size;\n\n      switch (nodeHash.slice(-3)) {\n        case \"384\":\n          size = 48;\n          break;\n        case \"512\":\n          size = 66;\n          break;\n        default:\n          size = 32;\n      }\n\n      promise = promise.then(function (sign) {\n        return ecUtil.derToConcat(sign.sign(ecUtil.convertToPEM(key, true)), size);\n      });\n\n      promise = promise.then(function (result) {\n        return {\n          data: pdata,\n          mac: result\n        };\n      });\n\n      return promise;\n    };\n  }\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction ecdsaVerifyFN(hash) {\n  var curve = idealCurve(hash);\n\n  // ### Fallback implementation -- uses forge\n  var fallback = function(key, pdata, mac /*, props */) {\n    if (curve !== key.crv) {\n      return Promise.reject(new Error(\"invalid curve\"));\n    }\n    var pk = ecUtil.convertToForge(key, true);\n\n    var promise;\n    // generate hash\n    promise = sha[hash].digest(pdata);\n    // verify hash\n    promise = promise.then(function(result) {\n      var len = mac.length / 2;\n      var rs = {\n        r: mac.slice(0, len),\n        s: mac.slice(len)\n      };\n      if (!pk.verify(result, rs)) {\n        return Promise.reject(new Error(\"verification failed\"));\n      }\n      return {\n        data: pdata,\n        mac: mac,\n        valid: true\n      };\n    });\n    return promise;\n  };\n\n  // ### WebCrypto API implementation\n  var webcrypto = function(key, pdata, mac /* , props */) {\n    if (curve !== key.crv) {\n      return Promise.reject(new Error(\"invalid curve\"));\n    }\n    var pk = ecUtil.convertToJWK(key, true);\n\n    var promise;\n    var alg = {\n      name: \"ECDSA\",\n      namedCurve: pk.crv,\n      hash: {\n        name: hash\n      }\n    };\n    promise = helpers.subtleCrypto.importKey(\"jwk\",\n                                             pk,\n                                             alg,\n                                             true,\n                                             [\"verify\"]);\n    promise = promise.then(function(key) {\n      return helpers.subtleCrypto.verify(alg, key, mac, pdata);\n    });\n    promise = promise.then(function(result) {\n      if (!result) {\n        return Promise.reject(new Error(\"verification failed\"));\n      }\n      return {\n        data: pdata,\n        mac: mac,\n        valid: true\n      };\n    });\n    return promise;\n  };\n\n  var nodejs;\n  var nodeHash = hash.toLowerCase().replace(\"-\", \"\");\n  if (helpers.nodeCrypto && helpers.nodeCrypto.getHashes().indexOf(nodeHash) > -1) {\n    nodejs = function(key, pdata, mac /* , props */) {\n      if (curve !== key.crv) {\n        return Promise.reject(new Error(\"invalid curve\"));\n      }\n\n      var size;\n      switch (nodeHash.slice(-3)) {\n        case \"384\":\n          size = 48;\n          break;\n        case \"512\":\n          size = 66;\n          break;\n        default:\n          size = 32;\n      }\n\n      var promise;\n      promise = Promise.resolve(helpers.nodeCrypto.createVerify(nodeHash));\n      promise = promise.then(function (verify) {\n        verify.update(pdata);\n        verify.end();\n        return verify.verify(ecUtil.convertToPEM(key, false), ecUtil.concatToDer(mac, size));\n      });\n      promise = promise.then(function (result) {\n        if (!result) {\n          throw new Error(\"verification failed\");\n        }\n        return {\n          data: pdata,\n          mac: mac,\n          valid: true\n        };\n      });\n\n      return promise;\n    };\n  }\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\n// ### Public API\nvar ecdsa = {};\n\n// * [name].sign\n// * [name].verify\n[\n  \"ES256\",\n  \"ES384\",\n  \"ES512\"\n].forEach(function(name) {\n  var hash = name.replace(/ES(\\d+)/g, function(m, size) {\n    return \"SHA-\" + size;\n  });\n  ecdsa[name] = {\n    sign: ecdsaSignFN(hash),\n    verify: ecdsaVerifyFN(hash)\n  };\n});\n\nmodule.exports = ecdsa;\n","/*!\n * algorithms/helpers.js - Internal functions and fields used in Cryptographic\n * Algorithms\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nif (typeof Promise === \"undefined\") {\n  require(\"es6-promise\").polyfill();\n}\n\n// ###\nexports.int32ToBuffer = function(v, b) {\n  b = b || Buffer.alloc(4);\n  b[0] = (v >>> 24) & 0xff;\n  b[1] = (v >>> 16) & 0xff;\n  b[2] = (v >>> 8) & 0xff;\n  b[3] = v & 0xff;\n  return b;\n};\n\nvar MAX_INT32 = Math.pow(2, 32);\nexports.int64ToBuffer = function(v, b) {\n  b = b || Buffer.alloc(8);\n  var hi = Math.floor(v / MAX_INT32),\n      lo = v % MAX_INT32;\n  hi = exports.int32ToBuffer(hi);\n  lo = exports.int32ToBuffer(lo);\n  b = Buffer.concat([hi, lo]);\n  return b;\n};\n\n// ### crypto and DOMException in browsers ###\n/* global crypto:false, DOMException:false */\n\nfunction getCryptoSubtle() {\n  if (\"undefined\" !== typeof crypto) {\n    if (\"undefined\" !== typeof crypto.subtle) {\n      return crypto.subtle;\n    }\n  }\n\n  return undefined;\n}\nfunction getCryptoNodeJS() {\n  var crypto;\n  try {\n    crypto = require(\"crypto\");\n  } catch (err) {\n    return undefined;\n  }\n\n  if (!Object.keys(crypto).length) {\n    // treat empty the same as missing\n    return undefined;\n  }\n\n  return crypto;\n}\n\nvar supported = {};\nObject.defineProperty(exports, \"subtleCrypto\", {\n  get: function() {\n    var result;\n\n    if (\"subtleCrypto\" in supported) {\n      result = supported.subtleCrypto;\n    } else {\n      result = supported.subtleCrypto = getCryptoSubtle();\n    }\n\n    return result;\n  },\n  enumerable: true\n});\nObject.defineProperty(exports, \"nodeCrypto\", {\n  get: function() {\n    var result;\n\n    if (\"nodeCrypto\" in supported) {\n      result = supported.nodeCrypto;\n    } else {\n      result = supported.nodeCrypto = getCryptoNodeJS();\n    }\n\n    return result;\n  },\n  enumerable: true\n});\n\nexports.setupFallback = function(nodejs, webcrypto, fallback) {\n  var impl;\n\n  if (nodejs && exports.nodeCrypto) {\n    impl = function main() {\n      var args = arguments,\n          promise;\n\n      function check(err) {\n        if (0 === err.message.indexOf(\"unsupported algorithm:\")) {\n          impl = fallback;\n          return impl.apply(null, args);\n        }\n\n        return Promise.reject(err);\n      }\n\n      try {\n        promise = Promise.resolve(nodejs.apply(null, args));\n      } catch(err) {\n        promise = check(err);\n      }\n\n      return promise;\n    };\n  } else if (webcrypto && exports.subtleCrypto) {\n    impl = function main() {\n      var args = arguments,\n         promise;\n\n      function check(err) {\n        if (err.code === DOMException.NOT_SUPPORTED_ERR ||\n            // Firefox rejects some operations erroneously complaining about inputs\n            err.message === \"Only ArrayBuffer and ArrayBufferView objects can be passed as CryptoOperationData\" ||\n            // MS Edge rejects with not an Error\n            !(err instanceof Error)) {\n          // not actually supported -- always use fallback\n          impl = fallback;\n          return impl.apply(null, args);\n        }\n\n       return Promise.reject(err);\n      }\n\n      try {\n        promise = webcrypto.apply(null, args);\n        promise = promise.catch(check);\n      } catch(err) {\n        promise = check(err);\n      }\n\n      return promise;\n    };\n  } else {\n    impl = fallback;\n  }\n\n  return impl;\n};\n","/*!\n * algorithms/hkdf.js - HMAC-based Extract-and-Expand Key Derivation\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar CONSTANTS = require(\"./constants.js\"),\n    hmac = require(\"./hmac.js\");\n\nfunction hkdfDeriveFn(name) {\n  var hash = name.replace(\"HKDF-\", \"\"),\n      op = name.replace(\"HKDF-SHA-\", \"HS\");\n\n  // NOTE: no nodejs/webcrypto/fallback model, since this HKDF is\n  //       implemented using the HMAC algorithms\n\n  var fn = function(key, props) {\n    var hashLen = CONSTANTS.HASHLENGTH[hash] / 8;\n\n    if (\"string\" === typeof op) {\n      op = hmac[op].sign;\n    }\n\n    // prepare options\n    props = props || {};\n    var salt = props.salt;\n    if (!salt || 0 === salt.length) {\n      salt = Buffer.alloc(hashLen);\n    }\n    var info = props.info || Buffer.alloc(0);\n    var keyLen = props.length || hashLen;\n\n    var promise;\n\n    // Setup Expansion\n    var N = Math.ceil(keyLen / hashLen),\n        okm = [],\n        idx = 0;\n    function expand(key, T) {\n      if (N === idx++) {\n        return Buffer.concat(okm).slice(0, keyLen);\n      }\n\n      if (!T) {\n        T = Buffer.alloc(0);\n      }\n      T = Buffer.concat([T, info, Buffer.from([idx])]);\n      T = op(key, T);\n      T = T.then(function(result) {\n        T = result.mac;\n        okm.push(T);\n\n        return expand(key, T);\n      });\n      return T;\n    }\n\n    // Step 1: Extract\n    promise = op(salt, key, { length: salt.length * 8 });\n    promise = promise.then(function(result) {\n      // Step 2: Expand\n      return expand(result.mac);\n    });\n\n    return promise;\n  };\n\n  return fn;\n}\n\n// Public API\n// * [name].derive\nvar hkdf = {};\n[\n  \"HKDF-SHA-1\",\n  \"HKDF-SHA-256\",\n  \"HKDF-SHA-384\",\n  \"HKDF-SHA-512\"\n].forEach(function(name) {\n  hkdf[name] = {\n    derive: hkdfDeriveFn(name)\n  };\n});\n\nmodule.exports = hkdf;\n","/*!\n * algorithms/hmac.js - HMAC-based \"signatures\"\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar CONSTANTS = require(\"./constants\"),\n    forge = require(\"../deps/forge.js\"),\n    DataBuffer = require(\"../util/databuffer.js\"),\n    helpers = require(\"./helpers.js\");\n\nfunction hmacSignFN(name) {\n  var md = name.replace(\"HS\", \"SHA\").toLowerCase(),\n      hash = name.replace(\"HS\", \"SHA-\");\n\n  function checkKeyLength(len, key) {\n    len = (len || CONSTANTS.HASHLENGTH[hash]) / 8;\n    if (len > key.length) {\n      return Promise.reject(new Error(\"invalid key length\"));\n    }\n\n    return Promise.resolve(key);\n  }\n\n  // ### Fallback Implementation -- uses forge\n  var fallback = function(key, pdata, props) {\n    props = props || {};\n    var promise;\n    promise = checkKeyLength(props.length, key);\n    promise = promise.then(function() {\n      var sig = forge.hmac.create();\n      sig.start(md, key.toString(\"binary\"));\n      sig.update(pdata.toString(\"binary\"));\n      sig = Buffer.from(sig.digest().bytes(), \"binary\");\n\n      return {\n        data: pdata,\n        mac: sig\n      }\n    });\n    return promise;\n  };\n\n  // ### WebCryptoAPI Implementation\n  var webcrypto = function(key, pdata, props) {\n    props = props || {};\n\n    var alg = {\n      name: \"HMAC\",\n      hash: {\n        name: hash\n      }\n    };\n    var promise;\n    promise = checkKeyLength(props.length, key);\n    promise = promise.then(function() {\n      return helpers.subtleCrypto.importKey(\"raw\", key, alg, true, [\"sign\"]);\n    });\n    promise = promise.then(function(key) {\n      return helpers.subtleCrypto.sign(alg, key, pdata);\n    });\n    promise = promise.then(function(result) {\n      var sig = Buffer.from(result);\n      return {\n        data: pdata,\n        mac: sig\n      };\n    });\n\n    return promise;\n  };\n\n  // ### NodeJS implementation\n  var nodejs = function(key, pdata, props) {\n    props = props || {};\n\n    var promise;\n    promise = checkKeyLength(props.length, key);\n    promise = promise.then(function() {\n      var hmac = helpers.nodeCrypto.createHmac(md, key);\n      hmac.update(pdata);\n\n      var sig = hmac.digest();\n      return {\n        data: pdata,\n        mac: sig\n      };\n    });\n    return promise;\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction hmacVerifyFN(name) {\n  var md = name.replace(\"HS\", \"SHA\").toLowerCase(),\n      hash = name.replace(\"HS\", \"SHA-\");\n\n  function compare(len, expected, actual) {\n    len = (len || CONSTANTS.HASHLENGTH[hash]) / 8;\n    var valid = true;\n    for (var idx = 0; len > idx; idx++) {\n      valid = valid && (expected[idx] === actual[idx]);\n    }\n    return valid;\n  }\n\n  // ### Fallback Implementation -- uses forge\n  var fallback = function(key, pdata, mac, props) {\n    props = props || {};\n\n    var vrfy = forge.hmac.create();\n    vrfy.start(md, new DataBuffer(key));\n    vrfy.update(pdata.toString(\"binary\"));\n    vrfy = Buffer.from(vrfy.digest().bytes(), \"binary\");\n\n    if (compare(props.length, mac, vrfy)) {\n      return Promise.resolve({\n        data: pdata,\n        mac: mac,\n        valid: true\n      });\n    } else {\n      return Promise.reject(new Error(\"verification failed\"));\n    }\n  };\n\n  var webcrypto = function(key, pdata, mac, props) {\n    props = props || {};\n\n    var alg = {\n      name: \"HMAC\",\n      hash: {\n        name: hash\n      }\n    };\n    var promise;\n    if (props.length) {\n      promise = helpers.subtleCrypto.importKey(\"raw\", key, alg, true, [\"sign\"]);\n      promise = promise.then(function(key) {\n        return helpers.subtleCrypto.sign(alg, key, pdata);\n      });\n      promise = promise.then(function(result) {\n        var sig = Buffer.from(result);\n        return compare(props.length, mac, sig);\n      });\n    } else {\n      promise = helpers.subtleCrypto.importKey(\"raw\", key, alg, true, [\"verify\"]);\n      promise = promise.then(function(key) {\n        return helpers.subtleCrypto.verify(alg, key, mac, pdata);\n      });\n    }\n    promise = promise.then(function(result) {\n      if (!result) {\n        return Promise.reject(new Error(\"verifaction failed\"));\n      }\n\n      return {\n        data: pdata,\n        mac: mac,\n        valid: true\n      };\n    });\n\n    return promise;\n  };\n\n  var nodejs = function(key, pdata, mac, props) {\n    props = props || {};\n\n    var hmac = helpers.nodeCrypto.createHmac(md, key);\n    hmac.update(pdata);\n\n    var sig = hmac.digest();\n    if (!compare(props.length, mac, sig)) {\n      throw new Error(\"verification failed\");\n    }\n    return {\n      data: pdata,\n      mac: sig,\n      valid: true\n    };\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\n// ### Public API\n// * [name].sign\n// * [name].verify\nvar hmac = {};\n[\n  \"HS1\",\n  \"HS256\",\n  \"HS384\",\n  \"HS512\"\n].forEach(function(alg) {\n  hmac[alg] = {\n    sign: hmacSignFN(alg),\n    verify: hmacVerifyFN(alg)\n  };\n});\n\nmodule.exports = hmac;\n","/*!\n * algorithms/index.js - Cryptographic Algorithms Entry Point\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\n// setup implementations\nvar implementations = [\n  require(\"./aes-cbc-hmac-sha2.js\"),\n  require(\"./aes-gcm.js\"),\n  require(\"./aes-kw.js\"),\n  require(\"./concat.js\"),\n  require(\"./dir.js\"),\n  require(\"./ecdh.js\"),\n  require(\"./ecdsa.js\"),\n  require(\"./hkdf.js\"),\n  require(\"./hmac.js\"),\n  require(\"./pbes2.js\"),\n  require(\"./rsaes.js\"),\n  require(\"./rsassa.js\"),\n  require(\"./sha.js\")\n];\n\nvar ALGS_DIGEST = {};\nvar ALGS_DERIVE = {};\nvar ALGS_SIGN = {},\n    ALGS_VRFY = {};\nvar ALGS_ENC = {},\n    ALGS_DEC = {};\n\nimplementations.forEach(function(mod) {\n  Object.keys(mod).forEach(function(alg) {\n    var op = mod[alg];\n\n    if (\"function\" === typeof op.encrypt) {\n      ALGS_ENC[alg] = op.encrypt;\n    }\n    if (\"function\" === typeof op.decrypt) {\n      ALGS_DEC[alg] = op.decrypt;\n    }\n    if (\"function\" === typeof op.sign) {\n      ALGS_SIGN[alg] = op.sign;\n    }\n    if (\"function\" === typeof op.verify) {\n      ALGS_VRFY[alg] = op.verify;\n    }\n    if (\"function\" === typeof op.digest) {\n      ALGS_DIGEST[alg] = op.digest;\n    }\n    if (\"function\" === typeof op.derive) {\n      ALGS_DERIVE[alg] = op.derive;\n    }\n  });\n});\n\n// public API\nexports.digest = function(alg, data, props) {\n  var op = ALGS_DIGEST[alg];\n  if (!op) {\n    return Promise.reject(new Error(\"unsupported algorithm: \" + alg));\n  }\n\n  return op(data, props);\n};\n\nexports.derive = function(alg, key, props) {\n  var op = ALGS_DERIVE[alg];\n  if (!op) {\n    return Promise.reject(new Error(\"unsupported algorithm: \" + alg));\n  }\n\n  return op(key, props);\n};\n\nexports.sign = function(alg, key, pdata, props) {\n  var op = ALGS_SIGN[alg];\n  if (!op) {\n    return Promise.reject(new Error(\"unsupported algorithm: \" + alg));\n  }\n\n  return op(key, pdata, props || {});\n};\n\nexports.verify = function(alg, key, pdata, mac, props) {\n  var op = ALGS_VRFY[alg];\n  if (!op) {\n    return Promise.reject(new Error(\"unsupported algorithm: \" + alg));\n  }\n\n  return op(key, pdata, mac, props || {});\n};\n\nexports.encrypt = function(alg, key, pdata, props) {\n  var op = ALGS_ENC[alg];\n  if (!op) {\n    return Promise.reject(new Error(\"unsupported algorithm: \" + alg));\n  }\n\n  return op(key, pdata, props || {});\n};\n\nexports.decrypt = function(alg, key, cdata, props) {\n  var op = ALGS_DEC[alg];\n  if (!op) {\n    return Promise.reject(new Error(\"unsupported algorithm: \" + alg));\n  }\n\n  return op(key, cdata, props || {});\n};\n","/*!\n * algorithms/pbes2.js - Password-Based Encryption (v2) Algorithms\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../deps/forge.js\"),\n    merge = require(\"../util/merge.js\"),\n    util = require(\"../util\"),\n    helpers = require(\"./helpers.js\"),\n    CONSTANTS = require(\"./constants.js\"),\n    KW = require(\"./aes-kw.js\");\n\nvar NULL_BUFFER = Buffer.from([0]);\nvar DEFAULT_ITERATIONS = 8192;\nvar DEFAULT_SALT_LENGTH = 16;\n\nfunction fixSalt(hmac, kw, salt) {\n  var alg = \"PBES2-\" + hmac + \"+\" + kw;\n  var output = [\n    Buffer.from(alg, \"utf8\"),\n    NULL_BUFFER,\n    salt\n  ];\n  return Buffer.concat(output);\n}\n\nfunction pbkdf2Fn(hash) {\n  function prepareProps(props) {\n    props = props || {};\n    var keyLen = props.length || 0;\n    var salt = util.asBuffer(props.salt || Buffer.alloc(0), \"base64u4l\"),\n        itrs = props.iterations || 0;\n\n    if (0 >= keyLen) {\n      throw new Error(\"invalid key length\");\n    }\n    if (0 >= itrs) {\n      throw new Error(\"invalid iteration count\");\n    }\n\n    props.length = keyLen;\n    props.salt = salt;\n    props.iterations = itrs;\n\n    return props;\n  }\n\n  var fallback = function(key, props) {\n    try {\n      props = prepareProps(props);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var keyLen = props.length,\n        salt = props.salt,\n        itrs = props.iterations;\n\n    var promise = new Promise(function(resolve, reject) {\n      var md = forge.md[hash.replace(\"-\", \"\").toLowerCase()].create();\n      var cb = function(err, dk) {\n        if (err) {\n          reject(err);\n        } else {\n          dk = Buffer.from(dk, \"binary\");\n          resolve(dk);\n        }\n      };\n\n      forge.pkcs5.pbkdf2(key.toString(\"binary\"),\n                         salt.toString(\"binary\"),\n                         itrs,\n                         keyLen,\n                         md,\n                         cb);\n    });\n    return promise;\n  };\n  var webcrypto = function(key, props) {\n    try {\n      props = prepareProps(props);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var keyLen = props.length,\n        salt = props.salt,\n        itrs = props.iterations;\n\n    var promise = Promise.resolve(key);\n    promise = promise.then(function(keyval) {\n      return helpers.subtleCrypto.importKey(\"raw\", keyval, \"PBKDF2\", false, [\"deriveBits\"]);\n    });\n    promise = promise.then(function(key) {\n      var mainAlgo = {\n        name: \"PBKDF2\",\n        salt: new Uint8Array(salt),\n        iterations: itrs,\n        hash: hash\n      };\n\n      return helpers.subtleCrypto.deriveBits(mainAlgo, key, keyLen * 8);\n    });\n    promise = promise.then(function(result) {\n      return util.asBuffer(result);\n    });\n    return promise;\n  };\n  var nodejs = function(key, props) {\n    if (6 > helpers.nodeCrypto.pbkdf2.length) {\n      throw new Error(\"unsupported algorithm: PBKDF2-\" + hash);\n    }\n\n    try {\n      props = prepareProps(props);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    var keyLen = props.length,\n        salt = props.salt,\n        itrs = props.iterations;\n\n        var md = hash.replace(\"-\", \"\");\n    var promise = new Promise(function(resolve, reject) {\n      function cb(err, dk) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(dk);\n        }\n      }\n      helpers.nodeCrypto.pbkdf2(key, salt, itrs, keyLen, md, cb);\n    });\n    return promise;\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction pbes2EncryptFN(hmac, kw) {\n  var deriveAlg = \"PBKDF2-\" + hmac.replace(\"HS\", \"SHA-\");\n  var keyLen = CONSTANTS.KEYLENGTH[kw] / 8;\n\n  return function(key, pdata, props) {\n    props = props || {};\n\n    var salt = util.asBuffer(props.p2s || Buffer.alloc(0), \"base64url\"),\n      itrs = props.p2c || DEFAULT_ITERATIONS;\n\n    if (0 >= itrs) {\n      throw new Error(\"invalid iteration count\");\n    }\n    if (0 === salt.length) {\n      salt = util.randomBytes(DEFAULT_SALT_LENGTH);\n    } else if (8 > salt.length) {\n      throw new Error(\"salt too small\");\n    }\n    var header = {\n      p2s: util.base64url.encode(salt),\n      p2c: itrs\n    };\n    salt = fixSalt(hmac, kw, salt);\n    props = merge(props, {\n      salt: salt,\n      iterations: itrs,\n      length: keyLen\n    });\n\n    var promise = Promise.resolve(key);\n    // STEP 1: derive shared key\n    promise = promise.then(function (key) {\n      return pbes2[deriveAlg].derive(key, props);\n    });\n    // STEP 2: encrypt cek\n    promise = promise.then(function (dk) {\n      return KW[kw].encrypt(dk, pdata);\n    });\n    // STEP 3: (re-)apply headers\n    promise = promise.then(function (results) {\n      results.header = merge(results.header || {}, header);\n      return results;\n    });\n\n    return promise;\n  };\n}\n\nfunction pbes2DecryptFN(hmac, kw) {\n  var deriveAlg = \"PBKDF2-\" + hmac.replace(\"HS\", \"SHA-\");\n  var keyLen = CONSTANTS.KEYLENGTH[kw] / 8;\n\n  return function(key, cdata, props) {\n    props = props || {};\n\n    var salt = util.asBuffer(props.p2s || Buffer.alloc(0), \"base64url\"),\n        itrs = props.p2c || 0;\n\n    if (0 >= itrs) {\n      return Promise.reject(new Error(\"invalid iteration count\"));\n    }\n\n    if (8 > salt.length) {\n      return Promise.reject(new Error(\"salt too small\"));\n    }\n    salt = fixSalt(hmac, kw, salt);\n    props = merge(props, {\n      salt: salt,\n      iterations: itrs,\n      length: keyLen\n    });\n\n    var promise = Promise.resolve(key);\n\n    // STEP 1: derived shared key\n    promise = promise.then(function(key) {\n      return pbes2[deriveAlg].derive(key, props);\n    });\n    // STEP 2: decrypt cek\n    promise = promise.then(function(dk) {\n      return KW[kw].decrypt(dk, cdata);\n    });\n\n    return promise;\n  };\n}\n\n// ### Public API\nvar pbes2 = {};\n\n// * [name].derive\n[\n  \"PBKDF2-SHA-256\",\n  \"PBKDF2-SHA-384\",\n  \"PBKDF2-SHA-512\"\n].forEach(function(alg) {\n  var hash = alg.replace(\"PBKDF2-\", \"\");\n  pbes2[alg] = {\n    derive: pbkdf2Fn(hash)\n  };\n});\n\n// [name].encrypt\n// [name].decrypt\n[\n  \"PBES2-HS256+A128KW\",\n  \"PBES2-HS384+A192KW\",\n  \"PBES2-HS512+A256KW\"\n].forEach(function(alg) {\n  var parts = /PBES2-(HS\\d+)\\+(A\\d+KW)/g.exec(alg);\n  var hmac = parts[1],\n      kw = parts[2];\n  pbes2[alg] = {\n    encrypt: pbes2EncryptFN(hmac, kw),\n    decrypt: pbes2DecryptFN(hmac, kw)\n  };\n});\n\nmodule.exports = pbes2;\n","/*!\n * algorithms/rsa-util.js - RSA Utility Functions\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar clone = require(\"lodash/clone\"),\n    forge = require(\"../deps/forge.js\"),\n    util = require(\"../util\");\n\n// ### RSA-specific Helpers\nfunction convertToForge(key, isPublic) {\n  var parts = isPublic ?\n              [\"n\", \"e\"] :\n              [\"n\", \"e\", \"d\", \"p\", \"q\", \"dp\", \"dq\", \"qi\"];\n  parts = parts.map(function(f) {\n    return new forge.jsbn.BigInteger(key[f].toString(\"hex\"), 16);\n  });\n\n  var fn = isPublic ?\n           forge.pki.rsa.setPublicKey :\n           forge.pki.rsa.setPrivateKey;\n  return fn.apply(forge.pki.rsa, parts);\n}\n\nfunction convertToJWK(key, isPublic) {\n  var result = clone(key);\n  var parts = isPublic ?\n              [\"n\", \"e\"] :\n              [\"n\", \"e\", \"d\", \"p\", \"q\", \"dp\", \"dq\", \"qi\"];\n  parts.forEach(function(f) {\n    result[f] = util.base64url.encode(result[f]);\n  });\n\n  // remove potentially troublesome properties\n  delete result.key_ops;\n  delete result.use;\n  delete result.alg;\n\n  if (isPublic) {\n    delete result.d;\n    delete result.p;\n    delete result.q;\n    delete result.dp;\n    delete result.dq;\n    delete result.qi;\n  }\n\n  return result;\n}\n\nfunction convertToPem(key, isPublic) {\n  var cacheKey = isPublic ? \"__cachedPublicPem\" : \"__cachedPrivatePem\";\n  if (key[cacheKey]) {\n    return key[cacheKey];\n  }\n\n  var value;\n  if (isPublic) {\n    value = forge.pki.publicKeyToPem(convertToForge(key, isPublic));\n  } else {\n    value = forge.pki.privateKeyToPem(convertToForge(key, isPublic));\n  }\n\n  Object.defineProperty(key, cacheKey, { value: value });\n  return value;\n}\n\nmodule.exports = {\n  convertToForge: convertToForge,\n  convertToJWK: convertToJWK,\n  convertToPem: convertToPem\n};\n","/*!\n * algorithms/rsaes.js - RSA Signatures\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../deps/forge.js\"),\n    helpers = require(\"./helpers.js\"),\n    DataBuffer = require(\"../util/databuffer.js\"),\n    rsaUtil = require(\"./rsa-util.js\");\n\nvar nodeSupport = {\n  \"RSA-OAEP\": \"RSA_PKCS1_OAEP_PADDING\",\n  RSA1_5: \"RSA_PKCS1_PADDING\"\n};\n\nfunction nodeSupportCheck(name) {\n  return helpers.nodeCrypto && helpers.nodeCrypto.constants && Object.keys(nodeSupport).indexOf(name) !== -1;\n}\n\n// ### RSAES-PKCS1-v1_5\n\n// ### RSAES-OAEP\nfunction rsaesEncryptFn(name) {\n  var alg = {\n    name: name\n  };\n\n  if (\"RSA-OAEP-256\" === name) {\n    alg.name = \"RSA-OAEP\";\n    alg.hash = {\n      name: \"SHA-256\"\n    };\n  } else if (\"RSA-OAEP\" === name) {\n    alg.hash = {\n      name: \"SHA-1\"\n    };\n  } else {\n    alg.name = \"RSAES-PKCS1-v1_5\";\n  }\n\n  // ### Fallback Implementation -- uses forge\n  var fallback = function(key, pdata) {\n    // convert pdata to byte string\n    pdata = new DataBuffer(pdata).bytes();\n\n    // encrypt it\n    var pki = rsaUtil.convertToForge(key, true),\n        params = {};\n    if (\"RSA-OAEP\" === alg.name) {\n      params.md = alg.hash.name.toLowerCase().replace(/-/g, \"\");\n      params.md = forge.md[params.md].create();\n    }\n    var cdata = pki.encrypt(pdata, alg.name.toUpperCase(), params);\n\n    // convert cdata to Buffer\n    cdata = new DataBuffer(cdata).native();\n\n    return Promise.resolve({\n      data: cdata\n    });\n  };\n\n  // ### WebCryptoAPI Implementation\n  var webcrypto;\n  if (\"RSAES-PKCS1-v1_5\" !== alg.name) {\n    webcrypto = function(key, pdata) {\n      key = rsaUtil.convertToJWK(key, true);\n      var promise;\n      promise = helpers.subtleCrypto.importKey(\"jwk\", key, alg, true, [\"encrypt\"]);\n      promise = promise.then(function(key) {\n        return helpers.subtleCrypto.encrypt(alg, key, pdata);\n      });\n      promise = promise.then(function(result) {\n        var cdata = Buffer.from(result);\n        return {\n          data: cdata\n        };\n      });\n\n      return promise;\n    };\n  } else {\n    webcrypto = null;\n  }\n\n  var nodejs;\n  if (nodeSupportCheck(name)) {\n    nodejs = function (key, pdata) {\n      key = rsaUtil.convertToPem(key, true);\n\n      var cdata = helpers.nodeCrypto.publicEncrypt({\n        key: key,\n        padding: helpers.nodeCrypto.constants[nodeSupport[name]]\n      }, pdata);\n\n      return {\n        data: cdata\n      };\n    };\n  }\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction rsaesDecryptFn(name) {\n  var alg = {\n    name: name\n  };\n\n  if (\"RSA-OAEP-256\" === name) {\n    alg.name = \"RSA-OAEP\";\n    alg.hash = {\n      name: \"SHA-256\"\n    };\n  } else if (\"RSA-OAEP\" === name) {\n    alg.hash = {\n      name: \"SHA-1\"\n    };\n  } else {\n    alg.name = \"RSAES-PKCS1-v1_5\";\n  }\n\n  // ### Fallback Implementation -- uses forge\n  var fallback = function(key, cdata) {\n    // convert cdata to byte string\n    cdata = new DataBuffer(cdata).bytes();\n\n    // decrypt it\n    var pki = rsaUtil.convertToForge(key, false),\n        params = {};\n    if (\"RSA-OAEP\" === alg.name) {\n      params.md = alg.hash.name.toLowerCase().replace(/-/g, \"\");\n      params.md = forge.md[params.md].create();\n    }\n    var pdata = pki.decrypt(cdata, alg.name.toUpperCase(), params);\n\n    // convert pdata to Buffer\n    pdata = new DataBuffer(pdata).native();\n\n    return Promise.resolve(pdata);\n  };\n\n  // ### WebCryptoAPI Implementation\n  var webcrypto;\n  if (\"RSAES-PKCS1-v1_5\" !== alg.name) {\n    webcrypto = function(key, pdata) {\n      key = rsaUtil.convertToJWK(key, false);\n      var promise;\n      promise = helpers.subtleCrypto.importKey(\"jwk\", key, alg, true, [\"decrypt\"]);\n      promise = promise.then(function(key) {\n        return helpers.subtleCrypto.decrypt(alg, key, pdata);\n      });\n      promise = promise.then(function(result) {\n        var pdata = Buffer.from(result);\n        return pdata;\n      });\n\n      return promise;\n    };\n  } else {\n    webcrypto = null;\n  }\n\n  var nodejs;\n  if (nodeSupportCheck(name)) { // node ^6.12.0 || >= 8.0.0\n    nodejs = function(key, pdata) {\n      key = rsaUtil.convertToPem(key, false);\n      return helpers.nodeCrypto.privateDecrypt({\n        key: key,\n        padding: helpers.nodeCrypto.constants[nodeSupport[name]]\n      }, pdata);\n    };\n  } else if (helpers.nodeCrypto && name === \"RSA-OAEP\") { // node (>= 6.0.0 && < 6.12.0) || ^7.0.0\n    nodejs = function(key, pdata) {\n      key = rsaUtil.convertToPem(key, false);\n      return helpers.nodeCrypto.privateDecrypt(key, pdata);\n    };\n  }\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\n// ### Public API\n// * [name].encrypt\n// * [name].decrypt\nvar rsaes = {};\n[\n  \"RSA-OAEP\",\n  \"RSA-OAEP-256\",\n  \"RSA1_5\"\n].forEach(function(name) {\n  rsaes[name] = {\n    encrypt: rsaesEncryptFn(name),\n    decrypt: rsaesDecryptFn(name)\n  };\n});\n\nmodule.exports = rsaes;\n","/*!\n * algorithms/rsassa.js - RSA Signatures\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../deps/forge.js\"),\n    CONSTANTS = require(\"./constants\"),\n    helpers = require(\"./helpers.js\"),\n    rsaUtil = require(\"./rsa-util.js\");\n\nfunction nodePSSsupport() {\n  return helpers.nodeCrypto && helpers.nodeCrypto.constants && helpers.nodeCrypto.constants.RSA_PSS_SALTLEN_DIGEST;\n}\n\n// ### RSASSA-PKCS1-v1_5\n\nfunction rsassaV15SignFn(name) {\n  var md = name.replace(\"RS\", \"SHA\").toLowerCase(),\n      hash = name.replace(\"RS\", \"SHA-\");\n\n  var alg = {\n    name: \"RSASSA-PKCS1-V1_5\",\n    hash: {\n      name: hash\n    }\n  };\n\n  // ### Fallback Implementation -- uses forge\n  var fallback = function(key, pdata) {\n    // create the digest\n    var digest = forge.md[md].create();\n    digest.start();\n    digest.update(pdata);\n\n    // sign it\n    var pki = rsaUtil.convertToForge(key, false);\n    var sig = pki.sign(digest, \"RSASSA-PKCS1-V1_5\");\n    sig = Buffer.from(sig, \"binary\");\n\n    return Promise.resolve({\n      data: pdata,\n      mac: sig\n    });\n  };\n\n  // ### WebCryptoAPI Implementation\n  var webcrypto = function(key, pdata) {\n    key = rsaUtil.convertToJWK(key, false);\n    var promise;\n    promise = helpers.subtleCrypto.importKey(\"jwk\", key, alg, true, [\"sign\"]);\n    promise = promise.then(function(key) {\n      return helpers.subtleCrypto.sign(alg, key, pdata);\n    });\n    promise = promise.then(function(result) {\n      var sig = Buffer.from(result);\n      return {\n        data: pdata,\n        mac: sig\n      };\n    });\n\n    return promise;\n  };\n\n  var nodejs;\n  var nodeHash = \"RSA-\" + hash.replace(\"-\", \"\");\n  if (helpers.nodeCrypto && helpers.nodeCrypto.getHashes().indexOf(nodeHash) > -1) {\n    nodejs = function(key, pdata) {\n      var sign = helpers.nodeCrypto.createSign(nodeHash);\n      sign.update(pdata);\n\n      return {\n        data: pdata,\n        mac: sign.sign(rsaUtil.convertToPem(key, false))\n      };\n    };\n  }\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction rsassaV15VerifyFn(name) {\n  var md = name.replace(\"RS\", \"SHA\").toLowerCase(),\n      hash = name.replace(\"RS\", \"SHA-\");\n  var alg = {\n    name: \"RSASSA-PKCS1-V1_5\",\n    hash: {\n      name: hash\n    }\n  };\n\n  // ### Fallback implementation -- uses forge\n  var fallback = function(key, pdata, mac) {\n    // create the digest\n    var digest = forge.md[md].create();\n    digest.start();\n    digest.update(pdata);\n    digest = digest.digest().bytes();\n\n    // verify it\n    var pki = rsaUtil.convertToForge(key, true);\n    var sig = mac.toString(\"binary\");\n    var result = pki.verify(digest, sig, \"RSASSA-PKCS1-V1_5\");\n    if (!result) {\n      return Promise.reject(new Error(\"verification failed\"));\n    }\n    return Promise.resolve({\n      data: pdata,\n      mac: mac,\n      valid: true\n    });\n  };\n\n  // ### WebCryptoAPI Implementation\n  var webcrypto = function(key, pdata, mac) {\n    key = rsaUtil.convertToJWK(key, true);\n    var promise;\n    promise = helpers.subtleCrypto.importKey(\"jwk\", key, alg, true, [\"verify\"]);\n    promise = promise.then(function(key) {\n      return helpers.subtleCrypto.verify(alg, key, mac, pdata);\n    });\n    promise = promise.then(function(result) {\n      if (!result) {\n        return Promise.reject(new Error(\"verification failed\"));\n      }\n\n      return {\n        data: pdata,\n        mac: mac,\n        valid: true\n      };\n    });\n\n    return promise;\n  };\n\n  var nodejs;\n  if (helpers.nodeCrypto && helpers.nodeCrypto.getHashes().indexOf(md) > -1) {\n    nodejs = function(key, pdata, mac) {\n      var verify = helpers.nodeCrypto.createVerify(md);\n      verify.update(pdata);\n      verify.end();\n      var result = verify.verify(rsaUtil.convertToPem(key, true), mac);\n      if (!result) {\n        return Promise.reject(new Error(\"verification failed\"));\n      }\n\n      return {\n        data: pdata,\n        mac: mac,\n        valid: true\n      };\n    };\n  }\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\n// ### RSA-PSS\nfunction rsassaPssSignFn(name) {\n  var md = name.replace(\"PS\", \"SHA\").toLowerCase(),\n      hash = name.replace(\"PS\", \"SHA-\");\n\n  var alg = {\n    name: \"RSA-PSS\",\n    hash: {\n      name: hash\n    },\n    saltLength: CONSTANTS.HASHLENGTH[hash] / 8\n  };\n\n  // ### Fallback implementation -- uses forge\n  var fallback = function (key, pdata) {\n    // create the digest\n    var digest = forge.md[md].create();\n    digest.start();\n    digest.update(pdata);\n\n    // setup padding\n    var pss = forge.pss.create({\n      md: forge.md[md].create(),\n      mgf: forge.mgf.mgf1.create(forge.md[md].create()),\n      saltLength: CONSTANTS.HASHLENGTH[hash] / 8\n    });\n\n    // sign it\n    var pki = rsaUtil.convertToForge(key, false);\n    var sig = pki.sign(digest, pss);\n    sig = Buffer.from(sig, \"binary\");\n\n    return Promise.resolve({\n      data: pdata,\n      mac: sig\n    });\n  };\n\n  // ### WebCryptoAPI Implementation\n  var webcrypto = function(key, pdata) {\n    key = rsaUtil.convertToJWK(key, false);\n    var promise;\n    promise = helpers.subtleCrypto.importKey(\"jwk\", key, alg, true, [\"sign\"]);\n    promise = promise.then(function (key) {\n      return helpers.subtleCrypto.sign(alg, key, pdata);\n    });\n    promise = promise.then(function (result) {\n      var sig = Buffer.from(result);\n      return {\n        data: pdata,\n        mac: sig\n      };\n    });\n\n    return promise;\n  };\n\n  var nodejs;\n  var nodeHash = \"RSA-\" + hash.replace(\"-\", \"\");\n  if (nodePSSsupport()) {\n    nodejs = function(key, pdata) {\n      var sign = helpers.nodeCrypto.createSign(nodeHash);\n      sign.update(pdata);\n\n      var sig = sign.sign({\n        key: rsaUtil.convertToPem(key, false),\n        padding: helpers.nodeCrypto.constants.RSA_PKCS1_PSS_PADDING,\n        saltLength: helpers.nodeCrypto.constants.RSA_PSS_SALTLEN_DIGEST\n      });\n\n      return {\n        data: pdata,\n        mac: sig\n      };\n    };\n  }\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\nfunction rsassaPssVerifyFn(name) {\n  var md = name.replace(\"PS\", \"SHA\").toLowerCase(),\n      hash = name.replace(\"PS\", \"SHA-\");\n\n  var alg = {\n    name: \"RSA-PSS\",\n    hash: {\n      name: hash\n    },\n    saltLength: CONSTANTS.HASHLENGTH[hash] / 8\n  };\n\n  // ### Fallback implementation -- uses forge\n  var fallback = function (key, pdata, mac) {\n    // create the digest\n    var digest = forge.md[md].create();\n    digest.start();\n    digest.update(pdata);\n    digest = digest.digest().bytes();\n\n    // setup padding\n    var pss = forge.pss.create({\n      md: forge.md[md].create(),\n      mgf: forge.mgf.mgf1.create(forge.md[md].create()),\n      saltLength: CONSTANTS.HASHLENGTH[hash] / 8\n    });\n\n    // verify it\n    var pki = rsaUtil.convertToForge(key, true);\n    var sig = mac.toString(\"binary\");\n    var result = pki.verify(digest, sig, pss);\n    if (!result) {\n      return Promise.reject(new Error(\"verification failed\"));\n    }\n    return Promise.resolve({\n      data: pdata,\n      mac: mac,\n      valid: true\n    });\n  };\n\n  // ### WebCryptoAPI Implementation\n  var webcrypto = function(key, pdata, mac) {\n    key = rsaUtil.convertToJWK(key, true);\n    var promise;\n    promise = helpers.subtleCrypto.importKey(\"jwk\", key, alg, true, [\"verify\"]);\n    promise = promise.then(function (key) {\n      return helpers.subtleCrypto.verify(alg, key, mac, pdata);\n    });\n    promise = promise.then(function (result) {\n      if (!result) {\n        return Promise.reject(new Error(\"verification failed\"));\n      }\n\n      return {\n        data: pdata,\n        mac: mac,\n        valid: true\n      };\n    });\n\n    return promise;\n  };\n\n  var nodejs;\n  if (nodePSSsupport()) {\n    nodejs = function(key, pdata, mac) {\n      var verify = helpers.nodeCrypto.createVerify(md);\n      verify.update(pdata);\n      verify.end();\n      var result = verify.verify({\n        key: rsaUtil.convertToPem(key, true),\n        padding: helpers.nodeCrypto.constants.RSA_PKCS1_PSS_PADDING,\n        saltLength: helpers.nodeCrypto.constants.RSA_PSS_SALTLEN_DIGEST\n      }, mac);\n      if (!result) {\n        return Promise.reject(new Error(\"verification failed\"));\n      }\n\n      return {\n        data: pdata,\n        mac: mac,\n        valid: true\n      };\n    };\n  }\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\n// ### Public API\n// * [name].sign\n// * [name].verify\nvar rsassa = {};\n[\n  \"PS256\",\n  \"PS384\",\n  \"PS512\"\n].forEach(function(name) {\n  rsassa[name] = {\n    sign: rsassaPssSignFn(name),\n    verify: rsassaPssVerifyFn(name)\n  };\n});\n\n[\n  \"RS256\",\n  \"RS384\",\n  \"RS512\"\n].forEach(function(name) {\n  rsassa[name] = {\n    sign: rsassaV15SignFn(name),\n    verify: rsassaV15VerifyFn(name)\n  };\n});\n\nmodule.exports = rsassa;\n","/*!\n * algorithms/sha.js - Cryptographic Secure Hash Algorithms, versions 1 and 2\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../deps/forge.js\"),\n    helpers = require(\"./helpers.js\");\n\nfunction hashDigestFN(hash) {\n  var md = hash.replace(\"SHA-\", \"SHA\").toLowerCase();\n\n  var alg = {\n    name: hash\n  };\n\n  // ### Fallback Implementation -- uses forge\n  var fallback = function(pdata /* props */) {\n    var digest = forge.md[md].create();\n    digest.update(pdata.toString(\"binary\"));\n    digest = Buffer.from(digest.digest().bytes(), \"binary\");\n\n    return Promise.resolve(digest);\n  };\n\n  // ### WebCryptoAPI Implementation\n  var webcrypto = function(pdata /* props */) {\n    var promise;\n    promise = helpers.subtleCrypto.digest(alg, pdata);\n    promise = promise.then(function(result) {\n      result = Buffer.from(result);\n      return result;\n    });\n    return promise;\n  };\n\n  // ### nodejs Implementation\n  var nodejs = function(pdata /* props */) {\n    var digest = helpers.nodeCrypto.createHash(md);\n    digest.update(pdata);\n    return digest.digest();\n  };\n\n  return helpers.setupFallback(nodejs, webcrypto, fallback);\n}\n\n// Public API\n// * [name].digest\nvar sha = {};\n[\n  \"SHA-1\",\n  \"SHA-256\",\n  \"SHA-384\",\n  \"SHA-512\"\n].forEach(function(name) {\n  sha[name] = {\n    digest: hashDigestFN(name)\n  };\n});\n\nmodule.exports = sha;\n","/*!\n * deps/ciphermodes/gcm/helpers.js - AES-GCM Helper Functions\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar Long = require(\"long\"),\n    fill = require(\"lodash/fill\"),\n    pack = require(\"../pack.js\");\n\nvar E1 = 0xe1000000,\n    E1B = 0xe1,\n    E1L = new Long(E1 >> 8);\n\nfunction generateLookup() {\n  var lookup = [];\n\n  for (var c = 0; c < 256; ++c) {\n    var v = 0;\n    for (var i = 7; i >= 0; --i) {\n      if ((c & (1 << i)) !== 0) {\n        v ^= (E1 >>> (7 - i));\n      }\n    }\n    lookup.push(v);\n  }\n\n  return lookup;\n}\n\nvar helpers = module.exports = {\n  // ### Constants\n  E1: E1,\n  E1B: E1B,\n  E1L: E1L,\n  LOOKUP: generateLookup(),\n\n  // ### Array Helpers\n  arrayCopy: function(src, srcPos, dest, destPos, length) {\n    // Start by checking for negatives since arrays in JS auto-expand\n    if (srcPos < 0 || destPos < 0 || length < 0) {\n      throw new TypeError(\"Invalid input.\");\n    }\n\n    if (dest instanceof Uint8Array) {\n      // Check for overflow if dest is a typed-array\n      if (destPos >= dest.length || (destPos + length) > dest.length) {\n        throw new TypeError(\"Invalid input.\");\n      }\n\n      if (srcPos !== 0 || length < src.length) {\n        if (src instanceof Uint8Array) {\n          src = src.subarray(srcPos, srcPos + length);\n        } else {\n          src = src.slice(srcPos, srcPos + length);\n        }\n      }\n\n      dest.set(src, destPos);\n    } else {\n      for (var i = 0; i < length; ++i) {\n        dest[destPos + i] = src[srcPos + i];\n      }\n    }\n  },\n  arrayEqual: function(a1, a2) {\n    a1 = a1 || [];\n    a2 = a2 || [];\n\n    var len = Math.min(a1.length, a2.length),\n        result = (a1.length === a2.length);\n\n    for (var idx = 0; idx < len; idx++) {\n      result = result &&\n               (\"undefined\" !== typeof a1[idx]) &&\n               (\"undefined\" !== typeof a2[idx]) &&\n               (a1[idx] === a2[idx]);\n    }\n\n    return result;\n  },\n\n  // ### Conversions\n  asBytes: function(x, z) {\n    switch (arguments.length) {\n      case 1:\n        z = Buffer.alloc(16);\n        pack.intToBigEndian(x, z, 0);\n        return z;\n      case 2:\n        pack.intToBigEndian(x, z, 0);\n        break;\n      default:\n        throw new TypeError(\"Expected 1 or 2 arguments.\");\n    }\n  },\n  asInts: function(x, z) {\n    switch (arguments.length) {\n      case 1:\n        z = [];\n        fill(z, 0, 0, 4);\n        pack.bigEndianToInt(x, 0, z);\n        return z;\n      case 2:\n        pack.bigEndianToInt(x, 0, z);\n        break;\n      default:\n        throw new TypeError(\"Expected 1 or 2 arguments.\");\n    }\n  },\n  oneAsInts: function() {\n    var tmp = [];\n    for (var c = 0; c < 4; ++c) {\n        tmp.push(1 << 31);\n    }\n    return tmp;\n  },\n\n  // ## Bit-wise\n  shiftRight: function(x, z) {\n    var b, c;\n    switch (arguments.length) {\n      case 1:\n        b = x[0];\n        x[0] = b >>> 1;\n        c = b << 31;\n        b = x[1];\n        x[1] = (b >>> 1) | c;\n        c = b << 31;\n        b = x[2];\n        x[2] = (b >>> 1) | c;\n        c = b << 31;\n        b = x[3];\n        x[3] = (b >>> 1) | c;\n        return (b << 31) & 0xffffffff;\n      case 2:\n        b = x[0];\n        z[0] = b >>> 1;\n        c = b << 31;\n        b = x[1];\n        z[1] = (b >>> 1) | c;\n        c = b << 31;\n        b = x[2];\n        z[2] = (b >>> 1) | c;\n        c = b << 31;\n        b = x[3];\n        z[3] = (b >>> 1) | c;\n        return (b << 31) & 0xffffffff;\n      default:\n        throw new TypeError(\"Expected 1 or 2 arguments.\");\n    }\n  },\n  shiftRightN: function(x, n, z) {\n    var nInv, b, c;\n    switch (arguments.length) {\n      case 2:\n        b = x[0];\n        nInv = 32 - n;\n        x[0] = b >>> n;\n        c = b << nInv;\n        b = x[1];\n        x[1] = (b >>> n) | c;\n        c = b << nInv;\n        b = x[2];\n        x[2] = (b >>> n) | c;\n        c = b << nInv;\n        b = x[3];\n        x[3] = (b >>> n) | c;\n        return b << nInv;\n      case 3:\n        b = x[0];\n        nInv = 32 - n;\n        z[0] = b >>> n;\n        c = b << nInv;\n        b = x[1];\n        z[1] = (b >>> n) | c;\n        c = b << nInv;\n        b = x[2];\n        z[2] = (b >>> n) | c;\n        c = b << nInv;\n        b = x[3];\n        z[3] = (b >>> n) | c;\n        return b << nInv;\n      default:\n        throw new TypeError(\"Expected 2 or 3 arguments.\");\n    }\n  },\n  xor: function(x, y, z) {\n    switch (arguments.length) {\n      case 2:\n        x[0] ^= y[0];\n        x[1] ^= y[1];\n        x[2] ^= y[2];\n        x[3] ^= y[3];\n        break;\n      case 3:\n        z[0] = x[0] ^ y[0];\n        z[1] = x[1] ^ y[1];\n        z[2] = x[2] ^ y[2];\n        z[3] = x[3] ^ y[3];\n        break;\n      default:\n        throw new TypeError(\"Expected 2 or 3 arguments.\");\n    }\n  },\n\n  multiply: function(x, y) {\n    var r0 = x.slice();\n    var r1 = [];\n\n    for (var i = 0; i < 4; ++i) {\n      var bits = y[i];\n      for (var j = 31; j >= 0; --j) {\n        if ((bits & (1 << j)) !== 0) {\n          helpers.xor(r1, r0);\n        }\n\n        if (helpers.shiftRight(r0) !== 0) {\n          r0[0] ^= helpers.E1;\n        }\n      }\n    }\n\n    helpers.arrayCopy(r1, 0, x, 0, 4);\n  },\n  multiplyP: function(x, y) {\n    switch (arguments.length) {\n      case 1:\n        if (helpers.shiftRight(x) !== 0) {\n          x[0] ^= helpers.E1;\n        }\n        break;\n      case 2:\n        if (helpers.shiftRight(x, y) !== 0) {\n          y[0] ^= helpers.E1;\n        }\n        break;\n      default:\n        throw new TypeError(\"Expected 1 or 2 arguments.\");\n    }\n  },\n  multiplyP8: function(x, y) {\n    var c;\n    switch (arguments.length) {\n      case 1:\n        c = helpers.shiftRightN(x, 8);\n        x[0] ^= helpers.LOOKUP[c >>> 24];\n        break;\n      case 2:\n        c = helpers.shiftRightN(x, 8, y);\n        y[0] ^= helpers.LOOKUP[c >>> 24];\n        break;\n      default:\n        throw new TypeError(\"Expected 1 or 2 arguments.\");\n    }\n  }\n};\n","/*!\n * deps/ciphermodes/gcm/index.js - AES-GCM implementation Entry Point\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n \"use strict\";\n\nvar Long = require(\"long\"),\n    forge = require(\"../../../deps/forge.js\"),\n    multipliers = require(\"./multipliers.js\"),\n    helpers = require(\"./helpers.js\"),\n    pack = require(\"../pack.js\"),\n    DataBuffer = require(\"../../../util/databuffer.js\"),\n    cipherHelpers = require(\"../helpers.js\");\n\nvar BLOCK_SIZE = 16;\n\n// ### GCM Mode\n// ### Constructor\nfunction Gcm(options) {\n  options = options || {};\n\n  this.name = \"GCM\";\n  this.cipher = options.cipher;\n  this.blockSize = this.blockSize || 16;\n}\n\n// ### exports\nmodule.exports = {\n  createCipher: function(options) {\n    var alg = new forge.aes.Algorithm(\"AES-GCM\", Gcm);\n    alg.initialize({\n      key: new DataBuffer(options.key)\n    });\n    alg.mode.start(options);\n\n    return alg.mode;\n  },\n  createDecipher: function(options) {\n    var alg = new forge.aes.Algorithm(\"AES-GCM\", Gcm);\n    alg.initialize({\n      key: new DataBuffer(options.key)\n    });\n    alg.mode._decrypt = true;\n    alg.mode.start(options);\n\n    return alg.mode;\n  }\n};\n\n// ### Public API\nGcm.prototype.start = function(options) {\n  this.tag = null;\n\n  options = options || {};\n\n  if (!(\"iv\" in options)) {\n    throw new Error(\"Gcm needs ParametersWithIV or AEADParameters\");\n  }\n  this.nonce = options.iv;\n  if (this.nonce == null || this.nonce.length < 1) {\n    throw new Error(\"IV must be at least 1 byte\");\n  }\n\n  // TODO: variable tagLength?\n  this.tagLength = 16;\n\n  // TODO: validate tag\n  if (\"tag\" in options) {\n    this.tag = Buffer.from(options.tag);\n  }\n\n  var bufLength = !this._decrypt ?\n                  this.blockSize :\n                  (this.blockSize + this.tagLength);\n  this.bufBlock = Buffer.alloc(bufLength);\n\n  var multiplier = options.multiplier;\n  if (multiplier == null) {\n    multiplier = new (multipliers[\"8k\"])();\n  }\n  this.multiplier = multiplier;\n\n  this.H = this.zeroBlock();\n  cipherHelpers.encrypt(this.cipher, this.H, 0, this.H, 0);\n\n  // GcmMultiplier tables don\"t change unless the key changes\n  // (and are expensive to init)\n  this.multiplier.init(this.H);\n  this.exp = null;\n\n  this.J0 = this.zeroBlock();\n\n  if (this.nonce.length === 12) {\n    this.nonce.copy(this.J0, 0, 0, this.nonce.length);\n    this.J0[this.blockSize - 1] = 0x01;\n  } else {\n    this.gHASH(this.J0, this.nonce, this.nonce.length);\n    var X = this.zeroBlock();\n    pack.longToBigEndian(new Long(this.nonce.length).\n                         multiply(8), X, 8);\n    this.gHASHBlock(this.J0, X);\n  }\n\n  this.S = this.zeroBlock();\n  this.SAt = this.zeroBlock();\n  this.SAtPre = this.zeroBlock();\n  this.atBlock = this.zeroBlock();\n  this.atBlockPos = 0;\n  this.atLength = Long.ZERO;\n  this.atLengthPre = Long.ZERO;\n  this.counter = Buffer.from(this.J0);\n  this.bufOff = 0;\n  this.totalLength = Long.ZERO;\n\n  if (\"additionalData\" in options) {\n    this.processAADBytes(options.additionalData, 0, options.additionalData.length);\n  }\n};\n\nGcm.prototype.update = function(inV, inOff, len, out, outOff) {\n  var resultLen = 0;\n\n  while (len > 0) {\n    var inLen = Math.min(len, this.bufBlock.length - this.bufOff);\n    inV.copy(this.bufBlock, this.bufOff, inOff, inOff + inLen);\n    len -= inLen;\n    inOff += inLen;\n    this.bufOff += inLen;\n    if (this.bufOff === this.bufBlock.length) {\n      this.outputBlock(out, outOff + resultLen);\n      resultLen += this.blockSize;\n    }\n  }\n\n  return resultLen;\n};\nGcm.prototype.finish = function(out, outOff) {\n  var resultLen = 0;\n\n  if (this._decrypt) {\n    // append tag\n    resultLen += this.update(this.tag, 0, this.tag.length, out, outOff);\n  }\n\n  if (this.totalLength.isZero()) {\n    this.initCipher();\n  }\n\n  var extra = this.bufOff;\n  if (this._decrypt) {\n    if (extra < this.tagLength) {\n      throw new Error(\"data too short\");\n    }\n    extra -= this.tagLength;\n  }\n\n  if (extra > 0) {\n    this.gCTRPartial(this.bufBlock, 0, extra, out, outOff + resultLen);\n    resultLen += extra;\n  }\n\n  this.atLength = this.atLength.add(this.atBlockPos);\n\n  // Final gHASH\n  var X = this.zeroBlock();\n  pack.longToBigEndian(this.atLength.multiply(8),\n                       X,\n                       0);\n  pack.longToBigEndian(this.totalLength.multiply(8),\n                       X,\n                       8);\n\n  this.gHASHBlock(this.S, X);\n\n  // TODO Fix this if tagLength becomes configurable\n  // T = MSBt(GCTRk(J0,S))\n  var tag = Buffer.alloc(this.blockSize);\n  cipherHelpers.encrypt(this.cipher, this.J0, 0, tag, 0);\n  this.xor(tag, this.S);\n\n  if (this._decrypt) {\n    if (!helpers.arrayEqual(this.tag, tag)) {\n      throw new Error(\"mac check in Gcm failed\");\n    }\n  } else {\n    // We place into tag our calculated value for T\n    this.tag = Buffer.alloc(this.tagLength);\n    tag.copy(this.tag, 0, 0, this.tagLength);\n  }\n\n  return resultLen;\n};\n\n// ### \"Internal\" Helper Functions\nGcm.prototype.initCipher = function() {\n  if (this.atLength.greaterThan(Long.ZERO)) {\n    this.SAt.copy(this.SAtPre, 0, 0, this.blockSize);\n    this.atLengthPre = this.atLength.add(Long.ZERO);\n  }\n\n  // Finish hash for partial AAD block\n  if (this.atBlockPos > 0) {\n    this.gHASHPartial(this.SAtPre, this.atBlock, 0, this.atBlockPos);\n    this.atLengthPre = this.atLengthPre.add(this.atBlockPos);\n  }\n\n  if (this.atLengthPre.greaterThan(Long.ZERO)) {\n    this.SAtPre.copy(this.S, 0, 0, this.blockSize);\n  }\n};\n\nGcm.prototype.outputBlock = function(output, offset) {\n  if (this.totalLength.isZero()) {\n    this.initCipher();\n  }\n  this.gCTRBlock(this.bufBlock, output, offset);\n  if (!this._decrypt) {\n    this.bufOff = 0;\n  } else {\n    this.bufBlock.copy(this.bufBlock, 0, this.blockSize, this.blockSize + this.tagLength);\n    this.bufOff = this.tagLength;\n  }\n};\n\nGcm.prototype.processAADBytes = function(inV, inOff, len) {\n  for (var i = 0; i < len; ++i) {\n    this.atBlock[this.atBlockPos] = inV[inOff + i];\n    if (++this.atBlockPos === this.blockSize) {\n      // Hash each block as it fills\n      this.gHASHBlock(this.SAt, this.atBlock);\n      this.atBlockPos = 0;\n      this.atLength = this.atLength.add(this.blockSize);\n    }\n  }\n};\n\nGcm.prototype.getNextCounterBlock = function() {\n  for (var i = 15; i >= 12; --i) {\n    var b = ((this.counter[i] + 1) & 0xff);\n    this.counter[i] = b;\n\n    if (b !== 0) {\n      break;\n    }\n  }\n\n  // encrypt counter\n  var outb = Buffer.alloc(this.blockSize);\n  cipherHelpers.encrypt(this.cipher, this.counter, 0, outb, 0);\n\n  return outb;\n};\n\nGcm.prototype.gCTRBlock = function(block, out, outOff) {\n  var tmp = this.getNextCounterBlock();\n\n  this.xor(tmp, block);\n  tmp.copy(out, outOff, 0, this.blockSize);\n\n  this.gHASHBlock(this.S, !this._decrypt ? tmp : block);\n\n  this.totalLength = this.totalLength.add(this.blockSize);\n};\nGcm.prototype.gCTRPartial = function(buf, off, len, out, outOff) {\n  var tmp = this.getNextCounterBlock();\n\n  this.xor(tmp, buf, off, len);\n  tmp.copy(out, outOff, 0, len);\n\n  this.gHASHPartial(this.S, !this._decrypt ? tmp : buf, 0, len);\n\n  this.totalLength = this.totalLength.add(len);\n};\n\nGcm.prototype.gHASHBlock = function(Y, b) {\n  this.xor(Y, b);\n  this.multiplier.multiplyH(Y);\n};\nGcm.prototype.gHASHPartial = function(Y, b, off, len) {\n  this.xor(Y, b, off, len);\n  this.multiplier.multiplyH(Y);\n};\n\nGcm.prototype.xor = function(block, val, off, len) {\n  switch (arguments.length) {\n    case 2:\n      for (var i = 15; i >= 0; --i) {\n        block[i] ^= val[i];\n      }\n      break;\n    case 4:\n      while (len-- > 0) {\n        block[len] ^= val[off + len];\n      }\n      break;\n    default:\n      throw new TypeError(\"Expected 2 or 4 arguments.\");\n  }\n\n  return block;\n};\n\nGcm.prototype.zeroBlock = function() {\n  var block = Buffer.alloc(BLOCK_SIZE);\n  return block;\n};\n","/*!\n * deps/ciphermodes/gcm/multipliers.js - AES-GCM Multipliers\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n \"use strict\";\n\nvar helpers = require(\"./helpers.js\"),\n    pack = require(\"../pack.js\");\n\n\n// ### 8K Table Multiplier\nfunction Gcm8KMultiplier() {\n  this.H = [];\n  this.M = null;\n}\n\nGcm8KMultiplier.prototype.init = function(H) {\n  var i, j, k;\n  if (this.M == null) {\n    // sc: I realize this UGLY...\n    //M = new int[32][16][4];\n    this.M = [];\n    for (i = 0; i < 32; ++i) {\n      this.M[i] = [];\n      for (j = 0; j < 16; ++j) {\n        this.M[i][j] = [];\n        for (k = 0; k < 4; ++k) {\n          this.M[i][j][k] = 0;\n        }\n      }\n    }\n  } else if (helpers.arrayEqual(this.H, H)) {\n    return;\n  }\n\n  this.H = H.slice();\n\n  // M[0][0] is ZEROES;\n  // M[1][0] is ZEROES;\n  helpers.asInts(H, this.M[1][8]);\n\n  for (j = 4; j >= 1; j >>= 1) {\n    helpers.multiplyP(this.M[1][j + j], this.M[1][j]);\n  }\n  helpers.multiplyP(this.M[1][1], this.M[0][8]);\n\n  for (j = 4; j >= 1; j >>= 1) {\n    helpers.multiplyP(this.M[0][j + j], this.M[0][j]);\n  }\n\n  i = 0;\n  for (;;) {\n    for (j = 2; j < 16; j += j) {\n      for (k = 1; k < j; ++k) {\n        helpers.xor(this.M[i][j], this.M[i][k], this.M[i][j + k]);\n      }\n    }\n\n    if (++i === 32) {\n      return;\n    }\n\n    if (i > 1) {\n      // M[i][0] is ZEROES;\n      for (j = 8; j > 0; j >>= 1) {\n        helpers.multiplyP8(this.M[i - 2][j], this.M[i][j]);\n      }\n    }\n  }\n};\nGcm8KMultiplier.prototype.multiplyH = function(x) {\n  var z = [];\n  for (var i = 15; i >= 0; --i) {\n    var m = this.M[i + i][x[i] & 0x0f];\n    z[0] ^= m[0];\n    z[1] ^= m[1];\n    z[2] ^= m[2];\n    z[3] ^= m[3];\n    m = this.M[i + i + 1][(x[i] & 0xf0) >>> 4];\n    z[0] ^= m[0];\n    z[1] ^= m[1];\n    z[2] ^= m[2];\n    z[3] ^= m[3];\n  }\n\n  pack.intToBigEndian(z, x, 0);\n};\n\n\nmodule.exports = {\n  \"8k\": Gcm8KMultiplier\n};\n","/*!\n * deps/ciphermodes/helpers.js - Cipher Helper Functions\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar pack = require(\"./pack.js\");\n\nfunction doEncrypt(cipher, inb, inOff, outb, outOff) {\n  var input = new Array(4),\n      output = new Array(4);\n\n  pack.bigEndianToInt(inb, inOff, input);\n  cipher.encrypt(input, output);\n  pack.intToBigEndian(output, outb, outOff);\n}\n\nmodule.exports = {\n  encrypt: doEncrypt\n};\n","/*!\n * deps/ciphermodes/pack.js - Pack/Unpack Functions\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar Long = require(\"long\");\n\nvar pack = module.exports = {\n  intToBigEndian: function(n, bs, off) {\n    if (typeof n === \"number\") {\n      switch (arguments.length) {\n        case 1:\n          bs = Buffer.alloc(4);\n          pack.intToBigEndian(n, bs, 0);\n          break;\n        case 3:\n          bs[off] = 0xff & (n >>> 24);\n          bs[++off] = 0xff & (n >>> 16);\n          bs[++off] = 0xff & (n >>> 8);\n          bs[++off] = 0xff & (n);\n          break;\n        default:\n          throw new TypeError(\"Expected 1 or 3 arguments.\");\n      }\n    } else {\n      switch (arguments.length) {\n        case 1:\n          bs = Buffer.alloc(4 * n.length);\n          pack.intToBigEndian(n, bs, 0);\n          break;\n        case 3:\n          for (var i = 0; i < n.length; ++i) {\n            pack.intToBigEndian(n[i], bs, off);\n            off += 4;\n          }\n          break;\n        default:\n          throw new TypeError(\"Expected 1 or 3 arguments.\");\n      }\n    }\n\n    return bs;\n  },\n  longToBigEndian: function(n, bs, off) {\n    if (!Array.isArray(n)) {\n      // Single\n      switch (arguments.length) {\n        case 1:\n          bs = Buffer.alloc(8);\n          pack.longToBigEndian(n, bs, 0);\n          break;\n        case 3:\n          var lo = n.low,\n              hi = n.high;\n          pack.intToBigEndian(hi, bs, off);\n          pack.intToBigEndian(lo, bs, off + 4);\n          break;\n        default:\n          throw new TypeError(\"Expected 1 or 3 arguments.\");\n      }\n    } else {\n      // Array\n      switch (arguments.length) {\n        case 1:\n          bs = Buffer.alloc(8 * n.length);\n          pack.longToBigEndian(n, bs, 0);\n          break;\n        case 3:\n          for (var i = 0; i < n.length; ++i) {\n            pack.longToBigEndian(n[i], bs, off);\n            off += 8;\n          }\n          break;\n        default:\n          throw new TypeError(\"Expected 1 or 3 arguments.\");\n      }\n    }\n\n    return bs;\n  },\n\n  bigEndianToInt: function(bs, off, ns) {\n    switch (arguments.length) {\n      case 2:\n        var n = bs[off] << 24;\n        n |= (bs[++off] & 0xff) << 16;\n        n |= (bs[++off] & 0xff) << 8;\n        n |= (bs[++off] & 0xff);\n        return n;\n      case 3:\n        for (var i = 0; i < ns.length; ++i) {\n          ns[i] = pack.bigEndianToInt(bs, off);\n          off += 4;\n        }\n        break;\n      default:\n        throw new TypeError(\"Expected 2 or 3 arguments.\");\n    }\n  },\n  bigEndianToLong: function(bs, off, ns) {\n    switch (arguments.length) {\n      case 2:\n        var hi = pack.bigEndianToInt(bs, off);\n        var lo = pack.bigEndianToInt(bs, off + 4);\n        var num = new Long(lo, hi);\n        return num;\n      case 3:\n        for (var i = 0; i < ns.length; ++i) {\n          ns[i] = pack.bigEndianToLong(bs, off);\n          off += 8;\n        }\n        break;\n      default:\n        throw new TypeError(\"Expected 2 or 3 arguments.\");\n    }\n  }\n};\n","/**\n * deps/ecc/curves.js - Elliptic Curve NIST/SECG/X9.62 Parameters\n * Original Copyright (c) 2003-2005  Tom Wu.\n * Modifications Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n *\n * Ported from Tom Wu, which is ported from BouncyCastle\n * Modified to reuse existing external NPM modules, restricted to the\n * NIST//SECG/X9.62 prime curves only, and formatted to match project\n * coding styles.\n */\n\"use strict\";\n\n// Named EC curves\n\nvar BigInteger = require(\"../../deps/forge\").jsbn.BigInteger,\n    ec = require(\"./math.js\");\n\n// ----------------\n// X9ECParameters\n\n// constructor\nfunction X9ECParameters(curve, g, n, h) {\n  this.curve = curve;\n  this.g = g;\n  this.n = n;\n  this.h = h;\n}\n\nfunction x9getCurve() {\n  return this.curve;\n}\n\nfunction x9getG() {\n  return this.g;\n}\n\nfunction x9getN() {\n  return this.n;\n}\n\nfunction x9getH() {\n  return this.h;\n}\n\nX9ECParameters.prototype.getCurve = x9getCurve;\nX9ECParameters.prototype.getG = x9getG;\nX9ECParameters.prototype.getN = x9getN;\nX9ECParameters.prototype.getH = x9getH;\n\n// ----------------\n// SECNamedCurves\n\nfunction fromHex(s) { return new BigInteger(s, 16); }\n\nfunction secp256r1() {\n  // p = 2^224 (2^32 - 1) + 2^192 + 2^96 - 1\n  var p = fromHex(\"FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFF\");\n  var a = fromHex(\"FFFFFFFF00000001000000000000000000000000FFFFFFFFFFFFFFFFFFFFFFFC\");\n  var b = fromHex(\"5AC635D8AA3A93E7B3EBBD55769886BC651D06B0CC53B0F63BCE3C3E27D2604B\");\n  var n = fromHex(\"FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551\");\n  var h = BigInteger.ONE;\n  var curve = new ec.ECCurveFp(p, a, b);\n  var G = curve.decodePointHex(\"04\"\n              + \"6B17D1F2E12C4247F8BCE6E563A440F277037D812DEB33A0F4A13945D898C296\"\n              + \"4FE342E2FE1A7F9B8EE7EB4A7C0F9E162BCE33576B315ECECBB6406837BF51F5\");\n  return new X9ECParameters(curve, G, n, h);\n}\n\nfunction secp384r1() {\n  // p = 2^384 - 2^128 - 2^96 + 2^32 - 1\n  var p = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFF\");\n  var a = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFFFF0000000000000000FFFFFFFC\");\n  var b = fromHex(\"B3312FA7E23EE7E4988E056BE3F82D19181D9C6EFE8141120314088F5013875AC656398D8A2ED19D2A85C8EDD3EC2AEF\");\n  var n = fromHex(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC7634D81F4372DDF581A0DB248B0A77AECEC196ACCC52973\");\n  var h = BigInteger.ONE;\n  var curve = new ec.ECCurveFp(p, a, b);\n  var G = curve.decodePointHex(\"04\"\n              + \"AA87CA22BE8B05378EB1C71EF320AD746E1D3B628BA79B9859F741E082542A385502F25DBF55296C3A545E3872760AB7\"\n              + \"3617DE4A96262C6F5D9E98BF9292DC29F8F41DBD289A147CE9DA3113B5F0B8C00A60B1CE1D7E819D7A431D7C90EA0E5F\");\n  return new X9ECParameters(curve, G, n, h);\n}\n\nfunction secp521r1() {\n  // p = 2^521 - 1\n  var p = fromHex(\"01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF\");\n  var a = fromHex(\"01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC\");\n  var b = fromHex(\"0051953EB9618E1C9A1F929A21A0B68540EEA2DA725B99B315F3B8B489918EF109E156193951EC7E937B1652C0BD3BB1BF073573DF883D2C34F1EF451FD46B503F00\");\n  var n = fromHex(\"01FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA51868783BF2F966B7FCC0148F709A5D03BB5C9B8899C47AEBB6FB71E91386409\");\n  var h = BigInteger.ONE;\n  var curve = new ec.ECCurveFp(p, a, b);\n  var G = curve.decodePointHex(\"04\"\n                + \"00C6858E06B70404E9CD9E3ECB662395B4429C648139053FB521F828AF606B4D3DBAA14B5E77EFE75928FE1DC127A2FFA8DE3348B3C1856A429BF97E7E31C2E5BD66\"\n                + \"011839296A789A3BC0045C8A5FB42C7D1BD998F54449579B446817AFBD17273E662C97EE72995EF42640C550B9013FAD0761353C7086A272C24088BE94769FD16650\");\n  return new X9ECParameters(curve, G, n, h);\n}\n\n// ----------------\n// Public API\n\nvar CURVES = module.exports = {\n  \"secp256r1\": secp256r1(),\n  \"secp384r1\": secp384r1(),\n  \"secp521r1\": secp521r1()\n};\n\n// also export NIST names\nCURVES[\"P-256\"] = CURVES.secp256r1;\nCURVES[\"P-384\"] = CURVES.secp384r1;\nCURVES[\"P-521\"] = CURVES.secp521r1;\n","/**\n * deps/ecc/index.js - Elliptic Curve Entry Point\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../../deps/forge\"),\n    BigInteger = forge.jsbn.BigInteger,\n    ec = require(\"./math.js\"),\n    CURVES = require(\"./curves.js\");\n\n// ### Helpers\nfunction hex2bn(s) {\n  return new BigInteger(s, 16);\n}\n\nfunction bn2bin(bn, len) {\n  if (!len) {\n    len = Math.ceil(bn.bitLength() / 8);\n  }\n  len = len * 2;\n\n  var hex = bn.toString(16);\n  // truncate-left if too large\n  hex = hex.substring(Math.max(hex.length - len, 0));\n  // pad-left if too small\n  while (len > hex.length) {\n    hex = \"0\" + hex;\n  }\n\n  return Buffer.from(hex, \"hex\");\n}\nfunction bin2bn(s) {\n  if (\"string\" === typeof s) {\n    s = Buffer.from(s, \"binary\");\n  }\n  return hex2bn(s.toString(\"hex\"));\n}\n\nfunction keySizeBytes(params) {\n  return Math.ceil(params.getN().bitLength() / 8);\n}\n\nfunction namedCurve(curve) {\n  var params = CURVES[curve];\n  if (!params) {\n    throw new TypeError(\"unsupported named curve: \" + curve);\n  }\n\n  return params;\n}\n\nfunction normalizeEcdsa(params, md) {\n  var log2n = params.getN().bitLength(),\n      mdLen = md.length * 8;\n\n  var e = bin2bn(md);\n  if (log2n < mdLen) {\n    e = e.shiftRight(mdLen - log2n);\n  }\n\n  return e;\n}\n\n// ### EC Public Key\n\n/**\n *\n * @param {String} curve The named curve\n * @param {BigInteger} x The X coordinate\n * @param {BigInteger} y The Y coordinate\n */\nfunction ECPublicKey(curve, x, y) {\n  var params = namedCurve(curve),\n      c = params.getCurve();\n  var key = new ec.ECPointFp(c,\n                             c.fromBigInteger(x),\n                             c.fromBigInteger(y));\n\n  this.curve = curve;\n  this.params = params;\n  this.point = key;\n\n  var size = keySizeBytes(params);\n  this.x = bn2bin(x, size);\n  this.y = bn2bin(y, size);\n}\n\n// basics\nECPublicKey.prototype.isValid = function() {\n  return this.params.curve.contains(this.point);\n}\n\n// ECDSA\nECPublicKey.prototype.verify = function(md, sig) {\n  var N = this.params.getN(),\n      G = this.params.getG();\n\n  // prepare and validate (r, s)\n  var r = bin2bn(sig.r),\n      s = bin2bn(sig.s);\n  if (r.compareTo(BigInteger.ONE) < 0 || r.compareTo(N) >= 0) {\n    return false;\n  }\n  if (s.compareTo(BigInteger.ONE) < 0 || r.compareTo(N) >= 0) {\n    return false;\n  }\n\n  // normalize input\n  var e = normalizeEcdsa(this.params, md);\n  // verify (r, s)\n  var w = s.modInverse(N),\n      u1 = e.multiply(w).mod(N),\n      u2 = r.multiply(w).mod(N);\n\n  var v = G.multiplyTwo(u1, this.point, u2).getX().toBigInteger();\n  v = v.mod(N);\n\n  return v.equals(r);\n};\n\n// ### EC Private Key\n\n/**\n * @param {String} curve The named curve\n * @param {Buffer} key The private key value\n */\nfunction ECPrivateKey(curve, key) {\n  var params = namedCurve(curve);\n  this.curve = curve;\n  this.params = params;\n\n  var size = keySizeBytes(params);\n  this.d = bn2bin(key, size);\n}\n\nECPrivateKey.prototype.toPublicKey = function() {\n  var d = bin2bn(this.d);\n  var P = this.params.getG().multiply(d);\n  return new ECPublicKey(this.curve,\n                         P.getX().toBigInteger(),\n                         P.getY().toBigInteger());\n};\n\n// ECDSA\nECPrivateKey.prototype.sign = function(md) {\n  var keysize = keySizeBytes(this.params),\n      N = this.params.getN(),\n      G = this.params.getG(),\n      e = normalizeEcdsa(this.params, md),\n      d = bin2bn(this.d);\n\n  var r, s;\n  var k, x1, z;\n  do {\n    do {\n      // determine random nonce\n      do {\n        k = bin2bn(forge.random.getBytes(keysize));\n      } while (k.equals(BigInteger.ZERO) || k.compareTo(N) >= 0);\n      // (x1, y1) = k * G\n      x1 = G.multiply(k).getX().toBigInteger();\n      // r = x1 mod N\n      r = x1.mod(N);\n    } while (r.equals(BigInteger.ZERO));\n    // s = (k^-1 * (e + r * d)) mod N\n    z = d.multiply(r);\n    z = e.add(z);\n    s = k.modInverse(N).multiply(z).mod(N);\n  } while (s.equals(BigInteger.ONE));\n\n  // convert (r, s) to bytes\n  var len = keySizeBytes(this.params);\n  r = bn2bin(r, len);\n  s = bn2bin(s, len);\n\n  return {\n    r: r,\n    s: s\n  };\n};\n\n// basics\nECPrivateKey.prototype.isValid = function() {\n  var d = bin2bn(this.d),\n      n1 = this.params.getN().subtract(BigInteger.ONE);\n\n  return (d.compareTo(BigInteger.ONE) >= 0) &&\n         (d.compareTo(n1) < 0);\n}\n\n// ECDH\nECPrivateKey.prototype.computeSecret = function(pubkey) {\n  var d = bin2bn(this.d);\n  var S = pubkey.point.multiply(d).getX().toBigInteger();\n  S = bn2bin(S, keySizeBytes(this.params));\n  return S;\n};\n\n// ### Public API\nexports.generateKeyPair = function(curve) {\n  var params = namedCurve(curve),\n      n = params.getN();\n\n  // generate random within range [1, N-1)\n  var r = forge.random.getBytes(keySizeBytes(params));\n  r = bin2bn(r);\n\n  var n1 = n.subtract(BigInteger.ONE);\n  var d = r.mod(n1).add(BigInteger.ONE);\n\n  var privkey = new ECPrivateKey(curve, d),\n      pubkey = privkey.toPublicKey();\n\n  return {\n    \"private\": privkey,\n    \"public\": pubkey\n  };\n};\n\nexports.asPublicKey = function(curve, x, y) {\n  if (\"string\" === typeof x) {\n    x = hex2bn(x);\n  } else if (Buffer.isBuffer(x)) {\n    x = bin2bn(x);\n  }\n\n  if (\"string\" === typeof y) {\n    y = hex2bn(y);\n  } else if (Buffer.isBuffer(y)) {\n    y = bin2bn(y);\n  }\n\n  var pubkey = new ECPublicKey(curve, x, y);\n  return pubkey;\n};\nexports.asPrivateKey = function(curve, d) {\n  // Elaborate way to get to a Buffer from a (String|Buffer|BigInteger)\n  if (\"string\" === typeof d) {\n    d = hex2bn(d);\n  } else if (Buffer.isBuffer(d)) {\n    d = bin2bn(d);\n  }\n\n  var privkey = new ECPrivateKey(curve, d);\n  return privkey;\n};\n","/**\n * deps/ecc/math.js - Elliptic Curve Math\n * Original Copyright (c) 2003-2005  Tom Wu.\n * Modifications Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n *\n * Ported from Tom Wu, which is ported from BouncyCastle\n * Modified to reuse existing external NPM modules, restricted to the\n * NIST//SECG/X9.62 prime curves only, and formatted to match project\n * coding styles.\n */\n\"use strict\";\n\n// Basic Javascript Elliptic Curve implementation\n// Ported loosely from BouncyCastle's Java EC code\n// Only Fp curves implemented for now\n\nvar BigInteger = require(\"../../deps/forge\").jsbn.BigInteger;\n\n// ----------------\n// Helpers\n\nfunction nbi() {\n  return new BigInteger(null);\n}\n\n// ----------------\n// Barrett modular reduction\n\n// constructor\nfunction Barrett(m) {\n  // setup Barrett\n  this.r2 = nbi();\n  this.q3 = nbi();\n  BigInteger.ONE.dlShiftTo(2*m.t,this.r2);\n  this.mu = this.r2.divide(m);\n  this.m = m;\n}\n\nfunction barrettConvert(x) {\n  if(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\n  else if(x.compareTo(this.m) < 0) return x;\n  else { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n}\n\nfunction barrettRevert(x) { return x; }\n\n// x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\n  x.drShiftTo(this.m.t-1,this.r2);\n  if(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\n  this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\n  this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\n  while(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\n  x.subTo(this.r2,x);\n  while(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = x^2 mod m; x != r\nfunction barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = x*y mod m; x,y != r\nfunction barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n// ----------------\n// ECFieldElementFp\n\n// constructor\nfunction ECFieldElementFp(q, x) {\n  this.x = x;\n  // TODO if(x.compareTo(q) >= 0) error\n  this.p = q;\n}\n\nfunction feFpEquals(other) {\n  if (other === this) {\n    return true;\n  }\n  return (this.p.equals(other.p) && this.x.equals(other.x));\n}\n\nfunction feFpToBigInteger() {\n  return this.x;\n}\n\nfunction feFpNegate() {\n  return new ECFieldElementFp(this.p, this.x.negate().mod(this.p));\n}\n\nfunction feFpAdd(b) {\n  return new ECFieldElementFp(this.p, this.x.add(b.toBigInteger()).mod(this.p));\n}\n\nfunction feFpSubtract(b) {\n  return new ECFieldElementFp(this.p, this.x.subtract(b.toBigInteger()).mod(this.p));\n}\n\nfunction feFpMultiply(b) {\n  return new ECFieldElementFp(this.p, this.x.multiply(b.toBigInteger()).mod(this.p));\n}\n\nfunction feFpSquare() {\n  return new ECFieldElementFp(this.p, this.x.pow(2).mod(this.p));\n}\n\nfunction feFpDivide(b) {\n  return new ECFieldElementFp(this.p, this.x.multiply(b.toBigInteger().modInverse(this.p)).mod(this.p));\n}\n\nECFieldElementFp.prototype.equals = feFpEquals;\nECFieldElementFp.prototype.toBigInteger = feFpToBigInteger;\nECFieldElementFp.prototype.negate = feFpNegate;\nECFieldElementFp.prototype.add = feFpAdd;\nECFieldElementFp.prototype.subtract = feFpSubtract;\nECFieldElementFp.prototype.multiply = feFpMultiply;\nECFieldElementFp.prototype.square = feFpSquare;\nECFieldElementFp.prototype.divide = feFpDivide;\n\n// ----------------\n// ECPointFp\n\n// constructor\nfunction ECPointFp(curve, x, y, z) {\n  this.curve = curve;\n  this.x = x;\n  this.y = y;\n  // Projective coordinates: either zinv == null or z * zinv == 1\n  // z and zinv are just BigIntegers, not fieldElements\n  if (!z) {\n    this.z = BigInteger.ONE;\n  } else {\n    this.z = z;\n  }\n  this.zinv = null;\n  //TODO: compression flag\n}\n\nfunction pointFpGetX() {\n  if(!this.zinv) {\n    this.zinv = this.z.modInverse(this.curve.p);\n  }\n  var r = this.x.toBigInteger().multiply(this.zinv);\n  this.curve.reduce(r);\n  return this.curve.fromBigInteger(r);\n}\n\nfunction pointFpGetY() {\n  if(!this.zinv) {\n    this.zinv = this.z.modInverse(this.curve.p);\n  }\n  var r = this.y.toBigInteger().multiply(this.zinv);\n  this.curve.reduce(r);\n  return this.curve.fromBigInteger(r);\n}\n\nfunction pointFpEquals(other) {\n  if (other === this) {\n    return true;\n  }\n  if (this.isInfinity()) {\n    return other.isInfinity();\n  }\n  if (other.isInfinity()) {\n    return this.isInfinity();\n  }\n  var u, v;\n  // u = Y2 * Z1 - Y1 * Z2\n  u = other.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(other.z)).mod(this.curve.p);\n  if (!u.equals(BigInteger.ZERO)) {\n    return false;\n  }\n  // v = X2 * Z1 - X1 * Z2\n  v = other.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(other.z)).mod(this.curve.p);\n  return v.equals(BigInteger.ZERO);\n}\n\nfunction pointFpIsInfinity() {\n  if ((this.x == null) && (this.y == null)) {\n    return true;\n  }\n  return (this.z.equals(BigInteger.ZERO) && !this.y.toBigInteger().equals(BigInteger.ZERO));\n}\n\nfunction pointFpNegate() {\n    return new ECPointFp(this.curve, this.x, this.y.negate(), this.z);\n}\n\nfunction pointFpAdd(b) {\n  if (this.isInfinity()) {\n    return b;\n  }\n  if (b.isInfinity()) {\n    return this;\n  }\n\n  // u = Y2 * Z1 - Y1 * Z2\n  var u = b.y.toBigInteger().multiply(this.z).subtract(this.y.toBigInteger().multiply(b.z)).mod(this.curve.p);\n  // v = X2 * Z1 - X1 * Z2\n  var v = b.x.toBigInteger().multiply(this.z).subtract(this.x.toBigInteger().multiply(b.z)).mod(this.curve.p);\n\n  if (BigInteger.ZERO.equals(v)) {\n    if (BigInteger.ZERO.equals(u)) {\n      return this.twice(); // this == b, so double\n    }\n    return this.curve.getInfinity(); // this = -b, so infinity\n  }\n\n  var THREE = new BigInteger(\"3\");\n  var x1 = this.x.toBigInteger();\n  var y1 = this.y.toBigInteger();\n\n  var v2 = v.pow(2);\n  var v3 = v2.multiply(v);\n  var x1v2 = x1.multiply(v2);\n  var zu2 = u.pow(2).multiply(this.z);\n\n  // x3 = v * (z2 * (z1 * u^2 - 2 * x1 * v^2) - v^3)\n  var x3 = zu2.subtract(x1v2.shiftLeft(1)).multiply(b.z).subtract(v3).multiply(v).mod(this.curve.p);\n  // y3 = z2 * (3 * x1 * u * v^2 - y1 * v^3 - z1 * u^3) + u * v^3\n  var y3 = x1v2.multiply(THREE).multiply(u).subtract(y1.multiply(v3)).subtract(zu2.multiply(u)).multiply(b.z).add(u.multiply(v3)).mod(this.curve.p);\n  // z3 = v^3 * z1 * z2\n  var z3 = v3.multiply(this.z).multiply(b.z).mod(this.curve.p);\n\n  return new ECPointFp(this.curve, this.curve.fromBigInteger(x3), this.curve.fromBigInteger(y3), z3);\n}\n\nfunction pointFpTwice() {\n  if(this.isInfinity()) {\n    return this;\n  }\n  if (this.y.toBigInteger().signum() === 0) {\n    return this.curve.getInfinity();\n  }\n\n  // TODO: optimized handling of constants\n  var THREE = new BigInteger(\"3\");\n  var x1 = this.x.toBigInteger();\n  var y1 = this.y.toBigInteger();\n\n  var y1z1 = y1.multiply(this.z);\n  var y1sqz1 = y1z1.multiply(y1).mod(this.curve.p);\n  var a = this.curve.a.toBigInteger();\n\n  // w = 3 * x1^2 + a * z1^2\n  var w = x1.pow(2).multiply(THREE);\n  if (!BigInteger.ZERO.equals(a)) {\n    w = w.add(this.z.pow(2).multiply(a));\n  }\n  w = w.mod(this.curve.p);\n  //this.curve.reduce(w);\n  // x3 = 2 * y1 * z1 * (w^2 - 8 * x1 * y1^2 * z1)\n  var x3 = w.pow(2).subtract(x1.shiftLeft(3).multiply(y1sqz1)).shiftLeft(1).multiply(y1z1).mod(this.curve.p);\n  // y3 = 4 * y1^2 * z1 * (3 * w * x1 - 2 * y1^2 * z1) - w^3\n  var y3 = w.multiply(THREE).multiply(x1).subtract(y1sqz1.shiftLeft(1)).shiftLeft(2).multiply(y1sqz1).subtract(w.pow(2).multiply(w)).mod(this.curve.p);\n  // z3 = 8 * (y1 * z1)^3\n  var z3 = y1z1.pow(2).multiply(y1z1).shiftLeft(3).mod(this.curve.p);\n\n  return new ECPointFp(this.curve, this.curve.fromBigInteger(x3), this.curve.fromBigInteger(y3), z3);\n}\n\n// Simple NAF (Non-Adjacent Form) multiplication algorithm\n// TODO: modularize the multiplication algorithm\nfunction pointFpMultiply(k) {\n  if (this.isInfinity()) {\n    return this;\n  }\n  if (k.signum() === 0) {\n    return this.curve.getInfinity();\n  }\n\n  var e = k;\n  var h = e.multiply(new BigInteger(\"3\"));\n\n  var neg = this.negate();\n  var R = this;\n\n  var i;\n  for(i = h.bitLength() - 2; i > 0; --i) {\n    R = R.twice();\n\n    var hBit = h.testBit(i);\n    var eBit = e.testBit(i);\n\n    if (hBit !== eBit) {\n      R = R.add(hBit ? this : neg);\n    }\n  }\n\n  return R;\n}\n\n// Compute this*j + x*k (simultaneous multiplication)\nfunction pointFpMultiplyTwo(j, x, k) {\n  var i;\n  if (j.bitLength() > k.bitLength()) {\n    i = j.bitLength() - 1;\n  } else {\n    i = k.bitLength() - 1;\n  }\n\n  var R = this.curve.getInfinity();\n  var both = this.add(x);\n  while (i >= 0) {\n    R = R.twice();\n    if (j.testBit(i)) {\n      if (k.testBit(i)) {\n        R = R.add(both);\n      }\n      else {\n        R = R.add(this);\n      }\n    }\n    else {\n      if (k.testBit(i)) {\n        R = R.add(x);\n      }\n    }\n    --i;\n  }\n\n  return R;\n}\n\nECPointFp.prototype.getX = pointFpGetX;\nECPointFp.prototype.getY = pointFpGetY;\nECPointFp.prototype.equals = pointFpEquals;\nECPointFp.prototype.isInfinity = pointFpIsInfinity;\nECPointFp.prototype.negate = pointFpNegate;\nECPointFp.prototype.add = pointFpAdd;\nECPointFp.prototype.twice = pointFpTwice;\nECPointFp.prototype.multiply = pointFpMultiply;\nECPointFp.prototype.multiplyTwo = pointFpMultiplyTwo;\n\n// ----------------\n// ECCurveFp\n\n// constructor\nfunction ECCurveFp(p, a, b) {\n  this.p = p;\n  this.a = this.fromBigInteger(a);\n  this.b = this.fromBigInteger(b);\n  this.infinity = new ECPointFp(this, null, null);\n  this.reducer = new Barrett(this.p);\n}\n\nfunction curveFpgetP() {\n  return this.p;\n}\n\nfunction curveFpGetA() {\n  return this.a;\n}\n\nfunction curveFpGetB() {\n  return this.b;\n}\n\nfunction curveFpEquals(other) {\n  if (other === this) {\n    return true;\n  }\n  return (this.p.equals(other.p) && this.a.equals(other.a) && this.b.equals(other.b));\n}\n\nfunction curveFpContains(pt) {\n  // y^2 = x^3 + a*x + b mod p\n  var x = pt.getX().toBigInteger(),\n      y = pt.getY().toBigInteger(),\n      a = this.a.toBigInteger(),\n      b = this.b.toBigInteger(),\n      p = this.p;\n\n  var left = y.pow(2).mod(p),\n      right = x.pow(3).add(a.multiply(x)).add(b).mod(p)\n\n  return left.equals(right);\n}\n\nfunction curveFpGetInfinity() {\n  return this.infinity;\n}\n\nfunction curveFpFromBigInteger(x) {\n  return new ECFieldElementFp(this.p, x);\n}\n\nfunction curveReduce(x) {\n  this.reducer.reduce(x);\n}\n\n// for now, work with hex strings because they're easier in JS\nfunction curveFpDecodePointHex(s) {\n  switch (parseInt(s.substring(0, 2), 16)) {\n    // first byte\n    case 0:\n      return this.infinity;\n    case 2:\n    case 3:\n      // point compression not supported yet\n      return null;\n    case 4:\n    case 6:\n    case 7:\n      var len = (s.length - 2) / 2;\n      var xHex = s.substr(2, len);\n      var yHex = s.substr(len + 2, len);\n\n      return new ECPointFp(this,\n                           this.fromBigInteger(new BigInteger(xHex, 16)),\n                           this.fromBigInteger(new BigInteger(yHex, 16)));\n\n    default: // unsupported\n      return null;\n    }\n}\n\nfunction curveFpEncodePointHex(p) {\n  if (p.isInfinity()) {\n    return \"00\";\n  }\n  var xHex = p.getX().toBigInteger().toString(16);\n  var yHex = p.getY().toBigInteger().toString(16);\n  var oLen = this.getP().toString(16).length;\n  if ((oLen % 2) !== 0) {\n    oLen++;\n  }\n  while (xHex.length < oLen) {\n    xHex = \"0\" + xHex;\n  }\n  while (yHex.length < oLen) {\n    yHex = \"0\" + yHex;\n  }\n  return \"04\" + xHex + yHex;\n}\n\nECCurveFp.prototype.getP = curveFpgetP;\nECCurveFp.prototype.getA = curveFpGetA;\nECCurveFp.prototype.getB = curveFpGetB;\nECCurveFp.prototype.equals = curveFpEquals;\nECCurveFp.prototype.contains = curveFpContains;\nECCurveFp.prototype.getInfinity = curveFpGetInfinity;\nECCurveFp.prototype.fromBigInteger = curveFpFromBigInteger;\nECCurveFp.prototype.reduce = curveReduce;\nECCurveFp.prototype.decodePointHex = curveFpDecodePointHex;\nECCurveFp.prototype.encodePointHex = curveFpEncodePointHex;\n\n// Exports\nmodule.exports = {\n  ECFieldElementFp: ECFieldElementFp,\n  ECPointFp: ECPointFp,\n  ECCurveFp: ECCurveFp\n};\n","/*!\n * deps/forge.js - Forge Package Customization\n *\n * Copyright (c) 2015 Cisco Systems, Inc.  See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"node-forge/lib/forge\");\nrequire(\"node-forge/lib/aes\");\nrequire(\"node-forge/lib/asn1\");\nrequire(\"node-forge/lib/cipher\");\nrequire(\"node-forge/lib/hmac\");\nrequire(\"node-forge/lib/mgf1\");\nrequire(\"node-forge/lib/pbkdf2\");\nrequire(\"node-forge/lib/pem\");\nrequire(\"node-forge/lib/pkcs1\");\nrequire(\"node-forge/lib/pkcs7\");\nrequire(\"node-forge/lib/pki\");\nrequire(\"node-forge/lib/prime\");\nrequire(\"node-forge/lib/prng\");\nrequire(\"node-forge/lib/pss\");\nrequire(\"node-forge/lib/random\");\nrequire(\"node-forge/lib/sha1\");\nrequire(\"node-forge/lib/sha256\");\nrequire(\"node-forge/lib/sha512\");\nrequire(\"node-forge/lib/util\");\n\n// Define AES \"raw\" cipher mode\nfunction modeRaw(options) {\n  options = options || {};\n  this.name = \"\";\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._blocks = this.blockSize / 4;\n  this._inBlock = new Array(this._blocks);\n  this._outBlock = new Array(this._blocks);\n}\n\nmodeRaw.prototype.start = function() {};\n\nmodeRaw.prototype.encrypt = function(input, output, finish) {\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  var i;\n\n  // get next block\n  for(i = 0; i < this._blocks; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(i = 0; i < this._blocks; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodeRaw.prototype.decrypt = function(input, output, finish) {\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  var i;\n\n  // get next block\n  for(i = 0; i < this._blocks; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(i = 0; i < this._blocks; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\n(function() {\n  var name = \"AES\",\n      mode = modeRaw,\n      factory;\n  factory = function() { return new forge.aes.Algorithm(name, mode); };\n  forge.cipher.registerAlgorithm(name, factory);\n})();\n\nmodule.exports = forge;\n","/*!\n * jwe/decrypt.js - Decrypt from a JWE\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar base64url = require(\"../util/base64url\"),\n    AlgConfig = require(\"../util/algconfig\"),\n    JWK = require(\"../jwk\"),\n    merge = require(\"../util/merge\"),\n    pako = require(\"pako\");\n\nvar DEFAULT_OPTIONS = {\n  algorithms: \"*\"\n};\n\n/**\n * @class JWE.Decrypter\n * @classdesc Processor of encrypted data.\n *\n * @description\n * **NOTE:** This class cannot be instantiated directly. Instead\n * call {@link JWE.createDecrypt}.\n */\nfunction JWEDecrypter(ks, globalOpts) {\n  var assumedKey,\n    keystore;\n\n  if (JWK.isKey(ks)) {\n    assumedKey = ks;\n    keystore = assumedKey.keystore;\n  } else if (JWK.isKeyStore(ks)) {\n    keystore = ks;\n  } else {\n    throw new TypeError(\"Keystore must be provided\");\n  }\n\n  globalOpts = merge({}, DEFAULT_OPTIONS, globalOpts);\n\n  /**\n   * Decrypts the given input.\n   *\n   * {opts}, if provided, is used to customize this specific decrypt operation.\n   * This argument has the same semantics as {JWE.createDecrypt}, and takes\n   * precedence over those options.\n   *\n   * The returned PRomise, when fulfilled, returns an object with the\n   * following members:\n   *\n   * - `header` - The JOSE Header, combined from the relevant \"header\" and\n   *            \"protected\" fields from the original JWE object.\n   * - `protected` - An array containing the names of the protected fields\n   * - `key` - The used to decrypt the content\n   * - `payload` - The decrypted content (as a Buffer)\n   * - `plaintext` - An alias for `payload`\n   *\n   * @param {Object|String} input The encrypted content\n   * @param {Object} [opts] The options for this decryption operation.\n   * @returns {Promise} A promise for the decyprted plaintext\n   */\n  Object.defineProperty(this, \"decrypt\", {\n    value: function(input, opts) {\n      opts = merge({}, globalOpts, opts || {});\n      var extraHandlers = opts.handlers || {};\n      var handlerKeys = Object.keys(extraHandlers);\n      var algSpec = new AlgConfig(opts.algorithms);\n\n      /* eslint camelcase: [0] */\n      if (typeof input === \"string\") {\n        input = input.split(\".\");\n        input = {\n          protected: input[0],\n          recipients: [\n            {\n              encrypted_key: input[1]\n            }\n          ],\n          iv: input[2],\n          ciphertext: input[3],\n          tag: input[4]\n        };\n      } else if (!input || typeof input !== \"object\") {\n        throw new Error(\"invalid input\");\n      }\n      if (\"encrypted_key\" in input) {\n        input.recipients = [\n          {\n            encrypted_key: input.encrypted_key\n          }\n        ];\n      }\n\n      var promise;\n\n      // ensure recipients exists\n      var rcptList = input.recipients || [{}];\n      promise = Promise.resolve(rcptList);\n\n      //combine fields\n      var fields,\n          protect;\n      promise = promise.then(function(rcptList) {\n        if (input.protected) {\n          protect = base64url.decode(input.protected).toString(\"utf8\");\n          protect = JSON.parse(protect);\n\n          // verify \"crit\" field first\n          var crit = protect.crit;\n          if (crit) {\n            if (!Array.isArray(crit)) {\n              return Promise.reject(new Error(\"Invalid 'crit' header\"));\n            }\n            for (var idx = 0; crit.length > idx; idx++) {\n              if (-1 === handlerKeys.indexOf(crit[idx])) {\n                return Promise.reject(new Error(\n                    \"Critical extension is not supported: \" + crit[idx]\n                ));\n              }\n            }\n          }\n\n          fields = protect;\n          protect = Object.keys(protect);\n        } else {\n          fields = {};\n          protect = [];\n        }\n        fields = merge(input.unprotected || {}, fields);\n\n        rcptList = rcptList.map(function(r) {\n          var promise = Promise.resolve();\n          var header = r.header || {};\n          header = merge(header, fields);\n          r.header = header;\n          r.protected = protect;\n\n          // check on allowed algorithms\n          if (!algSpec.match(header.alg)) {\n            promise = promise.then(function() {\n              return Promise.reject(new Error(\"Algorithm not allowed: \" + header.alg));\n            });\n          }\n          if (!algSpec.match(header.enc)) {\n            promise = promise.then(function () {\n              return Promise.reject(new Error(\"Algorithm not allowed: \" + header.enc));\n            });\n          }\n\n          if (header.epk) {\n            promise = promise.then(function() {\n              return JWK.asKey(header.epk);\n            });\n            promise = promise.then(function(epk) {\n              header.epk = epk.toObject(false);\n            });\n          }\n          return promise.then(function() {\n            return r;\n          });\n        });\n\n        return Promise.all(rcptList);\n      });\n\n      // decrypt with first key found\n      var algKey,\n        encKey,\n        kdata;\n      promise = promise.then(function(rcptList) {\n        var jwe = {};\n        return new Promise(function(resolve, reject) {\n          var processKey = function() {\n            var rcpt = rcptList.shift();\n            if (!rcpt) {\n              reject(new Error(\"no key found\"));\n              return;\n            }\n\n            var algPromise = Promise.resolve(rcpt);\n            algPromise = algPromise.then(function(rcpt) {\n              // try to unwrap encrypted key\n              var prekey = kdata = rcpt.encrypted_key || \"\";\n              prekey = base64url.decode(prekey);\n              algKey = assumedKey || keystore.get({\n                use: \"enc\",\n                alg: rcpt.header.alg,\n                kid: rcpt.header.kid\n              });\n              if (algKey) {\n                return algKey.unwrap(rcpt.header.alg, prekey, rcpt.header);\n              } else {\n                return Promise.reject();\n              }\n            });\n            algPromise = algPromise.then(function(key) {\n              encKey = {\n                \"kty\": \"oct\",\n                \"k\": base64url.encode(key)\n              };\n              encKey = JWK.asKey(encKey);\n              jwe.key = algKey;\n              jwe.header = rcpt.header;\n              jwe.protected = rcpt.protected;\n              resolve(jwe);\n            });\n            algPromise.catch(processKey);\n          };\n          processKey();\n        });\n      });\n\n      // assign decipher inputs\n      promise = promise.then(function(jwe) {\n        jwe.iv = input.iv;\n        jwe.tag = input.tag;\n        jwe.ciphertext = input.ciphertext;\n\n        return jwe;\n      });\n\n      // process any prepare-decrypt handlers\n      promise = promise.then(function(jwe) {\n        var processing = [];\n        handlerKeys.forEach(function(h) {\n          h = extraHandlers[h];\n          var p;\n          if (\"function\" === typeof h) {\n            p = h(jwe);\n          } else if (\"object\" === typeof h && \"function\" === typeof h.prepare) {\n            p = h.prepare(jwe);\n          }\n          if (p) {\n            processing.push(Promise.resolve(p));\n          }\n        });\n        return Promise.all(processing).then(function() {\n          // don't actually care about individual handler results\n          // assume {jwe} is updated\n          return jwe;\n        });\n      });\n\n      // prepare decrypt inputs\n      promise = promise.then(function(jwe) {\n        if (!Buffer.isBuffer(jwe.ciphertext)) {\n          jwe.ciphertext = base64url.decode(jwe.ciphertext);\n        }\n\n        return jwe;\n      });\n\n      // decrypt it!\n      promise = promise.then(function(jwe) {\n        var adata = input.protected;\n        if (\"aad\" in input && null != input.aad) {\n          adata += \".\" + input.aad;\n        }\n\n        var params = {\n          iv: jwe.iv,\n          adata: adata,\n          tag: jwe.tag,\n          kdata: kdata,\n          epu: jwe.epu,\n          epv: jwe.epv\n        };\n        var cdata = jwe.ciphertext;\n\n        delete jwe.iv;\n        delete jwe.tag;\n        delete jwe.ciphertext;\n\n        return encKey.\n          then(function(enkKey) {\n            return enkKey.decrypt(jwe.header.enc, cdata, params).\n              then(function(pdata) {\n                jwe.payload = jwe.plaintext = pdata;\n                return jwe;\n              });\n          });\n      });\n\n      // (OPTIONAL) decompress plaintext\n      promise = promise.then(function(jwe) {\n        if (\"DEF\" === jwe.header.zip) {\n          return new Promise(function(resolve, reject) {\n            try {\n              var data = pako.inflateRaw(Buffer.from(jwe.plaintext))\n\n              jwe.payload = jwe.plaintext = Buffer.from(data);\n              resolve(jwe);\n            } catch (err) {\n              reject(err);\n            }\n          });\n        }\n\n        return jwe;\n      });\n\n      // process any post-decrypt handlers\n      promise = promise.then(function(jwe) {\n        var processing = [];\n        handlerKeys.forEach(function(h) {\n          h = extraHandlers[h];\n          var p;\n          if (\"object\" === typeof h && \"function\" === typeof h.complete) {\n            p = h.complete(jwe);\n          }\n          if (p) {\n            processing.push(Promise.resolve(p));\n          }\n        });\n        return Promise.all(processing).then(function() {\n          // don't actually care about individual handler results\n          // assume {jwe} is updated\n          return jwe;\n        });\n      });\n\n      return promise;\n    }\n  });\n}\n\n/**\n * @description\n * Creates a new Decrypter for the given Key or KeyStore.\n *\n * {opts}, when provided, is used to customize decryption processes. The\n * following options are currently supported:\n *\n * - `handlers` - An object where each name is a JOSE header member name and\n *   the value can be a boolean, function, or an object.\n *\n * Handlers are intended to support 'crit' extensions. When a boolean value,\n * the member is expected to be processed once decryption is fully complete.\n * When a function, it is called just before the ciphertext is decrypted\n * (processed as if it were a `prepare` handler, as decribed below). When an\n * object, it can contain any of the following members:\n *\n * - `recipient` - A function called after a valid key is determined; it takes\n *   an object describing the recipient, and returns a Promise that is\n *   fulfilled once the handler's processing is complete.\n * - `prepare` - A function called just prior to decrypting the ciphertext;\n *   it takes an object describing the decryption result (but containing\n *   `ciphertext` and `tag' instead of `payload` and `plaintext`), and\n *   returns a Promise that is fulfilled once the handler's processing is\n *   complete.\n * - `complete` - A function called once decryption is complete, just prior\n *   to fulfilling the Promise returned by `decrypt()`; it takes the object\n *   that will be returned by `decrypt()`'s fulfilled Promise, and returns\n *   a Promise that is fulfilled once the handler's processing is complete.\n *\n * Note that normal processing of `decrypt()` does not continue until all\n * relevant handlers have completed. Any changes handlers make to the\n * provided objects affects `decrypt()`'s processing.\n *\n * @param {JWK.Key|JWK.KeyStore} ks The Key or KeyStore to use for decryption.\n * @param {Object} [opts] The options for this Decrypter.\n * @returns {JWE.Decrypter} The new Decrypter.\n */\nfunction createDecrypt(ks, opts) {\n  var dec = new JWEDecrypter(ks, opts);\n  return dec;\n}\n\nmodule.exports = {\n  decrypter: JWEDecrypter,\n  createDecrypt: createDecrypt\n};\n","/*!\n * jwe/defaults.js - Defaults for JWEs\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\n/**\n * @description\n * The default options for {@link JWE.createEncrypt}.\n *\n * @property {Boolean|String} zip Determines the compression algorithm to\n *           apply to the plaintext (if any) before it is encrypted. This can\n *           also be `true` (which is equivalent to `\"DEF\"`) or **`false`**\n *           (the default, which is equivalent to no compression).\n * @property {String} format Determines the serialization format of the\n *           output.  Expected to be `\"general\"` for general JSON\n *           Serialization, `\"flattened\"` for flattened JSON Serialization,\n *           or `\"compact\"` for Compact Serialization (default is\n *           **`\"general\"`**).\n * @property {Boolean} compact Determines if the output is the Compact\n *           serialization (`true`) or the JSON serialization (**`false`**,\n *           the default).\n * @property {String} contentAlg The algorithm used to encrypt the plaintext\n *           (default is **`\"A128CBC-HS256\"`**).\n * @property {String|String[]} protect The names of the headers to integrity\n *           protect.  The value `\"\"` means that none of the header parameters\n *           are integrity protected, while `\"*\"` (the default) means that all\n *           header parameters are integrity protected.\n */\nvar JWEDefaults = {\n  zip: false,\n  format: \"general\",\n  contentAlg: \"A128CBC-HS256\",\n  protect: \"*\"\n};\n\nmodule.exports = JWEDefaults;\n","/*!\n * jwe/encrypt.js - Encrypt to a JWE\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar util = require(\"../util\"),\n    generateCEK = require(\"./helpers\").generateCEK,\n    JWK = require(\"../jwk\"),\n    slice = require(\"./helpers\").slice,\n    pako = require(\"pako\"),\n    CONSTANTS = require(\"../algorithms/constants\");\n\nvar assign = require(\"lodash/assign\");\nvar clone = require(\"lodash/clone\");\nvar DEFAULTS = require(\"./defaults\");\n\n/**\n * @class JWE.Encrypter\n * @classdesc\n * Generator of encrypted data.\n *\n * @description\n * **NOTE:** This class cannot be instantiated directly. Instead call {@link\n * JWE.createEncrypt}.\n */\nfunction JWEEncrypter(cfg, fields, recipients) {\n  var finalized = false,\n    format = cfg.format || \"general\",\n    protectAll = !!cfg.protectAll,\n    content = Buffer.alloc(0);\n\n  /**\n   * @member {String} JWE.Encrypter#zip\n   * @readonly\n   * @description\n   * Indicates the compression algorithm applied to the plaintext\n   * before it is encrypted.  The possible values are:\n   *\n   * + **`\"DEF\"`**: Compress the plaintext using the DEFLATE algorithm.\n   * + **`\"\"`**: Do not compress the plaintext.\n   */\n  Object.defineProperty(this, \"zip\", {\n    get: function() {\n      return fields.zip || \"\";\n    },\n    enumerable: true\n  });\n  /**\n   * @member {Boolean} JWE.Encrypter#compact\n   * @readonly\n   * @description\n   * Indicates whether the output of this encryption generator is\n   * using the Compact serialization (`true`) or the JSON\n   * serialization (`false`).\n   */\n  Object.defineProperty(this, \"compact\", {\n    get: function() { return \"compact\" === format; },\n    enumerable: true\n  });\n  /**\n   * @member {String} JWE.Encrypter#format\n   * @readonly\n   * @description\n   * Indicates the format the output of this encryption generator takes.\n   */\n  Object.defineProperty(this, \"format\", {\n    get: function() { return format; },\n    enumerable: true\n  });\n  /**\n   * @member {String[]} JWE.Encrypter#protected\n   * @readonly\n   * @description\n   * The header parameter names that are protected. Protected header fields\n   * are first serialized to UTF-8 then encoded as util.base64url, then used as\n   * the additional authenticated data in the encryption operation.\n   */\n  Object.defineProperty(this, \"protected\", {\n    get: function() {\n      return clone(cfg.protect);\n    },\n    enumerable: true\n  });\n  /**\n   * @member {Object} JWE.Encrypter#header\n   * @readonly\n   * @description\n   * The global header parameters, both protected and unprotected. Call\n   * {@link JWE.Encrypter#protected} to determine which parameters will\n   * be protected.\n   */\n  Object.defineProperty(this, \"header\", {\n    get: function() {\n      return clone(fields);\n    },\n    enumerable: true\n  });\n\n  /**\n   * @method JWE.Encrypter#update\n   * @description\n   * Updates the plaintext data for the encryption generator. The plaintext\n   * is appended to the end of any other plaintext already applied.\n   *\n   * If {data} is a Buffer, {encoding} is ignored. Otherwise, {data} is\n   * converted to a Buffer internally to {encoding}.\n   *\n   * @param {Buffer|String} [data] The plaintext to apply.\n   * @param {String} [encoding] The encoding of the plaintext.\n   * @returns {JWE.Encrypter} This encryption generator.\n   * @throws {Error} If ciphertext has already been generated.\n   */\n  Object.defineProperty(this, \"update\", {\n    value: function(data, encoding) {\n      if (finalized) {\n        throw new Error(\"already final\");\n      }\n      if (data != null) {\n        data = util.asBuffer(data, encoding);\n        if (content.length) {\n          content = Buffer.concat([content, data],\n                      content.length + data.length);\n        } else {\n          content = data;\n        }\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @method JWE.Encrypter#final\n   * @description\n   * Finishes the encryption operation.\n   *\n   * The returned Promise, when fulfilled, is the JSON Web Encryption (JWE)\n   * object, either in the Compact (if {@link JWE.Encrypter#compact} is\n   * `true`) or the JSON serialization.\n   *\n   * @param {Buffer|String} [data] The final plaintext data to apply.\n   * @param {String} [encoding] The encoding of the final plaintext data\n   *        (if any).\n   * @returns {Promise} A promise for the encryption operation.\n   * @throws {Error} If ciphertext has already been generated.\n   */\n  Object.defineProperty(this, \"final\", {\n    value: function(data, encoding) {\n      if (finalized) {\n        return Promise.reject(new Error(\"already final\"));\n      }\n\n      // last-minute data\n      this.update(data, encoding);\n\n      // mark as done...ish\n      finalized = true;\n      var promise = Promise.resolve({});\n\n      // determine CEK and IV\n      var encAlg = fields.enc;\n      var encKey;\n      promise = promise.then(function(jwe) {\n        if (cfg.cek) {\n          encKey = JWK.asKey(cfg.cek);\n        }\n        return jwe;\n      });\n\n      // process recipients\n      promise = promise.then(function(jwe) {\n        var procR = function(r, one) {\n          var props = {};\n          props = assign(props, fields);\n          props = assign(props, r.header);\n\n          var algKey = r.key,\n              algAlg = props.alg;\n\n          // generate Ephemeral EC Key\n          var tks,\n              rpromise;\n          if ((props.alg || \"\").indexOf(\"ECDH-ES\") === 0) {\n            tks = algKey.keystore.temp();\n            if (r.epk) {\n              rpromise = Promise.resolve(r.epk).\n                then(function(epk) {\n                  r.header.epk = epk.toJSON(false, [\"kid\"]);\n                  props.epk = epk.toObject(true, [\"kid\"]);\n                });\n            } else {\n              rpromise = tks.generate(\"EC\", algKey.get(\"crv\")).\n                then(function(epk) {\n                  r.header.epk = epk.toJSON(false, [\"kid\"]);\n                  props.epk = epk.toObject(true, [\"kid\"]);\n                });\n            }\n          } else {\n            rpromise = Promise.resolve();\n          }\n\n          // encrypt the CEK\n          rpromise = rpromise.then(function() {\n            var cek,\n                p;\n            // special case 'alg=dir'\n            if (\"dir\" === algAlg && one) {\n              encKey = Promise.resolve(algKey);\n              p = encKey.then(function(jwk) {\n                // fixup encAlg\n                if (!encAlg) {\n                  props.enc = fields.enc = encAlg = jwk.algorithms(JWK.MODE_ENCRYPT)[0];\n                }\n                return {\n                  once: true,\n                  direct: true\n                };\n              });\n            } else {\n              if (!encKey) {\n                if (!encAlg) {\n                  props.enc = fields.enc = encAlg = cfg.contentAlg;\n                }\n                encKey = generateCEK(encAlg);\n              }\n              p = encKey.then(function(jwk) {\n                cek = jwk.get(\"k\", true);\n                // algKey may or may not be a promise\n                return algKey;\n              });\n              p = p.then(function(algKey) {\n                return algKey.wrap(algAlg, cek, props);\n              });\n            }\n            return p;\n          });\n          rpromise = rpromise.then(function(wrapped) {\n            if (wrapped.once && !one) {\n              return Promise.reject(new Error(\"cannot use 'alg':'\" + algAlg + \"' with multiple recipients\"));\n            }\n\n            var rjwe = {},\n                cek;\n            if (wrapped.data) {\n              cek = wrapped.data;\n              cek = util.base64url.encode(cek);\n            }\n\n            if (wrapped.direct && cek) {\n              // replace content key\n              encKey = JWK.asKey({\n                kty: \"oct\",\n                k: cek\n              });\n            } else if (cek) {\n              /* eslint camelcase: [0] */\n              rjwe.encrypted_key = cek;\n            }\n\n            if (r.header && Object.keys(r.header).length) {\n              rjwe.header = clone(r.header || {});\n            }\n            if (wrapped.header) {\n              rjwe.header = assign(rjwe.header || {},\n                                     wrapped.header);\n            }\n\n            return rjwe;\n           });\n           return rpromise;\n        };\n\n        var p = Promise.all(recipients);\n        p = p.then(function(rcpts) {\n          var single = (1 === rcpts.length);\n          rcpts = rcpts.map(function(r) {\n            return procR(r, single);\n          });\n          return Promise.all(rcpts);\n        });\n        p = p.then(function(rcpts) {\n          jwe.recipients = rcpts.filter(function(r) { return !!r; });\n          return jwe;\n        });\n        return p;\n      });\n\n      // normalize headers\n      var props = {};\n      promise = promise.then(function(jwe) {\n        var protect,\n          lenProtect,\n          unprotect,\n          lenUnprotect;\n\n        unprotect = clone(fields);\n        if ((protectAll && jwe.recipients.length === 1) || \"compact\" === format) {\n          // merge single recipient into fields\n          protect = {};\n          protect = assign({},\n                     unprotect,\n                    jwe.recipients[0].header);\n          lenProtect = Object.keys(protect).length;\n\n          unprotect = undefined;\n          lenUnprotect = 0;\n\n          delete jwe.recipients[0].header;\n          if (Object.keys(jwe.recipients[0]).length === 0) {\n            jwe.recipients.splice(0, 1);\n          }\n        } else {\n          protect = {};\n          lenProtect = 0;\n          lenUnprotect = Object.keys(unprotect).length;\n          cfg.protect.forEach(function(f) {\n            // remove protected header values from body unprotected header\n            if (!(f in unprotect)) {\n              return;\n            }\n            protect[f] = unprotect[f];\n            lenProtect++;\n\n            delete unprotect[f];\n            lenUnprotect--;\n          });\n\n          jwe.recipients = (jwe.recipients || []).map(function(rcpt) {\n            rcpt = rcpt || {};\n            var header = rcpt.header;\n            if (header) {\n              Object.keys(header).forEach(function (f) {\n                if (f in protect) { delete header[f]; }\n              });\n              if (!Object.keys(header).length) {\n                delete rcpt.header;\n              }\n            }\n            return rcpt;\n          });\n        }\n\n        if (!jwe.recipients || jwe.recipients.length === 0) {\n          delete jwe.recipients;\n        }\n\n        // \"serialize\" (and setup merged props)\n        if (unprotect && lenUnprotect > 0) {\n          props = assign(props, unprotect);\n          jwe.unprotected = unprotect;\n        }\n        if (protect && lenProtect > 0) {\n          props = assign(props, protect);\n          protect = JSON.stringify(protect);\n          jwe.protected = util.base64url.encode(protect, \"utf8\");\n        }\n\n        return jwe;\n      });\n\n      // (OPTIONAL) compress plaintext\n      promise = promise.then(function(jwe) {\n        var pdata = content;\n        if (!props.zip) {\n          jwe.plaintext = pdata;\n          return jwe;\n        } else if (props.zip === \"DEF\") {\n          return new Promise(function(resolve, reject) {\n            try {\n              var data = pako.deflateRaw(Buffer.from(pdata, \"binary\"));\n\n              jwe.plaintext = Buffer.from(data);\n              resolve(jwe);\n            } catch (error) {\n              reject(error);\n            }\n          });\n        }\n        return Promise.reject(new Error(\"unsupported 'zip' mode\"));\n      });\n\n      // encrypt plaintext\n      promise = promise.then(function(jwe) {\n        props.adata = jwe.protected;\n        if (\"aad\" in cfg && cfg.aad != null) {\n          props.adata += \".\" + cfg.aad;\n          props.adata = Buffer.from(props.adata, \"utf8\");\n        }\n        // calculate IV\n        var iv = cfg.iv ||\n                 util.randomBytes(CONSTANTS.NONCELENGTH[encAlg] / 8);\n        if (\"string\" === typeof iv) {\n          iv = util.base64url.decode(iv);\n        }\n        props.iv = iv;\n\n        if (\"recipients\" in jwe && jwe.recipients.length === 1) {\n          props.kdata = jwe.recipients[0].encrypted_key;\n        }\n\n        if (\"epu\" in cfg && cfg.epu != null) {\n          props.epu = cfg.epu;\n        }\n\n        if (\"epv\" in cfg && cfg.epv != null) {\n          props.epv = cfg.epv;\n        }\n\n        var pdata = jwe.plaintext;\n        delete jwe.plaintext;\n        return encKey.then(function(encKey) {\n          var p = encKey.encrypt(encAlg, pdata, props);\n          p = p.then(function(result) {\n            jwe.iv = util.base64url.encode(iv, \"binary\");\n            if (\"aad\" in cfg && cfg.aad != null) {\n             jwe.aad = cfg.aad;\n            }\n            jwe.ciphertext = util.base64url.encode(result.data, \"binary\");\n            jwe.tag = util.base64url.encode(result.tag, \"binary\");\n            return jwe;\n          });\n          return p;\n        });\n      });\n\n      // (OPTIONAL) compact/flattened results\n      switch (format) {\n        case \"compact\":\n          promise = promise.then(function(jwe) {\n            var compact = new Array(5);\n\n            compact[0] = jwe.protected;\n            if (jwe.recipients && jwe.recipients[0]) {\n              compact[1] = jwe.recipients[0].encrypted_key;\n            }\n\n            compact[2] = jwe.iv;\n            compact[3] = jwe.ciphertext;\n            compact[4] = jwe.tag;\n            compact = compact.join(\".\");\n\n            return compact;\n          });\n          break;\n        case \"flattened\":\n          promise = promise.then(function(jwe) {\n            var flattened = {},\n                rcpt = jwe.recipients && jwe.recipients[0];\n\n            if (jwe.protected) {\n              flattened.protected = jwe.protected;\n            }\n            if (jwe.unprotected) {\n              flattened.unprotected = jwe.unprotected;\n            }\n            [\"header\", \"encrypted_key\"].forEach(function(f) {\n              if (!rcpt) { return; }\n              if (!(f in rcpt)) { return; }\n              if (!rcpt[f]) { return; }\n              if (\"object\" === typeof rcpt[f] && !Object.keys(rcpt[f]).length) { return; }\n              flattened[f] = rcpt[f];\n            });\n            if (jwe.aad) {\n              flattened.aad = jwe.aad;\n            }\n            flattened.iv = jwe.iv;\n            flattened.ciphertext = jwe.ciphertext;\n            flattened.tag = jwe.tag;\n\n            return flattened;\n          });\n          break;\n        case \"general\":\n          promise = promise.then(function(jwe) {\n            var recipients = jwe.recipients || [];\n            recipients = recipients.map(function (rcpt) {\n              if (!Object.keys(rcpt).length) { return undefined; }\n              return rcpt;\n            });\n            recipients = recipients.filter(function (rcpt) { return !!rcpt; });\n            if (recipients.length) {\n              jwe.recipients = recipients;\n            } else {\n              delete jwe.recipients;\n            }\n\n            return jwe;\n          });\n      }\n\n      return promise;\n    }\n  });\n}\n\nfunction createEncrypt(opts, rcpts) {\n  // fixup recipients\n  var options = opts,\n    rcptStart = 1,\n    rcptList = rcpts;\n\n  if (arguments.length === 0) {\n    throw new Error(\"at least one recipient must be provided\");\n  }\n  if (arguments.length === 1) {\n    // assume opts is the recipient list\n    rcptList = opts;\n    rcptStart = 0;\n    options = {};\n  } else if (JWK.isKey(opts) ||\n        (opts && \"kty\" in opts) ||\n        (opts && \"key\" in opts &&\n        (JWK.isKey(opts.key) || \"kty\" in opts.key))) {\n    rcptList = opts;\n    rcptStart = 0;\n    options = {};\n  } else {\n    options = clone(opts);\n  }\n  if (!Array.isArray(rcptList)) {\n    rcptList = slice(arguments, rcptStart);\n  }\n\n  // fixup options\n  options = assign(clone(DEFAULTS), options);\n\n  // setup header fields\n  var fields = clone(options.fields || {});\n  if (options.zip) {\n    fields.zip = (typeof options.zip === \"boolean\") ?\n           (options.zip ? \"DEF\" : false) :\n           options.zip;\n  }\n  options.format = (options.compact ? \"compact\" : options.format) || \"general\";\n  switch (options.format) {\n    case \"compact\":\n      if (\"aad\" in opts) {\n        throw new Error(\"additional authenticated data cannot be used for compact serialization\");\n      }\n      /* eslint no-fallthrough: [0] */\n    case \"flattened\":\n      if (rcptList.length > 1) {\n        throw new Error(\"too many recipients for compact serialization\");\n      }\n      break;\n  }\n\n  // note protected fields (globally)\n  // protected fields are global only\n  var protectAll = false;\n  if (\"compact\" === options.format || \"*\" === options.protect) {\n    protectAll = true;\n    options.protect = Object.keys(fields).concat(\"enc\");\n  } else if (typeof options.protect === \"string\") {\n    options.protect = [options.protect];\n  } else if (Array.isArray(options.protect)) {\n    options.protect = options.protect.concat();\n  } else if (!options.protect) {\n    options.protect = [];\n  } else {\n    throw new Error(\"protect must be a list of fields\");\n  }\n\n  if (protectAll && 1 < rcptList.length) {\n    throw new Error(\"too many recipients to protect all header parameters\");\n  }\n\n  rcptList = rcptList.map(function(r, idx) {\n    var p;\n\n    // resolve a key\n    if (r && \"kty\" in r) {\n      p = JWK.asKey(r);\n      p = p.then(function(k) {\n        return {\n          key: k\n        };\n      });\n    } else if (r) {\n      p = JWK.asKey(r.key);\n      p = p.then(function(k) {\n        return {\n          header: r.header,\n          reference: r.reference,\n          key: k\n        };\n      });\n    } else {\n      p = Promise.reject(new Error(\"missing key for recipient \" + idx));\n    }\n\n    // convert ephemeral key (if present)\n    if (r.epk) {\n      p = p.then(function(recipient) {\n        return JWK.asKey(r.epk).\n          then(function(epk) {\n            recipient.epk = epk;\n            return recipient;\n          });\n      });\n    }\n\n    // resolve the complete recipient\n    p = p.then(function(recipient) {\n      var key = recipient.key;\n\n      // prepare the recipient header\n      var header = recipient.header || {};\n      recipient.header = header;\n      var props = {};\n      props = assign(props, fields);\n      props = assign(props, recipient.header);\n\n      // ensure key protection algorithm is set\n      if (!props.alg) {\n        props.alg = key.algorithms(JWK.MODE_WRAP)[0];\n        header.alg = props.alg;\n      }\n      if (!props.alg) {\n        return Promise.reject(new Error(\"key not valid for encrypting to recipient \" + idx));\n      }\n      header.alg = props.alg;\n\n      // determine the key reference\n      var ref = recipient.reference;\n      delete recipient.reference;\n      if (undefined === ref) {\n        // header already contains the key reference\n        ref = [\"kid\", \"jku\", \"x5c\", \"x5t\", \"x5u\"].some(function(k) {\n          return (k in header);\n        });\n        ref = !ref ? \"kid\" : null;\n      } else if (\"boolean\" === typeof ref) {\n        // explicit (positive | negative) request for key reference\n        ref = ref ? \"kid\" : null;\n      }\n      var jwk;\n      if (ref) {\n        jwk = key.toJSON();\n        if (\"jwk\" === ref) {\n          if (\"oct\" === key.kty) {\n            return Promise.reject(new Error(\"cannot embed key\"));\n          }\n          header.jwk = jwk;\n        } else if (ref in jwk) {\n          header[ref] = jwk[ref];\n        }\n      }\n\n      // freeze recipient\n      recipient = Object.freeze(recipient);\n      return recipient;\n    });\n\n    return p;\n  });\n\n  // create and configure encryption\n  var cfg = {\n    aad: (\"aad\" in options) ? util.base64url.encode(options.aad || \"\") : null,\n    contentAlg: options.contentAlg,\n    format: options.format,\n    protect: options.protect,\n    cek: options.cek,\n    iv: options.iv,\n    protectAll: protectAll\n  };\n  var enc = new JWEEncrypter(cfg, fields, rcptList);\n\n  return enc;\n}\n\nmodule.exports = {\n  encrypter: JWEEncrypter,\n  createEncrypt: createEncrypt\n};\n","/*!\n * jwe/helpers.js - JWE Internal Helper Functions\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar CONSTANTS = require(\"../algorithms/constants\"),\n    JWK = require(\"../jwk\");\n\nmodule.exports = {\n  slice: function(input, start) {\n    return Array.prototype.slice.call(input, start || 0);\n  },\n  generateCEK: function(enc) {\n    var ks = JWK.createKeyStore();\n    var len = CONSTANTS.KEYLENGTH[enc];\n\n    if (len) {\n        return ks.generate(\"oct\", len);\n    }\n\n    throw new Error(\"unsupported encryption algorithm\");\n  }\n};\n","/*!\n * jwe/index.js - JSON Web Encryption (JWE) Entry Point\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar JWE = {\n  createEncrypt: require(\"./encrypt\").createEncrypt,\n  createDecrypt: require(\"./decrypt\").createDecrypt\n};\n\nmodule.exports = JWE;\n","/*!\n * jwk/basekey.js - JWK Key Base Class Implementation\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar merge = require(\"../util/merge\");\nconst { v4: uuidv4 } = require(\"uuid\");\n\nvar assign = require(\"lodash/assign\");\nvar clone = require(\"lodash/clone\");\nvar flatten = require(\"lodash/flatten\");\nvar intersection = require(\"lodash/intersection\");\nvar omit = require(\"lodash/omit\");\nvar pick = require(\"lodash/pick\");\nvar uniq = require(\"lodash/uniq\");\n\nvar ALGORITHMS = require(\"../algorithms\"),\n    CONSTANTS = require(\"./constants.js\"),\n    HELPERS = require(\"./helpers.js\"),\n    UTIL = require(\"../util\");\n\n/**\n * @class JWK.Key\n * @classdesc\n * Represents a JSON Web Key instance.\n *\n * @description\n * **NOTE:** This class cannot be instantiated directly. Instead call\n * {@link JWK.asKey}, {@link JWK.KeyStore#add}, or\n * {@link JWK.KeyStore#generate}.\n */\nvar JWKBaseKeyObject = function(kty, ks, props, cfg) {\n  // ### validate/coerce arguments ###\n  if (!kty) {\n    throw new Error(\"kty cannot be null\");\n  }\n\n  if (!ks) {\n    throw new Error(\"keystore cannot be null\");\n  }\n\n  if (!props) {\n    throw new Error(\"props cannot be null\");\n  } else if (\"string\" === typeof props) {\n    props = JSON.parse(props);\n  }\n\n  if (!cfg) {\n    throw new Error(\"cfg cannot be null\");\n  }\n\n  var excluded = [];\n  var keys = {},\n      json = {},\n      prints,\n      kid;\n\n  props = clone(props);\n  // strip thumbprints if present\n  prints = assign({}, props[HELPERS.INTERNALS.THUMBPRINT_KEY] || {});\n  delete props[HELPERS.INTERNALS.THUMBPRINT_KEY];\n  Object.keys(prints).forEach(function(a) {\n    var h = prints[a];\n    if (!kid) {\n      kid = h;\n      if (Buffer.isBuffer(kid)) {\n        kid = UTIL.base64url.encode(kid);\n      }\n    }\n    if (!Buffer.isBuffer(h)) {\n      h = UTIL.base64url.decode(h);\n      prints[a] = h;\n    }\n  });\n\n  // force certain values\n  props.kty = kty;\n  props.kid = props.kid || kid || uuidv4();\n\n  // setup base info\n  var included = Object.keys(HELPERS.COMMON_PROPS).map(function(p) {\n    return HELPERS.COMMON_PROPS[p].name;\n  });\n  json.base = pick(props, included);\n  excluded = excluded.concat(Object.keys(json.base));\n\n  // setup public information\n  json.public = clone(props);\n  keys.public = cfg.publicKey(json.public);\n  if (keys.public) {\n    // exclude public values from extra\n    excluded = excluded.concat(Object.keys(json.public));\n  }\n\n  // setup private information\n  json.private = clone(props);\n  keys.private = cfg.privateKey(json.private);\n  if (keys.private) {\n    // exclude private values from extra\n    excluded = excluded.concat(Object.keys(json.private));\n  }\n\n  // setup extra information\n  json.extra = omit(props, excluded);\n\n  // TODO: validate 'alg' against supported algorithms\n\n  // setup calculated values\n  var keyLen;\n  if (keys.public && (\"length\" in keys.public)) {\n    keyLen = keys.public.length;\n  } else if (keys.private && (\"length\" in keys.private)) {\n    keyLen = keys.private.length;\n  } else {\n    keyLen = NaN;\n  }\n\n  // ### Public Properties ###\n  /**\n   * @member {JWK.KeyStore} JWK.Key#keystore\n   * @description\n   * The owning keystore.\n   */\n  Object.defineProperty(this, \"keystore\", {\n    value: ks,\n    enumerable: true\n  });\n  /**\n   * @member {Number} JWK.Key#length\n   * @description\n   * The size of this Key, in bits.\n   */\n  Object.defineProperty(this, \"length\", {\n    value: keyLen,\n    enumerable: true\n  });\n  /**\n   * @member {String} JWK.Key#kty\n   * @description\n   * The type of Key.\n   */\n  Object.defineProperty(this, \"kty\", {\n    value: kty,\n    enumerable: true\n  });\n\n  /**\n   * @member {String} JWK.Key#kid\n   * @description\n   * The identifier for this Key.\n   */\n  Object.defineProperty(this, \"kid\", {\n    value: json.base.kid,\n    enumerable: true\n  });\n  /**\n   * @member {String} JWK.Key#use\n   * @description\n   * The usage for this Key.\n   */\n  Object.defineProperty(this, \"use\", {\n    value: json.base.use || \"\",\n    enumerable: true\n  });\n  /**\n   * @member {String} JWK.Key#alg\n   * @description\n   * The sole algorithm this key can be used for.\n   */\n  Object.defineProperty(this, \"alg\", {\n    value: json.base.alg || \"\",\n    enumerable: true\n  });\n\n  // ### Public Methods ###\n  /**\n   * Generates the thumbprint of this Key.\n   *\n   * @param {String} [] The hash algorithm to use\n   * @returns {Promise} The promise for the thumbprint generation.\n   */\n  Object.defineProperty(this, \"thumbprint\", {\n    value: function(hash) {\n      hash = (hash || HELPERS.INTERNALS.THUMBPRINT_HASH).toUpperCase();\n      if (prints[hash]) {\n        // return cached value\n        return Promise.resolve(prints[hash]);\n      }\n      var p = HELPERS.thumbprint(cfg, json, hash);\n      p = p.then(function(result) {\n        if (result) {\n          prints[hash] = result;\n        }\n        return result;\n      });\n      return p;\n    }\n  });\n  /**\n   * @method JWK.Key#algorithms\n   * @description\n   * The possible algorithms this Key can be used for. The returned\n   * list is not any particular order, but is filtered based on the\n   * Key's intended usage.\n   *\n   * @param {String} mode The operation mode\n   * @returns {String[]} The list of supported algorithms\n   * @see JWK.Key#supports\n   */\n  Object.defineProperty(this, \"algorithms\", {\n    value: function(mode) {\n      var modes = [];\n      if (!this.use || this.use === \"sig\") {\n        if (!mode || CONSTANTS.MODE_SIGN === mode) {\n          modes.push(CONSTANTS.MODE_SIGN);\n        }\n        if (!mode || CONSTANTS.MODE_VERIFY === mode) {\n          modes.push(CONSTANTS.MODE_VERIFY);\n        }\n      }\n      if (!this.use || this.use === \"enc\") {\n        if (!mode || CONSTANTS.MODE_ENCRYPT === mode) {\n          modes.push(CONSTANTS.MODE_ENCRYPT);\n        }\n        if (!mode || CONSTANTS.MODE_DECRYPT === mode) {\n          modes.push(CONSTANTS.MODE_DECRYPT);\n        }\n        if (!mode || CONSTANTS.MODE_WRAP === mode) {\n          modes.push(CONSTANTS.MODE_WRAP);\n        }\n        if (!mode || CONSTANTS.MODE_UNWRAP === mode) {\n          modes.push(CONSTANTS.MODE_UNWRAP);\n        }\n      }\n\n      var self = this;\n      var algs = modes.map(function(m) {\n        return cfg.algorithms.call(self, keys, m);\n      });\n      algs = flatten(algs);\n      algs = uniq(algs);\n      if (this.alg) {\n        // TODO: fix this correctly\n        var valid;\n        if (\"oct\" === kty) {\n          valid = [this.alg, \"dir\"];\n        } else {\n          valid = [this.alg];\n        }\n        algs = intersection(algs, valid);\n      }\n\n      return algs;\n    }\n  });\n  /**\n   * @method JWK.Key#supports\n   * @description\n   * Determines if the given algorithm is supported.\n   *\n   * @param {String} alg The algorithm in question\n   * @param {String} [mode] The operation mode\n   * @returns {Boolean} `true` if {alg} is supported, and `false` otherwise.\n   * @see JWK.Key#algorithms\n   */\n  Object.defineProperty(this, \"supports\", {\n    value: function(alg, mode) {\n      return (this.algorithms(mode).indexOf(alg) !== -1);\n    }\n  });\n  /**\n   * @method JWK.Key#has\n   * @description\n   * Determines if this Key contains the given parameter.\n   *\n   * @param {String} name The name of the parameter\n   * @param {Boolean} [isPrivate=false] `true` if private parameters should be\n   *        checked.\n   * @returns {Boolean} `true` if the given parameter is present; `false`\n   *          otherwise.\n   */\n  Object.defineProperty(this, \"has\", {\n    value: function(name, isPrivate) {\n      var contains = false;\n      contains = contains || !!(json.base &&\n                                (name in json.base));\n      contains = contains || !!(keys.public &&\n                                (name in keys.public));\n      contains = contains || !!(json.extra &&\n                                (name in json.extra));\n      contains = contains || !!(isPrivate &&\n                                keys.private &&\n                                (name in keys.private));\n      // TODO: check for export restrictions\n\n      return contains;\n    }\n  });\n  /**\n   * @method JWK.Key#get\n   * @description\n   * Retrieves the value of the given parameter. The value returned by this\n   * method is in its natural format, which might not exactly match its\n   * JSON encoding (e.g., a binary string rather than a base64url-encoded\n   * string).\n   *\n   * **NOTE:** This method can return `false`. Call\n   * {@link JWK.Key#has} to determine if the parameter is present.\n   *\n   * @param {String} name The name of the parameter\n   * @param {Boolean} [isPrivate=false] `true` if private parameters should\n   *        be checked.\n   * @returns {any} The value of the named parameter, or undefined if\n   *          it is not present.\n   */\n  Object.defineProperty(this, \"get\", {\n    value: function(name, isPrivate) {\n      var src;\n      if (json.base && (name in json.base)) {\n        src = json.base;\n      } else if (keys.public && (name in keys.public)) {\n        src = keys.public;\n      } else if (json.extra && (name in json.extra)) {\n        src = json.extra;\n      } else if (isPrivate && keys.private && (name in keys.private)) {\n        // TODO: check for export restrictions\n        src = keys.private;\n      }\n\n      return src && src[name] || null;\n    }\n  });\n  /**\n   * @method JWK.Key#toJSON\n   * @description\n   * Returns the JSON representation of this Key.  All properties of the\n   * returned JSON object are properly encoded (e.g., base64url encoding for\n   * any binary strings).\n   *\n   * @param {Boolean} [isPrivate=false] `true` if private parameters should be\n   *        included.\n   * @param {String[]} [excluded] The list of parameters to exclude from\n   *        the returned JSON.\n   * @returns {Object} The plain JSON object\n   */\n  Object.defineProperty(this, \"toJSON\", {\n    value: function(isPrivate, excluded) {\n      // coerce arguments\n      if (Array.isArray(isPrivate)) {\n        excluded = isPrivate;\n        isPrivate = false;\n      }\n      var result = {};\n\n      // TODO: check for export restrictions\n      result = merge(result,\n                       json.base,\n                       json.public,\n                       (\"boolean\" === typeof isPrivate && isPrivate) ? json.private : {},\n                       json.extra);\n      result = omit(result, excluded || []);\n\n      return result;\n    }\n  });\n\n  /**\n   * @method JWK.Key#toPEM\n   * @description\n   * Returns the PEM representation of this Key as a string.\n   *\n   * @param {Boolean} [isPrivate=false] `true` if private parameters should be\n   *        included.\n   * @returns {string} The PEM-encoded string\n   */\n  Object.defineProperty(this, \"toPEM\", {\n    value: function(isPrivate) {\n      if (isPrivate === null) {\n        isPrivate = false;\n      }\n\n      if (!cfg.convertToPEM) {\n        throw new Error(\"Unsupported key type for PEM encoding\");\n      }\n      var k = (isPrivate) ? keys.private : keys.public;\n      if (!k) {\n        throw new Error(\"Invalid key\");\n      }\n      return cfg.convertToPEM.call(this, k, isPrivate);\n    }\n  });\n\n  /**\n   * @method JWK.Key#toObject\n   * @description\n   * Returns the plain object representing this Key.  All properties of the\n   * returned object are in their natural encoding (e.g., binary strings\n   * instead of base64url encoded).\n   *\n   * @param {Boolean} [isPrivate=false] `true` if private parameters should be\n   *        included.\n   * @param {String[]} [excluded] The list of parameters to exclude from\n   *        the returned object.\n   * @returns {Object} The plain Object.\n   */\n  Object.defineProperty(this, \"toObject\", {\n    value: function(isPrivate, excluded) {\n      // coerce arguments\n      if (Array.isArray(isPrivate)) {\n        excluded = isPrivate;\n        isPrivate = false;\n      }\n      var result = {};\n\n      // TODO: check for export restrictions\n      result = merge(result,\n                       json.base,\n                       keys.public,\n                       (\"boolean\" === typeof isPrivate && isPrivate) ? keys.private : {},\n                       json.extra);\n      result = omit(result, (excluded || []).concat(\"length\"));\n\n      return result;\n    }\n  });\n\n  /**\n   * @method JWK.Key#sign\n   * @description\n   * Sign the given data using the specified algorithm.\n   *\n   * **NOTE:** This is the primitive signing operation; the output is\n   * _**NOT**_ a JSON Web Signature (JWS) object.\n   *\n   * The Promise, when fulfilled, returns an Object with the following\n   * properties:\n   *\n   * + **data**: The data that was signed (and should be equal to {data}).\n   * + **mac**: The signature or message authentication code (MAC).\n   *\n   * @param {String} alg The signing algorithm\n   * @param {String|Buffer} data The data to sign\n   * @param {Object} [props] Additional properties for the signing\n   *        algorithm.\n   * @returns {Promise} The promise for the signing operation.\n   * @throws {Error} If {alg} is not appropriate for this Key; or if\n   *         this Key does not contain the appropriate parameters.\n   */\n  Object.defineProperty(this, \"sign\", {\n    value: function(alg, data, props) {\n      // validate appropriateness\n      if (this.algorithms(\"sign\").indexOf(alg) === -1) {\n        return Promise.reject(new Error(\"unsupported algorithm\"));\n      }\n      var k = cfg.signKey.call(this, alg, keys);\n      if (!k) {\n        return Promise.reject(new Error(\"improper key\"));\n      }\n\n      // prepare properties (if any)\n      props = (props) ?\n              clone(props) :\n              {};\n      if (cfg.signProps) {\n        props = merge(props, cfg.signProps.call(this, alg, props));\n      }\n      return ALGORITHMS.sign(alg, k, data, props);\n    }\n  });\n  /**\n   * @method JWK.Key#verify\n   * @description\n   * Verify the given data and signature using the specified algorithm.\n   *\n   * **NOTE:** This is the primitive verification operation; the input is\n   * _**NOT**_ a JSON Web Signature.</p>\n   *\n   * The Promise, when fulfilled, returns an Object with the following\n   * properties:\n   *\n   * + **data**: The data that was verified (and should be equal to\n   *   {data}).\n   * + **mac**: The signature or MAC that was verified (and should be equal\n   *   to {mac}).\n   * + **valid**: `true` if {mac} is valid for {data}.\n   *\n   * @param {String} alg The verification algorithm\n   * @param {String|Buffer} data The data to verify\n   * @param {String|Buffer} mac The signature or MAC to verify\n   * @param {Object} [props] Additional properties for the verification\n   *        algorithm.\n   * @returns {Promise} The promise for the verification operation.\n   * @throws {Error} If {alg} is not appropriate for this Key; or if\n   *         the Key does not contain the appropriate properties.\n   */\n  Object.defineProperty(this, \"verify\", {\n    value: function(alg, data, mac, props) {\n      // validate appropriateness\n      if (this.algorithms(\"verify\").indexOf(alg) === -1) {\n        return Promise.reject(new Error(\"unsupported algorithm\"));\n      }\n      var k = cfg.verifyKey.call(this, alg, keys);\n      if (!k) {\n        return Promise.reject(new Error(\"improper key\"));\n      }\n\n      // prepare properties (if any)\n      props = (props) ?\n              clone(props) :\n              {};\n      if (cfg.verifyProps) {\n        props = merge(props, cfg.verifyProps.call(this, alg, props));\n      }\n      return ALGORITHMS.verify(alg, k, data, mac, props);\n    }\n  });\n\n  /**\n   * @method JWK.Key#encrypt\n   * @description\n   * Encrypts the given data using the specified algorithm.\n   *\n   * **NOTE:** This is the primitive encryption operation; the output is\n   * _**NOT**_ a JSON Web Encryption (JWE) object.\n   *\n   * **NOTE:** This operation is treated as distinct from {@link\n   * JWK.Key#wrap}, as different algorithms and properties are often\n   * used for wrapping a key versues encrypting arbitrary data.\n   *\n   * The Promise, when fulfilled, returns an object with the following\n   * properties:\n   *\n   * + **data**: The ciphertext data\n   * + **mac**: The associated message authentication code (MAC).\n   *\n   * @param {String} alg The encryption algorithm\n   * @param {Buffer|String} data The data to encrypt\n   * @param {Object} [props] Additional properties for the encryption\n   *        algorithm.\n   * @returns {Promise} The promise for the encryption operation.\n   * @throws {Error} If {alg} is not appropriate for this Key; or if\n   *         this Key does not contain the appropriate parameters.\n   */\n  Object.defineProperty(this, \"encrypt\", {\n    value: function(alg, data, props) {\n      // validate appropriateness\n      if (this.algorithms(\"encrypt\").indexOf(alg) === -1) {\n        return Promise.reject(new Error(\"unsupported algorithm\"));\n      }\n      var k = cfg.encryptKey.call(this, alg, keys);\n      if (!k) {\n        return Promise.reject(new Error(\"improper key\"));\n      }\n\n      // prepare properties (if any)\n      props = (props) ?\n              clone(props) :\n              {};\n      if (cfg.encryptProps) {\n        props = merge(props, cfg.encryptProps.call(this, alg, props));\n      }\n      return ALGORITHMS.encrypt(alg, k, data, props);\n    }\n  });\n  /**\n   * @method JWK.Key#decrypt\n   * @description\n   * Decrypts the given data using the specified algorithm.\n   *\n   * **NOTE:** This is the primitive decryption operation; the input is\n   * _**NOT**_ a JSON Web Encryption (JWE) object.\n   *\n   * **NOTE:** This operation is treated as distinct from {@link\n   * JWK.Key#unwrap}, as different algorithms and properties are often used\n   * for unwrapping a key versues decrypting arbitrary data.\n   *\n   * The Promise, when fulfilled, returns the plaintext data.\n   *\n   * @param {String} alg The decryption algorithm.\n   * @param {Buffer|String} data The data to decypt.\n   * @param {Object} [props] Additional data for the decryption operation.\n   * @returns {Promise} The promise for the decryption operation.\n   * @throws {Error} If {alg} is not appropriate for this Key; or if\n   *         the Key does not contain the appropriate properties.\n   */\n  Object.defineProperty(this, \"decrypt\", {\n    value: function(alg, data, props) {\n      // validate appropriateness\n      if (this.algorithms(\"decrypt\").indexOf(alg) === -1) {\n        return Promise.reject(new Error(\"unsupported algorithm\"));\n      }\n      var k = cfg.decryptKey.call(this, alg, keys);\n      if (!k) {\n        return Promise.reject(new Error(\"improper key\"));\n      }\n\n      // prepare properties (if any)\n      props = (props) ?\n              clone(props) :\n              {};\n      if (cfg.decryptProps) {\n        props = merge(props, cfg.decryptProps.call(this, alg, props));\n      }\n      return ALGORITHMS.decrypt(alg, k, data, props);\n    }\n  });\n\n  /**\n   * @method JWK.Key#wrap\n   * @description\n   * Wraps the given key using the specified algorithm.\n   *\n   * **NOTE:** This is the primitive encryption operation; the output is\n   * _**NOT**_ a JSON Web Encryption (JWE) object.\n   *\n   * **NOTE:** This operation is treated as distinct from {@link\n   * JWK.Key#encrypt}, as different algorithms and properties are\n   * often used for wrapping a key versues encrypting arbitrary data.\n   *\n   * The Promise, when fulfilled, returns an object with the following\n   * properties:\n   *\n   * + **data**: The ciphertext data\n   * + **headers**: The additional header parameters to apply to a JWE.\n   *\n   * @param {String} alg The encryption algorithm\n   * @param {Buffer|String} data The data to encrypt\n   * @param {Object} [props] Additional properties for the encryption\n   *        algorithm.\n   * @returns {Promise} The promise for the encryption operation.\n   * @throws {Error} If {alg} is not appropriate for this Key; or if\n   *         this Key does not contain the appropriate parameters.\n   */\n  Object.defineProperty(this, \"wrap\", {\n    value: function(alg, data, props) {\n      // validate appropriateness\n      if (this.algorithms(\"wrap\").indexOf(alg) === -1) {\n        return Promise.reject(new Error(\"unsupported algorithm\"));\n      }\n      var k = cfg.wrapKey.call(this, alg, keys);\n      if (!k) {\n        return Promise.reject(new Error(\"improper key\"));\n      }\n\n      // prepare properties (if any)\n      props = (props) ?\n              clone(props) :\n              {};\n      if (cfg.wrapProps) {\n        props = merge(props, cfg.wrapProps.call(this, alg, props));\n      }\n      return ALGORITHMS.encrypt(alg, k, data, props);\n    }\n  });\n  /**\n   * @method JWK.Key#unwrap\n   * @description\n   * Unwraps the given key using the specified algorithm.\n   *\n   * **NOTE:** This is the primitive unwrap operation; the input is\n   * _**NOT**_ a JSON Web Encryption (JWE) object.\n   *\n   * **NOTE:** This operation is treated as distinct from {@link\n   * JWK.Key#decrypt}, as different algorithms and properties are often used\n   * for unwrapping a key versues decrypting arbitrary data.\n   *\n   * The Promise, when fulfilled, returns the unwrapped key.\n   *\n   * @param {String} alg The unwrap algorithm.\n   * @param {Buffer|String} data The data to unwrap.\n   * @param {Object} [props] Additional data for the unwrap operation.\n   * @returns {Promise} The promise for the unwrap operation.\n   * @throws {Error} If {alg} is not appropriate for this Key; or if\n   *         the Key does not contain the appropriate properties.\n   */\n  Object.defineProperty(this, \"unwrap\", {\n    value: function(alg, data, props) {\n      // validate appropriateness\n      if (this.algorithms(\"unwrap\").indexOf(alg) === -1) {\n        return Promise.reject(new Error(\"unsupported algorithm\"));\n      }\n      var k = cfg.unwrapKey.call(this, alg, keys);\n      if (!k) {\n        return Promise.reject(new Error(\"improper key\"));\n      }\n\n      // prepare properties (if any)\n      props = (props) ?\n              clone(props) :\n              {};\n      if (cfg.unwrapProps) {\n        props = merge(props, cfg.unwrapProps.call(this, alg, props));\n      }\n      return ALGORITHMS.decrypt(alg, k, data, props);\n    }\n  });\n};\n\nmodule.exports = JWKBaseKeyObject;\n","/*!\n * jwk/constants.js - Constants for JWKs\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nmodule.exports = {\n  MODE_SIGN: \"sign\",\n  MODE_VERIFY: \"verify\",\n  MODE_ENCRYPT: \"encrypt\",\n  MODE_DECRYPT: \"decrypt\",\n  MODE_WRAP: \"wrap\",\n  MODE_UNWRAP: \"unwrap\"\n};\n","/*!\n * jwk/rsa.js - RSA Key Representation\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar ecutil = require(\"../algorithms/ec-util.js\"),\n    forge = require(\"../deps/forge\"),\n    depsecc = require(\"../deps/ecc\");\n\nvar JWK = {\n  BaseKey: require(\"./basekey.js\"),\n  helpers: require(\"./helpers.js\")\n};\n\nvar SIG_ALGS = [\n  \"ES256\",\n  \"ES384\",\n  \"ES512\"\n];\nvar WRAP_ALGS = [\n  \"ECDH-ES\",\n  \"ECDH-ES+A128KW\",\n  \"ECDH-ES+A192KW\",\n  \"ECDH-ES+A256KW\"\n];\n\nvar EC_OID = ecutil.EC_OID;\nfunction oidToCurveName(oid) {\n  switch (oid) {\n    case \"1.2.840.10045.3.1.7\":\n      return \"P-256\";\n    case \"1.3.132.0.34\":\n      return \"P-384\";\n    case \"1.3.132.0.35\":\n      return \"P-521\";\n    default:\n      return null;\n  }\n}\n\nvar JWKEcCfg = {\n  publicKey: function(props) {\n    var fields = JWK.helpers.COMMON_PROPS.concat([\n      {name: \"crv\", type: \"string\"},\n      {name: \"x\", type: \"binary\"},\n      {name: \"y\", type: \"binary\"}\n    ]);\n    var pk = JWK.helpers.unpackProps(props, fields);\n    if (pk && pk.crv && pk.x && pk.y) {\n      pk.length = ecutil.curveSize(pk.crv);\n    } else {\n      delete pk.crv;\n      delete pk.x;\n      delete pk.y;\n    }\n\n    return pk;\n  },\n  privateKey: function(props) {\n    var fields = JWK.helpers.COMMON_PROPS.concat([\n      {name: \"crv\", type: \"string\"},\n      {name: \"x\", type: \"binary\"},\n      {name: \"y\", type: \"binary\"},\n      {name: \"d\", type: \"binary\"}\n    ]);\n    var pk = JWK.helpers.unpackProps(props, fields);\n    if (pk && pk.crv && pk.x && pk.y && pk.d) {\n      pk.length = ecutil.curveSize(pk.crv);\n    } else {\n      pk = undefined;\n    }\n\n    return pk;\n  },\n  thumbprint: function(json) {\n    if (json.public) {\n      json = json.public;\n    }\n    var fields = {\n      crv: json.crv,\n      kty: \"EC\",\n      x: json.x,\n      y: json.y\n    };\n    return fields;\n  },\n  algorithms: function(keys, mode) {\n    var len = (keys.public && keys.public.length) ||\n              (keys.private && keys.private.length) ||\n              0;\n    // NOTE: 521 is the actual, but 512 is the expected\n    if (len === 521) {\n        len = 512;\n    }\n\n    switch (mode) {\n      case \"encrypt\":\n      case \"decrypt\":\n        return [];\n      case \"wrap\":\n        return (keys.public && WRAP_ALGS) || [];\n      case \"unwrap\":\n        return (keys.private && WRAP_ALGS) || [];\n      case \"sign\":\n        if (!keys.private) {\n          return [];\n        }\n        return SIG_ALGS.filter(function(a) {\n          return (a === (\"ES\" + len));\n        });\n      case \"verify\":\n        if (!keys.public) {\n          return [];\n        }\n        return SIG_ALGS.filter(function(a) {\n          return (a === (\"ES\" + len));\n        });\n    }\n  },\n\n  encryptKey: function(alg, keys) {\n    return keys.public;\n  },\n  decryptKey: function(alg, keys) {\n    return keys.private;\n  },\n\n  wrapKey: function(alg, keys) {\n    return keys.public;\n  },\n  unwrapKey: function(alg, keys) {\n    return keys.private;\n  },\n\n  signKey: function(alg, keys) {\n    return keys.private;\n  },\n  verifyKey: function(alg, keys) {\n    return keys.public;\n  }\n};\nJWKEcCfg.convertToPEM = ecutil.convertToPEM;\n\n// Inspired by digitalbaazar/node-forge/js/rsa.js\nvar validators = {\n  oid: EC_OID,\n  privateKey: {\n    // ECPrivateKey\n    name: \"ECPrivateKey\",\n    tagClass: forge.asn1.Class.UNIVERSAL,\n    type: forge.asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [\n      {\n        // EC version\n        name: \"ECPrivateKey.version\",\n        tagClass: forge.asn1.Class.UNIVERSAL,\n        type: forge.asn1.Type.INTEGER,\n        constructed: false\n      },\n      {\n        // private value (d)\n        name: \"ECPrivateKey.private\",\n        tagClass: forge.asn1.Class.UNIVERSAL,\n        type: forge.asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: \"d\"\n      },\n      {\n        // EC parameters\n        tagClass: forge.asn1.Class.CONTEXT_SPECIFIC,\n        name: \"ECPrivateKey.parameters\",\n        constructed: true,\n        value: [\n          {\n            // namedCurve (crv)\n            name: \"ECPrivateKey.namedCurve\",\n            tagClass: forge.asn1.Class.UNIVERSAL,\n            type: forge.asn1.Type.OID,\n            constructed: false,\n            capture: \"crv\"\n          }\n        ]\n      },\n      {\n        // publicKey\n        name: \"ECPrivateKey.publicKey\",\n        tagClass: forge.asn1.Class.CONTEXT_SPECIFIC,\n        constructed: true,\n        value: [\n          {\n            name: \"ECPrivateKey.point\",\n            tagClass: forge.asn1.Class.UNIVERSAL,\n            type: forge.asn1.Type.BITSTRING,\n            constructed: false,\n            capture: \"point\"\n          }\n        ]\n      }\n    ]\n  },\n  embeddedPrivateKey: {\n    // ECPrivateKey\n    name: \"ECPrivateKey\",\n    tagClass: forge.asn1.Class.UNIVERSAL,\n    type: forge.asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [\n      {\n        // EC version\n        name: \"ECPrivateKey.version\",\n        tagClass: forge.asn1.Class.UNIVERSAL,\n        type: forge.asn1.Type.INTEGER,\n        constructed: false\n      },\n      {\n        // private value (d)\n        name: \"ECPrivateKey.private\",\n        tagClass: forge.asn1.Class.UNIVERSAL,\n        type: forge.asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: \"d\"\n      },\n      {\n        // publicKey\n        name: \"ECPrivateKey.publicKey\",\n        tagClass: forge.asn1.Class.CONTEXT_SPECIFIC,\n        constructed: true,\n        value: [\n          {\n            name: \"ECPrivateKey.point\",\n            tagClass: forge.asn1.Class.UNIVERSAL,\n            type: forge.asn1.Type.BITSTRING,\n            constructed: false,\n            capture: \"point\"\n          }\n        ]\n      }\n    ]\n  }\n};\n\nvar JWKEcFactory = {\n  kty: \"EC\",\n  validators: validators,\n  prepare: function(props) {\n    // TODO: validate key properties\n    var cfg = JWKEcCfg;\n    var p = Promise.resolve(props);\n    p = p.then(function(json) {\n      return JWK.helpers.thumbprint(cfg, json);\n    });\n    p = p.then(function(hash) {\n      var prints = {};\n      prints[JWK.helpers.INTERNALS.THUMBPRINT_HASH] = hash;\n      props[JWK.helpers.INTERNALS.THUMBPRINT_KEY] = prints;\n      return cfg;\n    });\n    return p;\n  },\n  generate: function(size) {\n    var keypair = depsecc.generateKeyPair(size);\n    var result = {\n      \"crv\": size,\n      \"x\": keypair.public.x,\n      \"y\": keypair.public.y,\n      \"d\": keypair.private.d\n    };\n    return Promise.resolve(result);\n  },\n  import: function(input) {\n    if (validators.oid !== input.keyOid) {\n      return null;\n    }\n\n    // coerce key params to OID\n    var crv;\n    if (input.keyParams && forge.asn1.Type.OID === input.keyParams.type) {\n      crv = forge.asn1.derToOid(input.keyParams.value);\n      crv = oidToCurveName(crv);\n    } else if (input.crv) {\n      crv = forge.asn1.derToOid(input.crv);\n      crv = oidToCurveName(crv);\n    }\n    if (!crv) {\n      return null;\n    }\n\n    if (!input.parsed) {\n      var capture = {},\n          errors = [];\n      if (\"private\" === input.type) {\n        // coerce capture.value to DER *iff* private\n        if (\"string\" === typeof input.keyValue) {\n          input.keyValue = forge.asn1.fromDer(input.keyValue);\n        } else if (Array.isArray(input.keyValue)) {\n          input.keyValue = input.keyValue[0];\n        }\n\n        if (!forge.asn1.validate(input.keyValue,\n                                 validators.embeddedPrivateKey,\n                                 capture,\n                                 errors)) {\n          return null;\n        }\n      } else {\n        capture.point = input.keyValue;\n      }\n      input = capture;\n    }\n\n    // convert factors to Buffers\n    var output = {\n      kty: \"EC\",\n      crv: crv\n    };\n    if (input.d) {\n      output.d = Buffer.from(input.d, \"binary\");\n    }\n    if (input.point) {\n      var pt = Buffer.from(input.point, \"binary\");\n      // only support uncompressed\n      if (4 !== pt.readUInt16BE(0)) {\n        return null;\n      }\n      pt = pt.slice(2);\n      var len = pt.length / 2;\n      output.x = pt.slice(0, len);\n      output.y = pt.slice(len);\n    }\n    return output;\n  }\n};\n// public API\nmodule.exports = Object.freeze({\n  config: JWKEcCfg,\n  factory: JWKEcFactory\n});\n\n// registration\n(function(REGISTRY) {\n  REGISTRY.register(JWKEcFactory);\n})(require(\"./keystore\").registry);\n","/*!\n * jwk/helpers.js - JWK Internal Helper Functions and Constants\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar clone = require(\"lodash/clone\"),\n    util = require(\"../util\"),\n    forge = require(\"../deps/forge\");\n\nvar ALGORITHMS = require(\"../algorithms\");\n\n// ### ASN.1 Validators\n// Adapted from digitalbazaar/node-forge/js/asn1.js\n// PrivateKeyInfo\nvar privateKeyValidator = {\n  name: \"PrivateKeyInfo\",\n  tagClass: forge.asn1.Class.UNIVERSAL,\n  type: forge.asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [\n    {\n      // Version (INTEGER)\n      name: \"PrivateKeyInfo.version\",\n      tagClass: forge.asn1.Class.UNIVERSAL,\n      type: forge.asn1.Type.INTEGER,\n      constructed: false,\n      capture: \"keyVersion\"\n    },\n    {\n      name: \"PrivateKeyInfo.privateKeyAlgorithm\",\n      tagClass: forge.asn1.Class.UNIVERSAL,\n      type: forge.asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [\n        {\n          name: \"AlgorithmIdentifier.algorithm\",\n          tagClass: forge.asn1.Class.UNIVERSAL,\n          type: forge.asn1.Type.OID,\n          constructed: false,\n          capture: \"keyOid\"\n        },\n        {\n          name: \"AlgorithmIdentifier.parameters\",\n          captureAsn1: \"keyParams\"\n        }\n      ]\n    },\n    {\n      name: \"PrivateKeyInfo\",\n      tagClass: forge.asn1.Class.UNIVERSAL,\n      type: forge.asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: \"keyValue\"\n    }\n  ]\n};\n// Adapted from digitalbazaar/node-forge/x509.js\nvar publicKeyValidator = {\n  name: \"SubjectPublicKeyInfo\",\n  tagClass: forge.asn1.Class.UNIVERSAL,\n  type: forge.asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [\n    {\n      name: \"SubjectPublicKeyInfo.AlgorithmIdentifier\",\n      tagClass: forge.asn1.Class.UNIVERSAL,\n      type: forge.asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [\n        {\n          name: \"AlgorithmIdentifier.algorithm\",\n          tagClass: forge.asn1.Class.UNIVERSAL,\n          type: forge.asn1.Type.OID,\n          constructed: false,\n          capture: \"keyOid\"\n        },\n        {\n          name: \"AlgorithmIdentifier.parameters\",\n          captureAsn1: \"keyParams\"\n        }\n      ]\n    },\n    {\n      name: \"SubjectPublicKeyInfo.subjectPublicKey\",\n      tagClass: forge.asn1.Class.UNIVERSAL,\n      type: forge.asn1.Type.BITSTRING,\n      constructed: false,\n      capture: \"keyValue\"\n    }\n  ]\n};\n// Adapted from digitalbazaar/node-forge/x509.js\nvar X509CertificateValidator = {\n  name: \"Certificate\",\n  tagClass: forge.asn1.Class.UNIVERSAL,\n  type: forge.asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [\n    {\n      name: \"Certificate.TBSCertificate\",\n      tagClass: forge.asn1.Class.UNIVERSAL,\n      type: forge.asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: \"certificate\",\n      value: [\n        {\n          name: \"Certificate.TBSCertificate.version\",\n          tagClass: forge.asn1.Class.CONTEXT_SPECIFIC,\n          type: 0,\n          constructed: true,\n          optional: true,\n          value: [\n            {\n              name: \"Certificate.TBSCertificate.version.integer\",\n              tagClass: forge.asn1.Class.UNIVERSAL,\n              type: forge.asn1.Type.INTEGER,\n              constructed: false,\n              capture: \"certVersion\"\n            }\n          ]\n        },\n        {\n          name: \"Certificate.TBSCertificate.serialNumber\",\n          tagClass: forge.asn1.Class.UNIVERSAL,\n          type: forge.asn1.Type.INTEGER,\n          constructed: false,\n          capture: \"certSerialNumber\"\n        },\n        {\n          name: \"Certificate.TBSCertificate.signature\",\n          tagClass: forge.asn1.Class.UNIVERSAL,\n          type: forge.asn1.Type.SEQUENCE,\n          constructed: true,\n          value: [\n            {\n              name: \"Certificate.TBSCertificate.signature.algorithm\",\n              tagClass: forge.asn1.Class.UNIVERSAL,\n              type: forge.asn1.Type.OID,\n              constructed: false,\n              capture: \"certSignatureOid\"\n            }, {\n              name: \"Certificate.TBSCertificate.signature.parameters\",\n              tagClass: forge.asn1.Class.UNIVERSAL,\n              optional: true,\n              captureAsn1: \"certSignatureParams\"\n            }\n          ]\n        },\n        {\n          name: \"Certificate.TBSCertificate.issuer\",\n          tagClass: forge.asn1.Class.UNIVERSAL,\n          type: forge.asn1.Type.SEQUENCE,\n          constructed: true,\n          captureAsn1: \"certIssuer\"\n        },\n        {\n          name: \"Certificate.TBSCertificate.validity\",\n          tagClass: forge.asn1.Class.UNIVERSAL,\n          type: forge.asn1.Type.SEQUENCE,\n          constructed: true,\n          // Note: UTC and generalized times may both appear so the capture\n          // names are based on their detected order, the names used below\n          // are only for the common case, which validity time really means\n          // \"notBefore\" and which means \"notAfter\" will be determined by order\n          value: [\n            {\n              // notBefore (Time) (UTC time case)\n              name: \"Certificate.TBSCertificate.validity.notBefore (utc)\",\n              tagClass: forge.asn1.Class.UNIVERSAL,\n              type: forge.asn1.Type.UTCTIME,\n              constructed: false,\n              optional: true,\n              capture: \"certValidity1UTCTime\"\n            },\n            {\n              // notBefore (Time) (generalized time case)\n              name: \"Certificate.TBSCertificate.validity.notBefore (generalized)\",\n              tagClass: forge.asn1.Class.UNIVERSAL,\n              type: forge.asn1.Type.GENERALIZEDTIME,\n              constructed: false,\n              optional: true,\n              capture: \"certValidity2GeneralizedTime\"\n            },\n            {\n              // notAfter (Time) (only UTC time is supported)\n              name: \"Certificate.TBSCertificate.validity.notAfter (utc)\",\n              tagClass: forge.asn1.Class.UNIVERSAL,\n              type: forge.asn1.Type.UTCTIME,\n              constructed: false,\n              optional: true,\n              capture: \"certValidity3UTCTime\"\n            },\n            {\n              // notAfter (Time) (only UTC time is supported)\n              name: \"Certificate.TBSCertificate.validity.notAfter (generalized)\",\n              tagClass: forge.asn1.Class.UNIVERSAL,\n              type: forge.asn1.Type.GENERALIZEDTIME,\n              constructed: false,\n              optional: true,\n              capture: \"certValidity4GeneralizedTime\"\n            }\n          ]\n        }, {\n          // Name (subject) (RDNSequence)\n          name: \"Certificate.TBSCertificate.subject\",\n          tagClass: forge.asn1.Class.UNIVERSAL,\n          type: forge.asn1.Type.SEQUENCE,\n          constructed: true,\n          captureAsn1: \"certSubject\"\n        },\n        // SubjectPublicKeyInfo\n        publicKeyValidator,\n        {\n          // issuerUniqueID (optional)\n          name: \"Certificate.TBSCertificate.issuerUniqueID\",\n          tagClass: forge.asn1.Class.CONTEXT_SPECIFIC,\n          type: 1,\n          constructed: true,\n          optional: true,\n          value: [\n            {\n              name: \"Certificate.TBSCertificate.issuerUniqueID.id\",\n              tagClass: forge.asn1.Class.UNIVERSAL,\n              type: forge.asn1.Type.BITSTRING,\n              constructed: false,\n              capture: \"certIssuerUniqueId\"\n            }\n          ]\n        },\n        {\n          // subjectUniqueID (optional)\n          name: \"Certificate.TBSCertificate.subjectUniqueID\",\n          tagClass: forge.asn1.Class.CONTEXT_SPECIFIC,\n          type: 2,\n          constructed: true,\n          optional: true,\n          value: [\n            {\n              name: \"Certificate.TBSCertificate.subjectUniqueID.id\",\n              tagClass: forge.asn1.Class.UNIVERSAL,\n              type: forge.asn1.Type.BITSTRING,\n              constructed: false,\n              capture: \"certSubjectUniqueId\"\n            }\n          ]\n        },\n        {\n          // Extensions (optional)\n          name: \"Certificate.TBSCertificate.extensions\",\n          tagClass: forge.asn1.Class.CONTEXT_SPECIFIC,\n          type: 3,\n          constructed: true,\n          captureAsn1: \"certExtensions\",\n          optional: true\n        }\n      ]\n    },\n    {\n      // AlgorithmIdentifier (signature algorithm)\n      name: \"Certificate.signatureAlgorithm\",\n      tagClass: forge.asn1.Class.UNIVERSAL,\n      type: forge.asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [\n        {\n          // algorithm\n          name: \"Certificate.signatureAlgorithm.algorithm\",\n          tagClass: forge.asn1.Class.UNIVERSAL,\n          type: forge.asn1.Type.OID,\n          constructed: false,\n          capture: \"certSignatureOid\"\n        },\n        {\n          name: \"Certificate.TBSCertificate.signature.parameters\",\n          tagClass: forge.asn1.Class.UNIVERSAL,\n          optional: true,\n          captureAsn1: \"certSignatureParams\"\n        }\n      ]\n    },\n    {\n      // SignatureValue\n      name: \"Certificate.signatureValue\",\n      tagClass: forge.asn1.Class.UNIVERSAL,\n      type: forge.asn1.Type.BITSTRING,\n      constructed: false,\n      capture: \"certSignature\"\n    }\n  ]\n};\n\nvar INTERNALS = {\n  THUMBPRINT_KEY: \"internal\\u0000thumbprint\",\n  THUMBPRINT_HASH: \"SHA-256\"\n};\n\nmodule.exports = {\n  validators: {\n    privateKey: privateKeyValidator,\n    publicKey: publicKeyValidator,\n    certificate: X509CertificateValidator\n  },\n\n  thumbprint: function(cfg, json, hash) {\n    if (\"function\" !== typeof cfg.thumbprint) {\n      return Promise.reject(new Error(\"thumbprint not supported\"));\n    }\n\n    hash = (hash || INTERNALS.THUMBPRINT_HASH).toUpperCase();\n    var fields = cfg.thumbprint(json);\n    var input = Object.keys(fields).\n                sort().\n                map(function(k) {\n      var v = fields[k];\n      if (Buffer.isBuffer(v)) {\n        v = util.base64url.encode(v);\n      }\n      return JSON.stringify(k) + \":\" + JSON.stringify(v);\n    });\n    input = \"{\" + input.join(\",\") + \"}\";\n    try {\n      return ALGORITHMS.digest(hash, Buffer.from(input, \"utf8\"));\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  },\n  unpackProps: function(props, allowed) {\n    var output;\n\n    // apply all of the existing values\n    allowed.forEach(function(cfg) {\n      if (!(cfg.name in props)) {\n        return;\n      }\n      output = output || {};\n      var value = props[cfg.name];\n      switch (cfg.type) {\n        case \"binary\":\n          if (Buffer.isBuffer(value)) {\n            props[cfg.name] = util.base64url.encode(value);\n          } else {\n            value = util.base64url.decode(value);\n          }\n          break;\n        case \"string\":\n        case \"number\":\n        case \"boolean\":\n          break;\n        case \"array\":\n          value = [].concat(value);\n          break;\n        case \"object\":\n          value = clone(value);\n          break;\n        default:\n          // TODO: deep clone?\n          break;\n      }\n      output[cfg.name] = value;\n    });\n\n    // remove any from json that didn't apply\n    var check = output || {};\n    Object.keys(props).\n           forEach(function(n) {\n              if (n in check) { return; }\n              delete props[n];\n           });\n\n    return output;\n  },\n  COMMON_PROPS: [\n    {name: \"kty\", type: \"string\"},\n    {name: \"kid\", type: \"string\"},\n    {name: \"use\", type: \"string\"},\n    {name: \"alg\", type: \"string\"},\n    {name: \"x5c\", type: \"array\"},\n    {name: \"x5t\", type: \"binary\"},\n    {name: \"x5u\", type: \"string\"},\n    {name: \"key_ops\", type: \"array\"}\n  ],\n  INTERNALS: INTERNALS\n};\n","/*!\n * jwk/index.js - JSON Web Key (JWK) Entry Point\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar JWKStore = require(\"./keystore.js\");\n\n// Public API -- Key and KeyStore methods\nObject.keys(JWKStore.KeyStore).forEach(function(name) {\n  exports[name] = JWKStore.KeyStore[name];\n});\n\n// Public API -- constants\nvar CONSTANTS = require(\"./constants.js\");\nObject.keys(CONSTANTS).forEach(function(name) {\n  exports[name] = CONSTANTS[name];\n});\n\n// Registered Key Types\nrequire(\"./octkey.js\");\nrequire(\"./rsakey.js\");\nrequire(\"./eckey.js\");\n","/*!\n * jwk/keystore.js - JWK KeyStore Implementation\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar clone = require(\"lodash/clone\"),\n    merge = require(\"../util/merge\"),\n    forge = require(\"../deps/forge\"),\n    util = require(\"../util\");\n\nvar JWK = {\n  BaseKey: require(\"./basekey.js\"),\n  helpers: require(\"./helpers.js\")\n};\n\n/**\n * @class JWK.KeyStoreRegistry\n * @classdesc\n * A registry of JWK.Key types that can be used.\n *\n * @description\n * **NOTE:** This constructor cannot be called directly. Instead use the\n * global {JWK.registry}\n */\nvar JWKRegistry = function() {\n  var types = {};\n\n  Object.defineProperty(this, \"register\", {\n    value: function(factory) {\n      if (!factory || \"string\" !== typeof factory.kty || !factory.kty) {\n        throw new Error(\"invalid Key factory\");\n      }\n\n      var kty = factory.kty;\n      types[kty] = factory;\n      return this;\n    }\n  });\n  Object.defineProperty(this, \"unregister\", {\n    value: function(factory) {\n      if (!factory || \"string\" !== typeof factory.kty || !factory.kty) {\n        throw new Error(\"invalid Key factory\");\n      }\n\n      var kty = factory.kty;\n      if (factory === types[kty]) {\n        delete types[kty];\n      }\n      return this;\n    }\n  });\n\n  Object.defineProperty(this, \"get\", {\n    value: function(kty) {\n      return types[kty || \"\"] || undefined;\n    }\n  });\n  Object.defineProperty(this, \"all\", {\n    value: function() {\n      return Object.keys(types).map(function(t) { return types[t]; });\n    }\n  });\n};\n\n// Globals\nvar GLOBAL_REGISTRY = new JWKRegistry();\n\n// importer\nfunction processCert(input) {\n  // convert certIssuer to readable attributes\n  [\"certIssuer\", \"certSubject\"].forEach(function(field) {\n    /* eslint new-cap: [0] */\n    var attrs = forge.pki.RDNAttributesAsArray(input[field]);\n    var result = input[field] = {};\n    attrs.forEach(function(a) {\n      result[a.name || a.type] = a.value;\n    });\n  });\n\n  return input;\n}\n\nfunction fromPEM(input) {\n  var result = {};\n  var pems = forge.pem.decode(input);\n  var found = pems.some(function(p) {\n    switch (p.type) {\n      case \"CERTIFICATE\":\n        result.form = \"pkix\";\n        break;\n      case \"PUBLIC KEY\":\n        result.form = \"spki\";\n        break;\n      case \"PRIVATE KEY\":\n        result.form = \"pkcs8\";\n        break;\n      case \"EC PRIVATE KEY\":\n        /* eslint no-fallthrough: [0] */\n      case \"RSA PRIVATE KEY\":\n        result.form = \"private\";\n        break;\n      default:\n        return false;\n    }\n\n    result.body = p.body;\n    return true;\n  });\n  if (!found) {\n    throw new Error(\"supported PEM type not found\");\n  }\n  return result;\n}\nfunction importFrom(registry, input) {\n  // form can be one of:\n  //  'private' | 'pkcs8' | 'public' | 'spki' | 'pkix' | 'x509'\n  var capture = {},\n      errors = [],\n      result;\n\n  // conver from DER to ASN1\n  var form = input.form,\n      der = input.body,\n      thumbprint = null;\n  input = forge.asn1.fromDer(der);\n  switch(form) {\n    case \"private\":\n      registry.all().some(function(factory) {\n        if (result) {\n          return false;\n        }\n        if (!factory.validators) {\n          return false;\n        }\n\n        var oid = factory.validators.oid,\n            validator = factory.validators.privateKey;\n        if (!validator) {\n          return false;\n        }\n        capture = {};\n        errors = [];\n        result = forge.asn1.validate(input, validator, capture, errors);\n        if (result) {\n          capture.keyOid = forge.asn1.oidToDer(oid);\n          capture.parsed = true;\n        }\n        return result;\n      });\n      capture.type = \"private\";\n      break;\n    case \"pkcs8\":\n      result = forge.asn1.validate(input, JWK.helpers.validators.privateKey, capture, errors);\n      capture.type = \"private\";\n      break;\n    case \"public\":\n      // eslint no-fallthrough: [0] */\n    case \"spki\":\n      result = forge.asn1.validate(input, JWK.helpers.validators.publicKey, capture, errors);\n      capture.type = \"public\";\n      break;\n    case \"pkix\":\n      /* eslint no-fallthrough: [0] */\n    case \"x509\":\n      result = forge.asn1.validate(input, JWK.helpers.validators.certificate, capture, errors);\n      if (result) {\n        capture = processCert(capture);\n        var md = forge.md.sha1.create();\n        md.update(der);\n        thumbprint = util.base64url.encode(Buffer.from(md.digest().toHex(), \"hex\"));\n      }\n      capture.type = \"public\";\n      break;\n  }\n  if (!result) {\n    return null;\n  }\n\n  // convert oids\n  if (capture.keyOid) {\n    capture.keyOid = forge.asn1.derToOid(capture.keyOid);\n  }\n\n  // find and invoke the importer\n  result = null;\n  GLOBAL_REGISTRY.all().forEach(function(factory) {\n    if (result) {\n      return;\n    }\n    if (!factory) {\n      return;\n    }\n    if (\"function\" !== typeof factory.import) {\n      return;\n    }\n    result = factory.import(capture);\n  });\n  if (result && capture.certSubject && capture.certSubject.commonName) {\n    result.kid = capture.certSubject.commonName;\n  }\n  if (result && thumbprint) {\n    result.x5t = thumbprint;\n  }\n  return result;\n}\n\n/**\n * @class JWK.KeyStore\n * @classdesc\n * Represents a collection of Keys.\n *\n * @description\n * **NOTE:** This constructor cannot be called directly. Instead call {@link\n * JWK.createKeyStore}.\n */\nvar JWKStore = function(registry, parent) {\n  var keysets = {};\n\n  /**\n   * @method JWK.KeyStore#generate\n   * @description\n   * Generates a new random Key into this KeyStore.\n   *\n   * The type of {size} depends on the value of {kty}:\n   *\n   * + **`EC`**: String naming the curve to use, which can be one of:\n   *   `\"P-256\"`, `\"P-384\"`, or `\"P-521\"` (default is **`\"P-256\"`**).\n   * + **`RSA`**: Number describing the size of the key, in bits (default is\n   *   **`2048`**).\n   * + **`oct`**: Number describing the size of the key, in bits (default is\n   *   **`256`**).\n   *\n   * Any properties in {props} are applied before the key is generated,\n   * and are expected to be data types acceptable in JSON.  This allows the\n   * generated key to have a specific key identifier, or to specify its\n   * acceptable usage.\n   *\n   * The returned Promise, when fulfilled, returns the generated Key.\n   *\n   * @param {String} kty The type of generated key\n   * @param {String|Number} [size] The size of the generated key\n   * @param {Object} [props] Additional properties to apply to the generated\n   *        key.\n   * @returns {Promise} The promise for the generated Key\n   * @throws {Error} If {kty} is not supported\n   */\n  Object.defineProperty(this, \"generate\", {\n    value: function(kty, size, props) {\n      var keytype = registry.get(kty);\n      if (!keytype) {\n        return Promise.reject(new Error(\"unsupported key type\"));\n      }\n\n      props = clone(props || {});\n      props.kty = kty;\n\n      var self = this,\n          promise = keytype.generate(size);\n      return promise.then(function(jwk) {\n        jwk = merge(props, jwk, {\n          kty: kty\n        });\n        return self.add(jwk);\n      });\n    }\n  });\n  /**\n   * @method JWK.KeyStore#add\n   * @description\n   * Adds a Key to this KeyStore. If {jwk} is a string, it is first\n   * parsed into a plain JSON object. If {jwk} is already an instance\n   * of JWK.Key, its (public) JSON representation is first obtained\n   * then applied to a new JWK.Key object within this KeyStore.\n   *\n   * @param {String|Object} jwk The JSON Web Key (JWK)\n   * @param {String} [form] The format of a String key to expect\n   * @param {Object} [extras] extra jwk fields inserted when importing from a non json string (eg \"pem\")\n   * @returns {Promise} The promise for the added key\n   */\n  Object.defineProperty(this, \"add\", {\n    value: function(jwk, form, extras) {\n      extras = extras || {};\n\n      var factors;\n      if (Buffer.isBuffer(jwk) || typeof jwk === \"string\") {\n        // form can be 'json', 'pkcs8', 'spki', 'pkix', 'x509', 'pem'\n        form = (form || \"json\").toLowerCase();\n        if (\"json\" === form) {\n          jwk = JSON.parse(jwk.toString(\"utf8\"));\n        } else {\n          try {\n            if (\"pem\" === form) {\n              // convert *first* PEM -> DER\n              factors = fromPEM(jwk);\n            } else {\n              factors = {\n                body: jwk.toString(\"binary\"),\n                form: form\n              };\n            }\n            jwk = importFrom(registry, factors);\n            if (!jwk) {\n              throw new Error(\"no importer for key\");\n            }\n            Object.keys(extras).forEach(function(field){\n              jwk[field] = extras[field];\n            });\n          } catch (err) {\n            return Promise.reject(err);\n          }\n        }\n      } else if (JWKStore.isKey(jwk)) {\n        // assume a complete duplicate is desired\n        jwk = jwk.toJSON(true);\n      } else {\n        jwk = clone(jwk);\n      }\n\n      var keytype = registry.get(jwk.kty);\n      if (!keytype) {\n        return Promise.reject(new Error(\"unsupported key type\"));\n      }\n\n      var self = this,\n          promise = keytype.prepare(jwk);\n      return promise.then(function(cfg) {\n        return new JWK.BaseKey(jwk.kty, self, jwk, cfg);\n      }).then(function(jwk) {\n        var kid = jwk.kid || \"\";\n        var keys = keysets[kid] = keysets[kid] || [];\n        keys.push(jwk);\n\n        return jwk;\n      });\n    }\n  });\n  /**\n   * @method JWK.KeyStore#remove\n   * @description\n   * Removes a Key from this KeyStore.\n   *\n   * **NOTE:** The removed Key's {keystore} property is not changed.\n   *\n   * @param {JWK.Key} jwk The key to remove.\n   */\n  Object.defineProperty(this, \"remove\", {\n    value: function(jwk) {\n      if (!jwk) {\n        return;\n      }\n\n      var keys = keysets[jwk.kid];\n      if (!keys) {\n        return;\n      }\n\n      var pos = keys.indexOf(jwk);\n      if (pos === -1) {\n        return;\n      }\n\n      keys.splice(pos, 1);\n      if (!keys.length) {\n        delete keysets[jwk.kid];\n      }\n    }\n  });\n\n  /**\n   * @method JWK.KeyStore#all\n   * @description\n   * Retrieves all of the contained Keys that optinally match all of the\n   * given properties.\n   *\n   * If {props} are specified, this method only returns Keys which exactly\n   * match the given properties. The properties can be any of the\n   * following:\n   *\n   * + **alg**: The algorithm for the Key.\n   * + **use**: The usage for the Key.\n   * + **kid**: The identifier for the Key.\n   *\n   * If no properties are given, this method returns all of the Keys for this\n   * KeyStore.\n   *\n   * @param {Object} [props] The properties to match against\n   * @param {Boolean} [local = false] `true` if only the Keys\n   *        directly contained by this KeyStore should be returned, or\n   *        `false` if it should return all Keys of this KeyStore and\n   *        its ancestors.\n   * @returns {JWK.Key[]} The list of matching Keys, or an empty array if no\n   *          matches are found.\n   */\n  Object.defineProperty(this, \"all\", {\n    value: function(props, local) {\n      props = props || {};\n\n      // workaround for issues/109\n      if (props.kid !== undefined && props.kid !== null && typeof props.kid !== \"string\") {\n        props.kid = String(props.kid);\n      }\n\n      var candidates = [];\n      var matches = function(key) {\n        // match on 'kty'\n        if (props.kty &&\n            key.kty &&\n            props.kty !== key.kty) {\n          return false;\n        }\n        // match on 'use'\n        if (props.use &&\n            key.use &&\n            props.use !== key.use) {\n          return false;\n        }\n        // match on 'alg'\n        if (props.alg) {\n          if (props.alg !== \"dir\" &&\n              key.alg &&\n              props.alg !== key.alg) {\n            return false;\n          }\n          return key.supports(props.alg);\n        }\n        //TODO: match on 'key_ops'\n\n        return true;\n      };\n      Object.keys(keysets).forEach(function(id) {\n        if (props.kid && props.kid !== id) {\n          return;\n        }\n\n        var keys = keysets[id].filter(matches);\n        if (keys.length) {\n          candidates = candidates.concat(keys);\n        }\n      });\n\n      if (!local && parent) {\n        candidates = candidates.concat(parent.all(props));\n      }\n\n      return candidates;\n    }\n  });\n  /**\n   * @method JWK.KeyStore#get\n   * @description\n   * Retrieves the contained Key matching the given {kid}, and optionally\n   * all of the given properties.  This method equivalent to calling\n   * {@link JWK.Store#all}, then returning the first Key whose\n   * \"kid\" is {kid}. If {kid} is undefined, then the first Key that\n   * is returned from `all()` is returned.\n   *\n   * @param {String} [kid] The key identifier to match against.\n   * @param {Object} [props] The properties to match against.\n   * @param {Boolean} [local = false] `true` if only the Keys\n   *        directly contained by this KeyStore should be returned, or\n   *        `false` if it should return all Keys of this KeyStore and\n   *        its ancestors.\n   * @returns {JWK.Key} The Key matching {kid} and {props}, or `null`\n   *          if no match is found.\n   */\n  Object.defineProperty(this, \"get\", {\n    value: function(kid, props, local) {\n      // reconcile arguments\n      if (typeof kid === \"boolean\") {\n        local = kid;\n        props = kid = null;\n      } else if (typeof kid === \"object\") {\n        local = props;\n        props = kid;\n        kid = null;\n      }\n\n      // fixup props\n      props = props || {};\n      if (kid) {\n        props.kid = kid;\n      }\n\n      // workaround for issues/109\n      if (props.kid !== undefined && props.kid !== null && typeof props.kid !== \"string\") {\n       props.kid = String(props.kid);\n      }\n\n      var candidates = this.all(props, true);\n      if (!candidates.length && parent && !local) {\n        candidates = parent.get(props, local);\n      }\n      return candidates[0] || null;\n    }\n  });\n\n  /**\n   * @method JWK.KeyStore#temp\n   * @description\n   * Creates a temporary KeyStore based on this KeyStore.\n   *\n   * @returns {JWK.KeyStore} The temporary KeyStore.\n   */\n  Object.defineProperty(this, \"temp\", {\n    value: function() {\n      return new JWKStore(registry, this);\n    }\n  });\n\n  /**\n   * @method JWK.KeyStore#toJSON\n   * @description\n   * Generates a JSON representation of this KeyStore, which conforms\n   * to a JWK Set from {I-D.ietf-jose-json-web-key}.\n   *\n   * @param {Boolean} [isPrivate = false] `true` if the private fields\n   *        of stored keys are to be included.\n   * @returns {Object} The JSON representation of this KeyStore.\n   */\n  Object.defineProperty(this, \"toJSON\", {\n    value: function(isPrivate) {\n      var keys = [];\n\n      Object.keys(keysets).forEach(function(kid) {\n        var items = keysets[kid].map(function(k) {\n          return k.toJSON(isPrivate);\n        });\n        keys = keys.concat(items);\n      });\n\n      return {\n        keys: keys\n      };\n    }\n  });\n};\n\n/**\n * Determines if the given object is an instance of JWK.KeyStore.\n *\n * @param {Object} obj The object to test\n * @returns {Boolean} `true` if {obj} is an instance of JWK.KeyStore,\n *          and `false` otherwise.\n */\nJWKStore.isKeyStore = function(obj) {\n  if (!obj) {\n    return false;\n  }\n\n  if (\"object\" !== typeof obj) {\n    return false;\n  }\n\n  if (\"function\" !== typeof obj.get ||\n      \"function\" !== typeof obj.all ||\n      \"function\" !== typeof obj.generate ||\n      \"function\" !== typeof obj.add ||\n      \"function\" !== typeof obj.remove) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Creates a new empty KeyStore.\n *\n * @returns {JWK.KeyStore} The empty KeyStore.\n */\nJWKStore.createKeyStore = function() {\n  return new JWKStore(GLOBAL_REGISTRY);\n};\n\n/**\n * Coerces the given object into a KeyStore. This method uses the following\n * algorithm to coerce {ks}:\n *\n * 1. if {ks} is an instance of JWK.KeyStore, it is returned directly\n * 2. if {ks} is a string, it is parsed into a JSON value\n * 3. if {ks} is an array, it creates a new JWK.KeyStore and calls {@link\n *    JWK.KeyStore#add} for each element in the {ks} array.\n * 4. if {ks} is a JSON object, it creates a new JWK.KeyStore and calls {@link\n *    JWK.KeyStore#add} for each element in the \"keys\" property.\n *\n * @param {Object|String} ks The value to coerce into a\n *        KeyStore\n * @returns {Promise(JWK.KeyStore)} A promise for the coerced KeyStore.\n */\nJWKStore.asKeyStore = function(ks) {\n  if (JWKStore.isKeyStore(ks)) {\n    return Promise.resolve(ks);\n  }\n\n  var store = JWKStore.createKeyStore(),\n      keys;\n\n  if (typeof ks === \"string\") {\n    ks = JSON.parse(ks);\n  }\n\n  if (Array.isArray(ks)) {\n    keys = ks;\n  } else if (\"keys\" in ks) {\n    keys = ks.keys;\n  } else {\n    return Promise.reject(new Error(\"invalid keystore\"));\n  }\n\n  keys = keys.map(function(k) {\n    return store.add(k);\n  });\n\n  var promise = Promise.all(keys);\n  promise = promise.then(function() {\n    return store;\n  });\n\n  return promise;\n};\n\n\n/**\n * Determines if the given object is a JWK.Key instance.\n *\n * @param {Object} obj The object to test\n * @returns `true` if {obj} is a JWK.Key\n */\nJWKStore.isKey = function(obj) {\n  if (!obj) {\n    return false;\n  }\n\n  if (\"object\" !== typeof obj) {\n    return false;\n  }\n\n  if (!JWKStore.isKeyStore(obj.keystore)) {\n    return false;\n  }\n\n  if (\"string\" !== typeof obj.kty ||\n      \"number\" !== typeof obj.length ||\n      \"function\" !== typeof obj.algorithms ||\n      \"function\" !== typeof obj.supports ||\n      \"function\" !== typeof obj.encrypt ||\n      \"function\" !== typeof obj.decrypt ||\n      \"function\" !== typeof obj.wrap ||\n      \"function\" !== typeof obj.unwrap ||\n      \"function\" !== typeof obj.sign ||\n      \"function\" !== typeof obj.verify) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Creates a new key with the given properties.  This method is a convenience\n * to calling `JWK.createKeyStore()` then `generate()` on the returned keystore.\n *\n * @param {String} kty The type of generated key\n * @param {String|Number} [size] The size of the generated key\n * @param {Object} [props] Additional properties to apply to the generated\n *        key.\n * @returns {Promise} The promise for the generated Key\n * @throws {Error} If {kty} is not supported\n * @see JWKStore#generate\n */\nJWKStore.createKey = function(kty, size, props) {\n  var ks = JWKStore.createKeyStore();\n  return ks.generate(kty, size, props);\n}\n\n/**\n * Coerces the given object into a Key. If {key} is an instance of JWK.Key,\n * it is returned directly. Otherwise, this method first creates a new\n * JWK.KeyStore and calls {@link JWK.KeyStore#add} on this new KeyStore.\n *\n * @param {Object|String} key The value to coerce into a Key\n * @param {String} [form] The format of a String Key to expect\n * @param {Object} [extras] extra jwk fields inserted when importing from a non json string (eg \"pem\")\n * @returns {Promise(JWK.Key)} A promise for the coerced Key.\n */\nJWKStore.asKey = function(key, form, extras) {\n  if (JWKStore.isKey(key)) {\n    return Promise.resolve(key);\n  }\n\n  var ks = JWKStore.createKeyStore();\n  key = ks.add(key, form, extras);\n\n  return key;\n};\n\nmodule.exports = {\n  KeyRegistry: JWKRegistry,\n  KeyStore: JWKStore,\n  registry: GLOBAL_REGISTRY\n};\n","/*!\n * jwk/octkey.js - Symmetric Octet Key Representation\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar util = require(\"../util\");\n\nvar JWK = {\n  BaseKey: require(\"./basekey.js\"),\n  helpers: require(\"./helpers.js\")\n};\n\nvar SIG_ALGS = [\n  \"HS256\",\n  \"HS384\",\n  \"HS512\"\n];\nvar ENC_ALGS = [\n  \"A128GCM\",\n  \"A192GCM\",\n  \"A256GCM\",\n  \"A128CBC-HS256\",\n  \"A192CBC-HS384\",\n  \"A256CBC-HS512\",\n  \"A128CBC+HS256\",\n  \"A192CBC+HS384\",\n  \"A256CBC+HS512\"\n];\nvar WRAP_ALGS = [\n  \"A128KW\",\n  \"A192KW\",\n  \"A256KW\",\n  \"A128GCMKW\",\n  \"A192GCMKW\",\n  \"A256GCMKW\",\n  \"PBES2-HS256+A128KW\",\n  \"PBES2-HS384+A192KW\",\n  \"PBES2-HS512+A256KW\",\n  \"dir\"\n];\n\nfunction adjustDecryptProps(alg, props) {\n  if (\"iv\" in props) {\n    props.iv = Buffer.isBuffer(props.iv) ?\n               props.iv :\n               util.base64url.decode(props.iv || \"\");\n  }\n  if (\"adata\" in props) {\n    props.adata = Buffer.isBuffer(props.adata) ?\n                  props.adata :\n                  Buffer.from(props.adata || \"\", \"utf8\");\n  }\n  if (\"mac\" in props) {\n    props.mac = Buffer.isBuffer(props.mac) ?\n                props.mac :\n                util.base64url.decode(props.mac || \"\");\n  }\n  if (\"tag\" in props) {\n    props.tag = Buffer.isBuffer(props.tag) ?\n                props.tag :\n                util.base64url.decode(props.tag || \"\");\n  }\n\n  return props;\n}\nfunction adjustEncryptProps(alg, props) {\n  if (\"iv\" in props) {\n    props.iv = Buffer.isBuffer(props.iv) ?\n               props.iv :\n               util.base64url.decode(props.iv || \"\");\n  }\n  if (\"adata\" in props) {\n    props.adata = Buffer.isBuffer(props.adata) ?\n                  props.adata :\n                  Buffer.from(props.adata || \"\", \"utf8\");\n  }\n\n  return props;\n}\n\nvar JWKOctetCfg = {\n  publicKey: function(props) {\n    var fields = JWK.helpers.COMMON_PROPS.concat([\n    ]);\n\n    var pk;\n    pk = JWK.helpers.unpackProps(props, fields);\n\n    return pk;\n  },\n  privateKey: function(props) {\n    var fields = JWK.helpers.COMMON_PROPS.concat([\n      {name: \"k\", type: \"binary\"}\n    ]);\n\n    var pk;\n    pk = JWK.helpers.unpackProps(props, fields);\n    if (pk && pk.k) {\n      pk.length = pk.k.length * 8;\n    } else {\n      pk = undefined;\n    }\n\n    return pk;\n  },\n\n  thumbprint: function(json) {\n    if (json.private) {\n      json = json.private;\n    }\n    var fields;\n    fields = {\n      k: json.k || \"\",\n      kty: \"oct\"\n    };\n    return fields;\n  },\n  algorithms: function(keys, mode) {\n    var len = keys.private && (keys.private.k.length * 8);\n    var mins = [256, 384, 512];\n\n    if (!len) {\n      return [];\n    }\n    switch (mode) {\n      case \"encrypt\":\n      case \"decrypt\":\n        return ENC_ALGS.filter(function(a) {\n          return (a === (\"A\" + (len / 2) + \"CBC-HS\" + len)) ||\n                 (a === (\"A\" + (len / 2) + \"CBC+HS\" + len)) ||\n                 (a === (\"A\" + len + \"GCM\"));\n        });\n      case \"sign\":\n      case \"verify\":\n        // TODO: allow for HS{less-than-keysize}\n        return SIG_ALGS.filter(function(a) {\n          var result = false;\n          mins.forEach(function(m) {\n            if (m > len) { return; }\n            result = result | (a === (\"HS\" + m));\n          });\n          return result;\n        });\n      case \"wrap\":\n      case \"unwrap\":\n        return WRAP_ALGS.filter(function(a) {\n          return (a === (\"A\" + len + \"KW\")) ||\n                 (a === (\"A\" + len + \"GCMKW\")) ||\n                 (a.indexOf(\"PBES2-\") === 0) ||\n                 (a === \"dir\");\n        });\n    }\n\n    return [];\n  },\n  encryptKey: function(alg, keys) {\n    return keys.private && keys.private.k;\n  },\n  encryptProps: adjustEncryptProps,\n\n  decryptKey: function(alg, keys) {\n    return keys.private && keys.private.k;\n  },\n  decryptProps: adjustDecryptProps,\n\n  wrapKey: function(alg, keys) {\n    return keys.private && keys.private.k;\n  },\n  wrapProps: adjustEncryptProps,\n\n  unwrapKey: function(alg, keys) {\n    return keys.private && keys.private.k;\n  },\n  unwrapProps: adjustDecryptProps,\n\n  signKey: function(alg, keys) {\n    return keys.private && keys.private.k;\n  },\n  verifyKey: function(alg, keys) {\n    return keys.private && keys.private.k;\n  }\n};\n\n// Factory\nvar JWKOctetFactory = {\n  kty: \"oct\",\n  prepare: function(props) {\n    // TODO: validate key properties\n    var cfg = JWKOctetCfg;\n    var p = Promise.resolve(props);\n    p = p.then(function(json) {\n      return JWK.helpers.thumbprint(cfg, json);\n    });\n    p = p.then(function(hash) {\n      var prints = {};\n      prints[JWK.helpers.INTERNALS.THUMBPRINT_HASH] = hash;\n      props[JWK.helpers.INTERNALS.THUMBPRINT_KEY] = prints;\n      return cfg;\n    });\n    return p;\n  },\n  generate: function(size) {\n    // TODO: validate key sizes\n    var key = util.randomBytes(size / 8);\n\n    return Promise.resolve({\n      k: key\n    });\n  }\n};\n\n// public API\nmodule.exports = Object.freeze({\n  config: JWKOctetCfg,\n  factory: JWKOctetFactory\n});\n\n// registration\n(function(REGISTRY) {\n  REGISTRY.register(JWKOctetFactory);\n})(require(\"./keystore\").registry);\n","/*!\n * jwk/rsa.js - RSA Key Representation\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../deps/forge.js\"),\n    rsau = require(\"../algorithms/rsa-util\"),\n    nodeCrypto = require(\"../algorithms/helpers\").nodeCrypto;\n\nvar JWK = {\n  BaseKey: require(\"./basekey.js\"),\n  helpers: require(\"./helpers.js\")\n};\n\nvar SIG_ALGS = [\n  \"RS256\",\n  \"RS384\",\n  \"RS512\",\n  \"PS256\",\n  \"PS384\",\n  \"PS512\"\n];\nvar WRAP_ALGS = [\n  \"RSA-OAEP\",\n  \"RSA-OAEP-256\",\n  \"RSA1_5\"\n];\n\nvar JWKRsaCfg = {\n  publicKey: function(props) {\n    var fields = JWK.helpers.COMMON_PROPS.concat([\n      {name: \"n\", type: \"binary\"},\n      {name: \"e\", type: \"binary\"}\n    ]);\n    var pk;\n    pk = JWK.helpers.unpackProps(props, fields);\n    if (pk && pk.n && pk.e) {\n      pk.length = pk.n.length * 8;\n    } else {\n      delete pk.e;\n      delete pk.n;\n    }\n\n    return pk;\n  },\n  privateKey: function(props) {\n    var fields = JWK.helpers.COMMON_PROPS.concat([\n      {name: \"n\", type: \"binary\"},\n      {name: \"e\", type: \"binary\"},\n      {name: \"d\", type: \"binary\"},\n      {name: \"p\", type: \"binary\"},\n      {name: \"q\", type: \"binary\"},\n      {name: \"dp\", type: \"binary\"},\n      {name: \"dq\", type: \"binary\"},\n      {name: \"qi\", type: \"binary\"}\n    ]);\n\n    var pk;\n    pk = JWK.helpers.unpackProps(props, fields);\n    if (pk && pk.d && pk.n && pk.e && pk.p && pk.q && pk.dp && pk.dq && pk.qi) {\n      pk.length = pk.d.length * 8;\n    } else {\n      pk = undefined;\n    }\n\n    return pk;\n  },\n  thumbprint: function(json) {\n    if (json.public) {\n      json = json.public;\n    }\n    var fields = {\n      e: json.e,\n      kty: \"RSA\",\n      n: json.n\n    };\n    return fields;\n  },\n  algorithms: function(keys, mode) {\n    switch (mode) {\n    case \"encrypt\":\n    case \"decrypt\":\n      return [];\n    case \"wrap\":\n      return (keys.public && WRAP_ALGS.slice()) || [];\n    case \"unwrap\":\n      return (keys.private && WRAP_ALGS.slice()) || [];\n    case \"sign\":\n      return (keys.private && SIG_ALGS.slice()) || [];\n    case \"verify\":\n      return (keys.public && SIG_ALGS.slice()) || [];\n    }\n\n    return [];\n  },\n\n  wrapKey: function(alg, keys) {\n    return keys.public;\n  },\n  unwrapKey: function(alg, keys) {\n    return keys.private;\n  },\n\n  signKey: function(alg, keys) {\n    return keys.private;\n  },\n  verifyKey: function(alg, keys) {\n    return keys.public;\n  },\n\n  convertToPEM: function(key, isPrivate) {\n    var k = rsau.convertToForge(key, !isPrivate);\n    if (!isPrivate) {\n      return forge.pki.publicKeyToPem(k);\n    }\n    return forge.pki.privateKeyToPem(k);\n  }\n};\n\nfunction convertBNtoBuffer(bn) {\n  bn = bn.toString(16);\n  if (bn.length % 2) {\n    bn = \"0\" + bn;\n  }\n  return Buffer.from(bn, \"hex\");\n}\n\n// Adapted from digitalbaazar/node-forge/js/rsa.js\nvar validators = {\n  oid: \"1.2.840.113549.1.1.1\",\n  privateKey: {\n    name: \"RSAPrivateKey\",\n    tagClass: forge.asn1.Class.UNIVERSAL,\n    type: forge.asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [\n      {\n        // Version (INTEGER)\n        name: \"RSAPrivateKey.version\",\n        tagClass: forge.asn1.Class.UNIVERSAL,\n        type: forge.asn1.Type.INTEGER,\n        constructed: false,\n        capture: \"version\"\n      },\n      {\n        // modulus (n)\n        name: \"RSAPrivateKey.modulus\",\n        tagClass: forge.asn1.Class.UNIVERSAL,\n        type: forge.asn1.Type.INTEGER,\n        constructed: false,\n        capture: \"n\"\n      },\n      {\n        // publicExponent (e)\n        name: \"RSAPrivateKey.publicExponent\",\n        tagClass: forge.asn1.Class.UNIVERSAL,\n        type: forge.asn1.Type.INTEGER,\n        constructed: false,\n        capture: \"e\"\n      },\n      {\n        // privateExponent (d)\n        name: \"RSAPrivateKey.privateExponent\",\n        tagClass: forge.asn1.Class.UNIVERSAL,\n        type: forge.asn1.Type.INTEGER,\n        constructed: false,\n        capture: \"d\"\n      },\n      {\n        // prime1 (p)\n        name: \"RSAPrivateKey.prime1\",\n        tagClass: forge.asn1.Class.UNIVERSAL,\n        type: forge.asn1.Type.INTEGER,\n        constructed: false,\n        capture: \"p\"\n      },\n      {\n        // prime2 (q)\n        name: \"RSAPrivateKey.prime2\",\n        tagClass: forge.asn1.Class.UNIVERSAL,\n        type: forge.asn1.Type.INTEGER,\n        constructed: false,\n        capture: \"q\"\n      },\n      {\n        // exponent1 (d mod (p-1))\n        name: \"RSAPrivateKey.exponent1\",\n        tagClass: forge.asn1.Class.UNIVERSAL,\n        type: forge.asn1.Type.INTEGER,\n        constructed: false,\n        capture: \"dp\"\n      },\n      {\n        // exponent2 (d mod (q-1))\n        name: \"RSAPrivateKey.exponent2\",\n        tagClass: forge.asn1.Class.UNIVERSAL,\n        type: forge.asn1.Type.INTEGER,\n        constructed: false,\n        capture: \"dq\"\n      },\n      {\n        // coefficient ((inverse of q) mod p)\n        name: \"RSAPrivateKey.coefficient\",\n        tagClass: forge.asn1.Class.UNIVERSAL,\n        type: forge.asn1.Type.INTEGER,\n        constructed: false,\n        capture: \"qi\"\n      }\n    ]\n  },\n  publicKey: {\n    // RSAPublicKey\n    name: \"RSAPublicKey\",\n    tagClass: forge.asn1.Class.UNIVERSAL,\n    type: forge.asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [\n      {\n        // modulus (n)\n        name: \"RSAPublicKey.modulus\",\n        tagClass: forge.asn1.Class.UNIVERSAL,\n        type: forge.asn1.Type.INTEGER,\n        constructed: false,\n        capture: \"n\"\n      },\n      {\n        // publicExponent (e)\n        name: \"RSAPublicKey.exponent\",\n        tagClass: forge.asn1.Class.UNIVERSAL,\n        type: forge.asn1.Type.INTEGER,\n        constructed: false,\n        capture: \"e\"\n      }\n    ]\n  }\n};\n\n// Factory\nvar JWKRsaFactory = {\n  kty: \"RSA\",\n  validators: validators,\n  prepare: function(props) {\n    // TODO: validate key properties\n    var cfg = JWKRsaCfg;\n    var p = Promise.resolve(props);\n    p = p.then(function(json) {\n      return JWK.helpers.thumbprint(cfg, json);\n    });\n    p = p.then(function(hash) {\n      var prints = {};\n      prints[JWK.helpers.INTERNALS.THUMBPRINT_HASH] = hash;\n      props[JWK.helpers.INTERNALS.THUMBPRINT_KEY] = prints;\n      return cfg;\n    });\n    return p;\n  },\n  generate: function(size) {\n    // TODO: validate key sizes\n    var promise;\n\n    if (nodeCrypto) {\n      promise = new Promise(function (resolve, reject) {\n        forge.pki.rsa.generateKeyPair({\n          bits: size,\n          e: 0x010001\n        }, function (err, key) {\n          if (err) return reject(err);\n          resolve(key.privateKey);\n        });\n      });\n    } else {\n      var key = forge.pki.rsa.generateKeyPair({\n        bits: size,\n        e: 0x010001\n      });\n      promise = Promise.resolve(key.privateKey);\n    }\n\n    return promise.then(function (key) {\n\n      // convert to JSON-ish\n      var result = {};\n      [\n        \"e\",\n        \"n\",\n        \"d\",\n        \"p\",\n        \"q\",\n        {incoming: \"dP\", outgoing: \"dp\"},\n        {incoming: \"dQ\", outgoing: \"dq\"},\n        {incoming: \"qInv\", outgoing: \"qi\"}\n      ].forEach(function(f) {\n        var incoming,\n            outgoing;\n\n        if (\"string\" === typeof f) {\n          incoming = outgoing = f;\n        } else {\n          incoming = f.incoming;\n          outgoing = f.outgoing;\n        }\n\n        if (incoming in key) {\n          result[outgoing] = convertBNtoBuffer(key[incoming]);\n        }\n      });\n\n      return result;\n    });\n  },\n  import: function(input) {\n    if (validators.oid !== input.keyOid) {\n      return null;\n    }\n\n    if (!input.parsed) {\n      // coerce capture.keyValue to DER\n      if (\"string\" === typeof input.keyValue) {\n        input.keyValue = forge.asn1.fromDer(input.keyValue);\n      } else if (Array.isArray(input.keyValue)) {\n        input.keyValue = input.keyValue[0];\n      }\n      // capture key factors\n      var validator = (\"private\" === input.type) ?\n                      validators.privateKey :\n                      validators.publicKey;\n      var capture = {},\n          errors = [];\n      if (!forge.asn1.validate(input.keyValue, validator, capture, errors)) {\n        return null;\n      }\n      input = capture;\n    }\n\n    // convert factors to Buffers\n    var output = {\n      kty: \"RSA\"\n    };\n    [\"n\", \"e\", \"d\", \"p\", \"q\", \"dp\", \"dq\", \"qi\"].forEach(function(f) {\n      if (!(f in input)) {\n        return;\n      }\n      var b = Buffer.from(input[f], \"binary\");\n      // remove leading zero padding if any\n      if (0 === b[0]) {\n        b = b.slice(1);\n      }\n      output[f] = b;\n    });\n    return output;\n  }\n};\n\n// public API\nmodule.exports = Object.freeze({\n  config: JWKRsaCfg,\n  factory: JWKRsaFactory\n});\n\n// registration\n(function(REGISTRY) {\n  REGISTRY.register(JWKRsaFactory);\n})(require(\"./keystore\").registry);\n","/*!\n * jws/defaults.js - Defaults for JWSs\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\n/**\n * @description\n * The default options for {@link JWS.createSign}.\n *\n * @property {Boolean} compact Determines if the output is the Compact\n *           serialization (`true`) or the JSON serialization (**`false`**,\n *           the default).\n * @property {String|String[]} protect The names of the headers to integrity\n *           protect.  The value `\"\"` means that none of header parameters\n *           are integrity protected, while `\"*\"` (the default) means that all\n *           headers parameter sare integrity protected.\n */\nvar JWSDefaults = {\n    compact: false,\n    protect: \"*\"\n};\n\nmodule.exports = JWSDefaults;\n","/*!\n * jws/helpers.js - JWS Internal Helper Functions\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nmodule.exports = {\n  slice: function(input, start) {\n    return Array.prototype.slice.call(input, start || 0);\n  }\n};\n","/*!\n * jws/index.js - JSON Web Signature (JWS) Entry Point\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar JWS = {\n  createSign: require(\"./sign\").createSign,\n  createVerify: require(\"./verify\").createVerify\n};\n\nmodule.exports = JWS;\n","/*!\n * jws/sign.js - Sign to JWS\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar merge = require(\"../util/merge\"),\n    util = require(\"../util\"),\n    JWK = require(\"../jwk\"),\n    slice = require(\"./helpers\").slice;\n\nvar clone = require(\"lodash/clone\");\nvar uniq = require(\"lodash/uniq\");\n\nvar DEFAULTS = require(\"./defaults\");\n\n/**\n * @class JWS.Signer\n * @classdesc Generator of signed content.\n *\n * @description\n * **NOTE:** this class cannot be instantiated directly. Instead call {@link\n * JWS.createSign}.\n */\nvar JWSSigner = function(cfg, signatories) {\n  var finalized = false,\n      format = cfg.format || \"general\",\n      content = Buffer.alloc(0);\n\n  /**\n  * @member {Boolean} JWS.Signer#compact\n  * @description\n  * Indicates whether the outuput of this signature generator is using\n  * the Compact serialization (`true`) or the JSON serialization\n  * (`false`).\n  */\n  Object.defineProperty(this, \"compact\", {\n    get: function() {\n      return \"compact\" === format;\n    },\n    enumerable: true\n  });\n  Object.defineProperty(this, \"format\", {\n    get: function() {\n      return format;\n    },\n    enumerable: true\n  });\n\n  /**\n  * @method JWS.Signer#update\n  * @description\n  * Updates the signing content for this signature content. The content\n  * is appended to the end of any other content already applied.\n  *\n  * If {data} is a Buffer, {encoding} is ignored. Otherwise, {data} is\n  * converted to a Buffer internally to {encoding}.\n  *\n  * @param {Buffer|String} data The data to sign.\n  * @param {String} [encoding=\"binary\"] The encoding of {data}.\n  * @returns {JWS.Signer} This signature generator.\n  * @throws {Error} If a signature has already been generated.\n  */\n  Object.defineProperty(this, \"update\", {\n    value: function(data, encoding) {\n      if (finalized) {\n        throw new Error(\"already final\");\n      }\n      if (data != null) {\n        data = util.asBuffer(data, encoding);\n        if (content.length) {\n          content = Buffer.concat([content, data],\n                      content.length + data.length);\n        } else {\n          content = data;\n        }\n      }\n\n      return this;\n    }\n  });\n  /**\n  * @method JWS.Signer#final\n  * @description\n  * Finishes the signature operation.\n  *\n  * The returned Promise, when fulfilled, is the JSON Web Signature (JWS)\n  * object, either in the Compact (if {@link JWS.Signer#format} is\n  * `\"compact\"`), the flattened JSON (if {@link JWS.Signer#format} is\n  * \"flattened\"), or the general JSON serialization.\n  *\n  * @param {Buffer|String} [data] The final content to apply.\n  * @param {String} [encoding=\"binary\"] The encoding of the final content\n  *        (if any).\n  * @returns {Promise} The promise for the signatures\n  * @throws {Error} If a signature has already been generated.\n  */\n  Object.defineProperty(this, \"final\", {\n    value: function(data, encoding) {\n      if (finalized) {\n        return Promise.reject(new Error(\"already final\"));\n      }\n\n      // last-minute data\n      this.update(data, encoding);\n\n      // mark as done...ish\n      finalized = true;\n      var promise;\n\n      // map signatory promises to just signatories\n      promise = Promise.all(signatories);\n      promise = promise.then(function(sigs) {\n        // prepare content\n        content = util.base64url.encode(content);\n\n        sigs = sigs.map(function(s) {\n          // prepare protected\n          var protect = {},\n              lenProtect = 0,\n              unprotect = clone(s.header),\n              lenUnprotect = Object.keys(unprotect).length;\n          s.protected.forEach(function(h) {\n            if (!(h in unprotect)) {\n              return;\n            }\n            protect[h] = unprotect[h];\n            lenProtect++;\n            delete unprotect[h];\n            lenUnprotect--;\n          });\n          if (lenProtect > 0) {\n            protect = JSON.stringify(protect);\n            protect = util.base64url.encode(protect);\n          } else {\n            protect = \"\";\n          }\n\n          // signit!\n          var data = Buffer.from(protect + \".\" + content, \"ascii\");\n          s = s.key.sign(s.header.alg, data, s.header);\n          s = s.then(function(result) {\n            var sig = {};\n            if (0 < lenProtect) {\n              sig.protected = protect;\n            }\n            if (0 < lenUnprotect) {\n              sig.header = unprotect;\n            }\n            sig.signature = util.base64url.encode(result.mac);\n            return sig;\n          });\n          return s;\n        });\n        sigs = [Promise.resolve(content)].concat(sigs);\n        return Promise.all(sigs);\n      });\n      promise = promise.then(function(results) {\n        var content = results[0];\n        return {\n          payload: content,\n          signatures: results.slice(1)\n        };\n      });\n      switch (format) {\n        case \"compact\":\n          promise = promise.then(function(jws) {\n            var compact = [\n              jws.signatures[0].protected,\n              jws.payload,\n              jws.signatures[0].signature\n            ];\n            compact = compact.join(\".\");\n            return compact;\n          });\n          break;\n        case \"flattened\":\n          promise = promise.then(function(jws) {\n            var flattened = {};\n            flattened.payload = jws.payload;\n\n            var sig = jws.signatures[0];\n            if (sig.protected) {\n              flattened.protected = sig.protected;\n            }\n            if (sig.header) {\n              flattened.header = sig.header;\n            }\n            flattened.signature = sig.signature;\n\n            return flattened;\n          });\n          break;\n      }\n\n      return promise;\n    }\n  });\n};\n\n\n/**\n * @description\n * Creates a new JWS.Signer with the given options and signatories.\n *\n * @param {Object} [opts] The signing options\n * @param {Boolean} [opts.compact] Use compact serialization?\n * @param {String} [opts.format] The serialization format to use (\"compact\",\n *                 \"flattened\", \"general\")\n * @param {Object} [opts.fields] Additional header fields\n * @param {JWK.Key[]|Object[]} [signs] Signatories, either as an array of\n *        JWK.Key instances; or an array of objects, each with the following\n *        properties\n * @param {JWK.Key} signs.key Key used to sign content\n * @param {Object} [signs.header] Per-signatory header fields\n * @param {String} [signs.reference] Reference field to identify the key\n * @param {String[]|String} [signs.protect] List of fields to integrity\n *        protect (\"*\" to protect all fields)\n * @returns {JWS.Signer} The signature generator.\n * @throws {Error} If Compact serialization is requested but there are\n *         multiple signatories\n */\nfunction createSign(opts, signs) {\n  // fixup signatories\n  var options = opts,\n      signStart = 1,\n      signList = signs;\n\n  if (arguments.length === 0) {\n    throw new Error(\"at least one signatory must be provided\");\n  }\n  if (arguments.length === 1) {\n    signList = opts;\n    signStart = 0;\n    options = {};\n  } else if (JWK.isKey(opts) ||\n            (opts && \"kty\" in opts) ||\n            (opts && \"key\" in opts &&\n            (JWK.isKey(opts.key) || \"kty\" in opts.key))) {\n    signList = opts;\n    signStart = 0;\n    options = {};\n  } else {\n    options = clone(opts);\n  }\n  if (!Array.isArray(signList)) {\n    signList = slice(arguments, signStart);\n  }\n\n  // fixup options\n  options = merge(clone(DEFAULTS), options);\n\n  // setup header fields\n  var allFields = options.fields || {};\n  // setup serialization format\n  var format = options.format;\n  if (!format) {\n    format = options.compact ? \"compact\" : \"general\";\n  }\n  if ((\"compact\" === format || \"flattened\" === format) && 1 < signList.length) {\n    throw new Error(\"too many signatories for compact or flattened JSON serialization\");\n  }\n\n  // note protected fields (globally)\n  // protected fields are per signature\n  var protectAll = (\"*\" === options.protect);\n  if (options.compact) {\n    protectAll = true;\n  }\n\n  signList = signList.map(function(s, idx) {\n    var p;\n\n    // resolve a key\n    if (s && \"kty\" in s) {\n      p = JWK.asKey(s);\n      p = p.then(function(k) {\n        return {\n          key: k\n        };\n      });\n    } else if (s) {\n      p = JWK.asKey(s.key);\n      p = p.then(function(k) {\n        return {\n          header: s.header,\n          reference: s.reference,\n          protect: s.protect,\n          key: k\n        };\n      });\n    } else {\n      p = Promise.reject(new Error(\"missing key for signatory \" + idx));\n    }\n\n    // resolve the complete signatory\n    p = p.then(function(signatory) {\n      var key = signatory.key;\n\n      // make sure there is a header\n      var header = signatory.header || {};\n      header = merge(merge({}, allFields), header);\n      signatory.header = header;\n\n      // ensure an algorithm\n      if (!header.alg) {\n        header.alg = key.algorithms(JWK.MODE_SIGN)[0] || \"\";\n      }\n\n      // determine the key reference\n      var ref = signatory.reference;\n      delete signatory.reference;\n      if (undefined === ref) {\n        // header already contains the key reference\n        ref = [\"kid\", \"jku\", \"x5c\", \"x5t\", \"x5u\"].some(function(k) {\n          return (k in header);\n        });\n        ref = !ref ? \"kid\" : null;\n      } else if (\"boolean\" === typeof ref) {\n        // explicit (positive | negative) request for key reference\n        ref = ref ? \"kid\" : null;\n      }\n      var jwk;\n      if (ref) {\n        jwk = key.toJSON();\n        if (\"jwk\" === ref) {\n          if (\"oct\" === key.kty) {\n            return Promise.reject(new Error(\"cannot embed key\"));\n          }\n          header.jwk = jwk;\n        } else if (ref in jwk) {\n          header[ref] = jwk[ref];\n        }\n      }\n\n      // determine protected fields\n      var protect = signatory.protect;\n      if (protectAll || \"*\" === protect) {\n        protect = Object.keys(header);\n      } else if (\"string\" === protect) {\n        protect = [protect];\n      } else if (Array.isArray(protect)) {\n        protect = protect.concat();\n      } else if (!protect) {\n        protect = [];\n      } else {\n        return Promise.reject(new Error(\"protect must be a list of fields\"));\n      }\n      protect = uniq(protect);\n      signatory.protected = protect;\n\n      // freeze signatory\n      signatory = Object.freeze(signatory);\n      return signatory;\n    });\n\n    return p;\n  });\n\n  var cfg = {\n    format: format\n  };\n  return new JWSSigner(cfg,\n                       signList);\n}\n\nmodule.exports = {\n  signer: JWSSigner,\n  createSign: createSign\n};\n","/*!\n * jws/verify.js - Verifies from a JWS\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar clone = require(\"lodash/clone\"),\n    merge = require(\"../util/merge\"),\n    base64url = require(\"../util/base64url\"),\n    AlgConfig = require(\"../util/algconfig\"),\n    JWK = require(\"../jwk\");\n\nvar DEFAULT_OPTIONS = {\n  algorithms: \"*\",\n  allowEmbeddedKey: false\n};\n\n/**\n * @class JWS.Verifier\n * @classdesc Parser of signed content.\n *\n * @description\n * **NOTE:** this class cannot be instantiated directly. Instead call {@link\n * JWS.createVerify}.\n */\nvar JWSVerifier = function(ks, globalOpts) {\n  var assumedKey,\n      keystore;\n\n  if (JWK.isKey(ks)) {\n    assumedKey = ks;\n    keystore = assumedKey.keystore;\n  } else if (JWK.isKeyStore(ks)) {\n    keystore = ks;\n  } else {\n    keystore = JWK.createKeyStore();\n  }\n\n  globalOpts = merge(DEFAULT_OPTIONS, globalOpts);\n\n  Object.defineProperty(this, \"defaultKey\", {\n    value: assumedKey || undefined,\n    enumerable: true\n  });\n  Object.defineProperty(this, \"keystore\", {\n    value: keystore,\n    enumerable: true\n  });\n\n  Object.defineProperty(this, \"verify\", {\n    value: function(input, opts) {\n      opts = merge({}, globalOpts, opts || {});\n      var extraHandlers = opts.handlers || {};\n      var handlerKeys = Object.keys(extraHandlers);\n      var algSpec = new AlgConfig(opts.algorithms);\n\n      if (\"string\" === typeof input) {\n        input = input.split(\".\");\n        input = {\n          payload: input[1],\n          signatures: [\n            {\n              protected: input[0],\n              signature: input[2]\n            }\n          ]\n        };\n      } else if (!input || \"object\" !== typeof input) {\n        throw new Error(\"invalid input\");\n      }\n\n      // fixup \"flattened JSON\" to look like \"general JSON\"\n      if (input.signature) {\n        input.signatures = [\n          {\n            protected: input.protected || undefined,\n            header: input.header || undefined,\n            signature: input.signature\n          }\n        ];\n      }\n\n      // ensure signatories exists\n      var sigList = input.signatures || [{}];\n\n      // combine fields and decode signature per signatory\n      sigList = sigList.map(function(s) {\n        var header = clone(s.header || {});\n        var protect = s.protected ?\n                      JSON.parse(base64url.decode(s.protected, \"utf8\")) :\n                      {};\n        header = merge(header, protect);\n        var signature = base64url.decode(s.signature);\n\n        // process allowed algorithims\n        if (!algSpec.match(header.alg)) {\n          return Promise.reject(new Error(\"Algorithm not allowed: \" + header.alg));\n        }\n\n        // process \"crit\" first\n        var crit = protect.crit;\n        if (crit) {\n          if (!Array.isArray(crit)) {\n            return Promise.reject(new Error(\"Invalid 'crit' header\"));\n          }\n          for (var idx = 0; crit.length > idx; idx++) {\n            if (-1 === handlerKeys.indexOf(crit[idx])) {\n              return Promise.reject(new Error(\n                  \"Critical extension is not supported: \" + crit[idx]\n              ));\n            }\n          }\n        }\n        protect = Object.keys(protect);\n\n        return Promise.resolve({\n          protected: protect,\n          aad: s.protected || \"\",\n          header: header,\n          signature: signature\n        });\n      });\n\n      var promise = Promise.all(sigList);\n      promise = promise.then(function(sigList) {\n        return new Promise(function(resolve, reject) {\n          var processSig = function() {\n            var sig = sigList.shift();\n            if (!sig) {\n              reject(new Error(\"no key found\"));\n              return;\n            }\n\n            sig = merge({}, sig, {\n              payload: input.payload\n            });\n            var p = Promise.resolve(sig);\n            // find the key\n            p = p.then(function(sig) {\n              var algKey;\n              // TODO: resolve jku, x5c, x5u\n              if (opts.allowEmbeddedKey && sig.header.jwk) {\n                algKey = JWK.asKey(sig.header.jwk);\n              } else if (opts.allowEmbeddedKey && sig.header.x5c) {\n                algKey = sig.header.x5c[0];\n                algKey = Buffer.from(algKey, \"base64\");\n                // TODO: callback to validate chain\n                algKey = JWK.asKey(algKey, \"pkix\");\n              } else {\n                algKey = Promise.resolve(assumedKey || keystore.get({\n                  use: \"sig\",\n                  alg: sig.header.alg,\n                  kid: sig.header.kid\n                }));\n              }\n              return algKey.then(function(k) {\n                if (!k) {\n                  return Promise.reject(new Error(\"key does not match\"));\n                }\n                sig.key = k;\n                return sig;\n              });\n            });\n\n            // process any prepare-verify handlers\n            p = p.then(function(sig) {\n              var processing = [];\n              handlerKeys.forEach(function(h) {\n                h = extraHandlers[h];\n                var p;\n                if (\"function\" === typeof h) {\n                  p = h(sig);\n                } else if (\"object\" === typeof h && \"function\" === typeof h.prepare) {\n                  p = h.prepare(sig);\n                }\n                if (p) {\n                  processing.push(Promise.resolve(p));\n                }\n              });\n              return Promise.all(processing).then(function() {\n                // don't actually care about individual handler results\n                // assume {sig} is updated\n                return sig;\n              });\n            });\n\n            // prepare verify inputs\n            p = p.then(function(sig) {\n              var aad = sig.aad || \"\",\n                  payload = sig.payload || \"\";\n              var content = Buffer.alloc(1 + aad.length + payload.length),\n                  pos = 0;\n              content.write(aad, pos, \"ascii\");\n              pos += aad.length;\n              content.write(\".\", pos, \"ascii\");\n              pos++;\n\n              if (Buffer.isBuffer(payload)) {\n                payload.copy(content, pos);\n              } else {\n                content.write(payload, pos, \"binary\");\n              }\n              sig.content = content;\n              return sig;\n            });\n\n            p = p.then(function(sig) {\n              return sig.key.verify(sig.header.alg,\n                                    sig.content,\n                                    sig.signature);\n            });\n\n            p = p.then(function(result) {\n              var payload = sig.payload;\n              payload = base64url.decode(payload);\n              return {\n                protected: sig.protected,\n                header: sig.header,\n                payload: payload,\n                signature: result.mac,\n                key: sig.key\n              };\n            });\n\n            // process any post-verify handlers\n            p = p.then(function(jws) {\n              var processing = [];\n              handlerKeys.forEach(function(h) {\n                h = extraHandlers[h];\n                var p;\n                if (\"object\" === typeof h && \"function\" === typeof h.complete) {\n                  p = h.complete(jws);\n                }\n                if (p) {\n                  processing.push(Promise.resolve(p));\n                }\n              });\n              return Promise.all(processing).then(function() {\n                // don't actually care about individual handler results\n                // assume {jws} is updated\n                return jws;\n              });\n            });\n            p.then(resolve, processSig);\n          };\n          processSig();\n        });\n      });\n      return promise;\n    }\n  });\n};\n\n/**\n * @description\n * Creates a new JWS.Verifier with the given Key or KeyStore.\n *\n * @param {JWK.Key|JWK.KeyStore} ks The Key or KeyStore to use for verification.\n * @returns {JWS.Verifier} The new Verifier.\n */\nfunction createVerify(ks, opts) {\n  var vfy = new JWSVerifier(ks, opts);\n\n  return vfy;\n}\n\nmodule.exports = {\n  verifier: JWSVerifier,\n  createVerify: createVerify\n};\n","/*!\n * parse/compact.js - JOSE Compact Serialization Parser\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar jose = {\n  JWE: require(\"../jwe\"),\n  JWS: require(\"../jws\"),\n  util: require(\"../util\")\n};\n\nfunction parseCompact(input) {\n  var parts = input.split(\".\");\n\n  var type,\n      op;\n  if (3 === parts.length) {\n    // JWS\n    type = \"JWS\";\n    op = function(ks, opts) {\n      return jose.JWS.createVerify(ks).\n             verify(input, opts);\n    };\n  } else if (5 === parts.length) {\n    // JWE\n    type = \"JWE\";\n    op = function(ks, opts) {\n      return jose.JWE.createDecrypt(ks).\n             decrypt(input, opts);\n    };\n  } else {\n    throw new TypeError(\"invalid jose serialization\");\n  }\n\n  // parse header\n  var header;\n  header = jose.util.base64url.decode(parts[0], \"utf8\");\n  header = JSON.parse(header);\n  return {\n    type: type,\n    format: \"compact\",\n    input: input,\n    header: header,\n    perform: op\n  };\n}\n\nmodule.exports = parseCompact;\n","/*!\n * parse/index.js - JOSE Parser Entry Point\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar compact = require(\"./compact\"),\n    json = require(\"./json\");\n\nvar parse = module.exports = function(input) {\n  if (Buffer.isBuffer(input)) {\n    // assume buffer holds a Compact Serialization string\n    return compact(input.toString(\"ascii\"));\n  } else if (\"string\" === typeof input) {\n    return compact(input);\n  } else if (input) {\n    return json(input);\n  } else {\n    throw new TypeError(\"invalid input\");\n  }\n};\n\nparse.compact = compact;\nparse.json = json;\n","/*!\n * parse/compact.js - JOSE JSON Serialization Parser\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar merge = require(\"../util/merge\");\n\nvar jose = {\n  JWE: require(\"../jwe\"),\n  JWS: require(\"../jws\"),\n  util: require(\"../util\")\n};\n\nfunction parseJSON(input) {\n  var type,\n      op,\n      headers;\n\n  if (\"signatures\" in input || \"signature\" in input) {\n    // JWS\n    type = \"JWS\";\n    op = function(ks, opts) {\n      return jose.JWS.createVerify(ks).\n             verify(input, opts);\n    };\n    // headers can be (signatures[].protected, signatures[].header, signature.protected, signature.header)\n    headers = input.signatures ||\n              [ {\n                protected: input.protected,\n                header: input.header,\n                signature: input.signature\n              }];\n    headers = headers.map(function(sig) {\n      var all = {};\n      if (sig.header) {\n        all = merge(all, sig.header);\n      }\n\n      var prot;\n      if (sig.protected) {\n        prot = sig.protected;\n        prot = jose.util.base64url.decode(prot, \"utf8\");\n        prot = JSON.parse(prot);\n        all = merge(all, prot);\n      }\n\n      return all;\n    });\n  } else if (\"ciphertext\" in input) {\n    // JWE\n    type = \"JWE\";\n    op = function(ks, opts) {\n      return jose.JWE.createDecrypt(ks).\n             decrypt(input, opts);\n    };\n    // headers can be (protected, unprotected, recipients[].header)\n    var root = {};\n    if (input.protected) {\n      root.protected = input.protected;\n      root.protected = jose.util.base64url.decode(root.protected, \"utf8\");\n      root.protected = JSON.parse(root.protected);\n    }\n    if (input.unprotected) {\n      root.unprotected = input.unprotected;\n    }\n\n    headers = input.recipients || [{}];\n    headers = headers.map(function(rcpt) {\n      var all = {};\n      if (rcpt.header) {\n        all = merge(all, rcpt.header);\n      }\n      if (root.unprotected) {\n        all = merge(all, root.unprotected);\n      }\n      if (root.protected) {\n        all = merge(all, root.protected);\n      }\n\n      return all;\n    });\n  }\n\n  return {\n    type: type,\n    format: \"json\",\n    input: input,\n    all: headers,\n    perform: op\n  };\n}\n\nmodule.exports = parseJSON;\n","/*!\n * util/algconfig.js - Functions for managing algorithm set options\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nfunction quoteRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, \"\\\\$&\");\n}\n\nfunction makeRE(prefix, wildcard, suffix) {\n  var parts = [];\n\n  parts.push(\"^\");\n  if (prefix) {\n    prefix = quoteRE(prefix);\n    parts.push(prefix);\n  }\n  if (wildcard) {\n    parts.push((prefix || suffix) ? \".*\" : \".+\");\n  }\n  if (suffix) {\n    suffix = quoteRE(suffix);\n    parts.push(suffix);\n  }\n  parts.push(\"$\");\n\n  return parts.join(\"\");\n}\n\nvar AlgConfig = function(algspec) {\n  if (!algspec) {\n    algspec = [];\n  } else if (\"string\" === typeof algspec) {\n    algspec = algspec.split(\" \");\n  }\n\n  var specAllowed = [], specDisallowed = [];\n  var ptnAllowed = [], ptnDisallowed = [];\n  var ptn = /^(!)?([^*]*)(\\*?)([^*]*)$/, fmt;\n  algspec.forEach(function (a) {\n    if (!a) { return; }\n\n    ptn.lastIndex = 0;\n    var parts = ptn.exec(a);\n    if (!parts) { return; }\n\n    fmt = \"(\" + makeRE(parts[2], parts[3], parts[4]) + \")\";\n    if (!parts[1]) {\n      // allowed pattern\n      ptnAllowed.push(fmt);\n      specAllowed.push(parts[0]);\n    } else {\n      // disallowed pattern\n      ptnDisallowed.push(fmt);\n      specDisallowed.push(parts[0]);\n    }\n  });\n\n  ptnAllowed = (ptnAllowed.length) ?\n            new RegExp(ptnAllowed.join(\"|\")) :\n            null;\n  ptnDisallowed = (ptnDisallowed.length) ?\n               new RegExp(ptnDisallowed.join(\"|\")) :\n               null;\n  if (!specAllowed.length) {\n    specAllowed = [\"*\"];\n  }\n\n  Object.defineProperty(this, \"spec\", {\n    value: specAllowed.join(\" \") + \" \" + specDisallowed.join(\" \"),\n    enumerable: true\n  });\n  Object.defineProperty(this, \"match\", {\n    value: function(alg) {\n      var result = Boolean(alg);\n\n      if (result && ptnAllowed) {\n        ptnAllowed.lastIndex = 0;\n        result = ptnAllowed.test(alg);\n      }\n      if (result && ptnDisallowed) {\n        ptnDisallowed.lastIndex = 0;\n        result = !ptnDisallowed.test(alg);\n      }\n\n      return result;\n    }\n  });\n}\n\nmodule.exports = AlgConfig;\n","/*!\n * util/base64url.js - Implementation of web-safe Base64 Encoder/Decoder\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar impl = require(\"base64url\");\n\n/**\n * @namespace base64url\n * @description\n * Provides methods to encode and decode data according to the\n * base64url alphabet.\n */\nvar base64url = {\n  /**\n   * @function\n   * Encodes the input to base64url.\n   *\n   * If {input} is a Buffer, then {encoding} is ignored. Otherwise,\n   * {encoding} can be one of \"binary\", \"base64\", \"hex\", \"utf8\".\n   *\n   * @param {Buffer|String} input The data to encode.\n   * @param {String} [encoding = binary] The input encoding format.\n   * @returns {String} the base64url encoding of {input}.\n   */\n  encode: function encode(buffer, encoding) {\n    if (buffer instanceof ArrayBuffer) {\n      buffer = new Uint8Array(buffer);\n    }\n\n    if (!Buffer.isBuffer(buffer)) {\n      buffer = Buffer.from(buffer, encoding);\n    }\n\n    return impl.encode(buffer);\n  },\n  /**\n   * @function\n   * Decodes the input from base64url.\n   *\n   * @param {String} input The data to decode.\n   * @returns {Buffer|String} the base64url decoding of {input}.\n   */\n  decode: impl.toBuffer\n};\n\nmodule.exports = base64url;\n","/*!\n * util/databuffer.js - Forge-compatible Buffer based on Node.js Buffers\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../deps/forge.js\"),\n    base64url = require(\"./base64url.js\");\n\n/**\n *\n */\nfunction DataBuffer(b, options) {\n  options = options || {};\n\n  // treat (views of) (Array)Buffers special\n  // NOTE: default implementation creates copies, but efficiently\n  //       wherever possible\n  if (Buffer.isBuffer(b)) {\n    this.data = b;\n  } else if (forge.util.isArrayBuffer(b)) {\n    b = new Uint8Array(b);\n    this.data = Buffer.from(b);\n  } else if (forge.util.isArrayBufferView(b)) {\n    b = new Uint8Array(b.buffer, b.byteOffset, b.byteLength);\n    this.data = Buffer.from(b);\n  }\n\n  if (this.data) {\n    this.write = this.data.length;\n    b = undefined;\n  }\n\n  // setup growth rate\n  this.growSize = options.growSize || DataBuffer.DEFAULT_GROW_SIZE;\n\n  // initialize pointers and data\n  this.write = this.write || 0;\n  this.read = this.read || 0;\n  if (b) {\n    this.putBytes(b);\n  } else if (!this.data) {\n    this.accommodate(0);\n  }\n\n  // massage read/write pointers\n  options.readOffset = (\"readOffset\" in options) ?\n                       options.readOffset :\n                       this.read;\n  this.write = (\"writeOffset\" in options) ?\n               options.writeOffset :\n               this.write;\n  this.read = Math.min(options.readOffset, this.write);\n}\nDataBuffer.DEFAULT_GROW_SIZE = 16;\n\nDataBuffer.prototype.length = function() {\n  return this.write - this.read;\n};\nDataBuffer.prototype.available = function() {\n  return this.data.length - this.write;\n};\nDataBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\nDataBuffer.prototype.accommodate = function(length) {\n  if (!this.data) {\n    // initializes a new buffer\n    length = Math.max(this.write + length, this.growSize);\n\n    this.data = Buffer.alloc(length);\n  } else if (this.available() < length) {\n    length = Math.max(length, this.growSize);\n\n    // create a new empty buffer, and copy current one into it\n    var src = this.data;\n    var dst = Buffer.alloc(src.length + length);\n    src.copy(dst, 0);\n\n    // set data as the new buffer\n    this.data = dst;\n  }\n  // ensure the rest is 0\n  this.data.fill(0, this.write);\n\n  return this;\n};\nDataBuffer.prototype.clear = function() {\n  this.read = this.write = 0;\n  this.data = Buffer.alloc(0);\n  return this;\n};\nDataBuffer.prototype.truncate = function(count) {\n  // chop off <count> bytes from the end\n  this.write = this.read + Math.max(0, this.length() - count);\n  // ensure the remainder is 0\n  this.data.fill(0, this.write);\n  return this;\n};\nDataBuffer.prototype.compact = function() {\n  if (this.read > 0) {\n    if (this.write === this.read) {\n      this.read = this.write = 0;\n    } else {\n      this.data.copy(this.data, 0, this.read, this.write);\n      this.write = this.write - this.read;\n      this.read = 0;\n    }\n    // ensure remainder is 0\n    this.data.fill(0, this.write);\n  }\n  return this;\n};\nDataBuffer.prototype.copy = function() {\n  return new DataBuffer(this, {\n    readOffset: this.read,\n    writeOffset: this.write,\n    growSize: this.growSize\n  });\n};\n\nDataBuffer.prototype.equals = function(test) {\n  if (!DataBuffer.isBuffer(test)) {\n    return false;\n  }\n\n  if (test.length() !== this.length()) {\n    return false;\n  }\n\n  var rval = true,\n      delta = this.read - test.read;\n  // constant time\n  for (var idx = test.read; test.write > idx; idx++) {\n    rval = rval && (this.data[idx + delta] === test.data[idx]);\n  }\n  return rval;\n};\nDataBuffer.prototype.at = function(idx) {\n  return this.data[this.read + idx];\n};\nDataBuffer.prototype.setAt = function(idx, b) {\n  this.data[this.read + idx] = b;\n  return this;\n};\nDataBuffer.prototype.last = function() {\n  return this.data[this.write - 1];\n};\nDataBuffer.prototype.bytes = function(count) {\n  var rval;\n  if (undefined === count) {\n    count = this.length();\n  } else if (count) {\n    count = Math.min(count, this.length());\n  }\n\n  if (0 === count) {\n    rval = \"\";\n  } else {\n    var begin = this.read,\n        end = begin + count,\n        data = this.data.slice(begin, end);\n    rval = String.fromCharCode.apply(null, data);\n  }\n\n  return rval;\n};\nDataBuffer.prototype.buffer = function(count) {\n  var rval;\n  if (undefined === count) {\n    count = this.length();\n  } else if (count) {\n    count = Math.min(count, this.length());\n  }\n\n  if (0 === count) {\n    rval = new ArrayBuffer(0);\n  } else {\n    var begin = this.read,\n        end = begin + count,\n        data = this.data.slice(begin, end);\n    rval = new Uint8Array(end - begin);\n    rval.set(data);\n  }\n\n  return rval;\n};\nDataBuffer.prototype.native = function(count) {\n  var rval;\n  if (\"undefined\" === typeof count) {\n    count = this.length();\n  } else if (count) {\n    count = Math.min(count, this.length());\n  }\n\n  if (0 === count) {\n    rval = Buffer.alloc(0);\n  } else {\n    var begin = this.read,\n        end = begin + count;\n    rval = this.data.slice(begin, end);\n  }\n\n  return rval;\n};\n\nDataBuffer.prototype.toHex = function() {\n  return this.toString(\"hex\");\n};\nDataBuffer.prototype.toString = function(encoding) {\n  // short circuit empty string\n  if (0 === this.length()) {\n    return \"\";\n  }\n\n  var view = this.data.slice(this.read, this.write);\n  encoding = encoding || \"utf8\";\n  // special cases, then built-in support\n  switch (encoding) {\n    case \"raw\":\n      return view.toString(\"binary\");\n    case \"base64url\":\n      return base64url.encode(view);\n    case \"utf16\":\n      return view.toString(\"ucs2\");\n    default:\n      return view.toString(encoding);\n  }\n};\n\nDataBuffer.prototype.fillWithByte = function(b, n) {\n  if (!n) {\n    n = this.available();\n  }\n  this.accommodate(n);\n  this.data.fill(b, this.write, this.write + n);\n  this.write += n;\n\n  return this;\n};\n\nDataBuffer.prototype.getBuffer = function(count) {\n  var rval = this.buffer(count);\n  this.read += rval.byteLength;\n\n  return rval;\n};\nDataBuffer.prototype.putBuffer = function(bytes) {\n  return this.putBytes(bytes);\n};\n\nDataBuffer.prototype.getBytes = function(count) {\n  var rval = this.bytes(count);\n  this.read += rval.length;\n  return rval;\n};\nDataBuffer.prototype.putBytes = function(bytes, encoding) {\n  if (\"string\" === typeof bytes) {\n    // fixup encoding\n    encoding = encoding || \"binary\";\n    switch (encoding) {\n      case \"utf16\":\n        // treat as UCS-2/UTF-16BE\n        encoding = \"ucs-2\";\n        break;\n      case \"raw\":\n        encoding = \"binary\";\n        break;\n      case \"base64url\":\n        // NOTE: this returns a Buffer\n        bytes = base64url.decode(bytes);\n        break;\n    }\n\n    // replace bytes with decoded Buffer (if not already)\n    if (!Buffer.isBuffer(bytes)) {\n      bytes = Buffer.from(bytes, encoding);\n    }\n  }\n\n  var src, dst;\n  if (bytes instanceof DataBuffer) {\n    // be slightly more efficient\n    var orig = bytes;\n    bytes = orig.data.slice(orig.read, orig.write);\n    orig.read = orig.write;\n  } else if (bytes instanceof forge.util.ByteStringBuffer) {\n    bytes = bytes.getBytes();\n  }\n\n  // process array\n  if (Buffer.isBuffer(bytes)) {\n    src = bytes;\n  } else if (Array.isArray(bytes)) {\n    src = Buffer.from(bytes);\n  } else if (forge.util.isArrayBuffer(bytes)) {\n    src = new Uint8Array(bytes);\n    src = Buffer.from(src);\n  } else if (forge.util.isArrayBufferView(bytes)) {\n    src = (bytes instanceof Uint8Array) ?\n              bytes :\n              new Uint8Array(bytes.buffer,\n                             bytes.byteOffset,\n                             bytes.byteLength);\n    src = Buffer.from(src);\n  } else {\n    throw new TypeError(\"invalid source type\");\n  }\n\n  this.accommodate(src.length);\n  dst = this.data;\n  src.copy(dst, this.write);\n  this.write += src.length;\n\n  return this;\n};\n\nDataBuffer.prototype.getNative = function(count) {\n  var rval = this.native(count);\n  this.read += rval.length;\n  return rval;\n};\nDataBuffer.prototype.putNative = DataBuffer.prototype.putBuffer;\n\nDataBuffer.prototype.getByte = function() {\n  var b = this.data[this.read];\n  this.read = Math.min(this.read + 1, this.write);\n  return b;\n};\nDataBuffer.prototype.putByte = function(b) {\n  this.accommodate(1);\n  this.data[this.write] = b & 0xff;\n  this.write++;\n\n  return this;\n};\n\nDataBuffer.prototype.getInt16 = function() {\n  var n = (this.data[this.read] << 8) ^\n          (this.data[this.read + 1]);\n  this.read = Math.min(this.read + 2, this.write);\n  return n;\n};\nDataBuffer.prototype.putInt16 = function(n) {\n  this.accommodate(2);\n  this.data[this.write] = (n >>> 8) & 0xff;\n  this.data[this.write + 1] = n & 0xff;\n  this.write += 2;\n  return this;\n};\n\nDataBuffer.prototype.getInt24 = function() {\n  var n = (this.data[this.read] << 16) ^\n          (this.data[this.read + 1] << 8) ^\n          this.data[this.read + 2];\n  this.read = Math.min(this.read + 3, this.write);\n  return n;\n};\nDataBuffer.prototype.putInt24 = function(n) {\n  this.accommodate(3);\n  this.data[this.write] = (n >>> 16) & 0xff;\n  this.data[this.write + 1] = (n >>> 8) & 0xff;\n  this.data[this.write + 2] = n & 0xff;\n  this.write += 3;\n  return this;\n};\n\nDataBuffer.prototype.getInt32 = function() {\n  var n = (this.data[this.read] << 24) ^\n          (this.data[this.read + 1] << 16) ^\n          (this.data[this.read + 2] << 8) ^\n          this.data[this.read + 3];\n  this.read = Math.min(this.read + 4, this.write);\n  return n;\n};\nDataBuffer.prototype.putInt32 = function(n) {\n  this.accommodate(4);\n  this.data[this.write] = (n >>> 24) & 0xff;\n  this.data[this.write + 1] = (n >>> 16) & 0xff;\n  this.data[this.write + 2] = (n >>> 8) & 0xff;\n  this.data[this.write + 3] = n & 0xff;\n  this.write += 4;\n  return this;\n};\n\nDataBuffer.prototype.getInt16Le = function() {\n  var n = (this.data[this.read + 1] << 8) ^\n          this.data[this.read];\n  this.read = Math.min(this.read + 2, this.write);\n  return n;\n};\nDataBuffer.prototype.putInt16Le = function(n) {\n  this.accommodate(2);\n  this.data[this.write + 1] = (n >>> 8) & 0xff;\n  this.data[this.write] = n & 0xff;\n  this.write += 2;\n  return this;\n};\n\nDataBuffer.prototype.getInt24Le = function() {\n  var n = (this.data[this.read + 2] << 16) ^\n          (this.data[this.read + 1] << 8) ^\n          this.data[this.read];\n  this.read = Math.min(this.read + 3, this.write);\n  return n;\n};\nDataBuffer.prototype.putInt24Le = function(n) {\n  this.accommodate(3);\n  this.data[this.write + 2] = (n >>> 16) & 0xff;\n  this.data[this.write + 1] = (n >>> 8) & 0xff;\n  this.data[this.write] = n & 0xff;\n  this.write += 3;\n  return this;\n};\nDataBuffer.prototype.getInt32Le = function() {\n  var n = (this.data[this.read + 3] << 24) ^\n          (this.data[this.read + 2] << 16) ^\n          (this.data[this.read + 1] << 8) ^\n          this.data[this.read];\n  this.read = Math.min(this.read + 4, this.write);\n  return n;\n};\nDataBuffer.prototype.putInt32Le = function(n) {\n  this.accommodate(4);\n  this.data[this.write + 3] = (n >>> 24) & 0xff;\n  this.data[this.write + 2] = (n >>> 16) & 0xff;\n  this.data[this.write + 1] = (n >>> 8) & 0xff;\n  this.data[this.write] = n & 0xff;\n  this.write += 4;\n  return this;\n};\n\nDataBuffer.prototype.getInt = function(bits) {\n  var rval = 0;\n  do {\n    rval = (rval << 8) | this.getByte();\n    bits -= 8;\n  } while (bits > 0);\n  return rval;\n};\nDataBuffer.prototype.putInt = function(n, bits) {\n  this.accommodate(Math.ceil(bits / 8));\n  do {\n    bits -= 8;\n    this.putByte((n >> bits) & 0xff);\n  } while (bits > 0);\n  return this;\n};\n\nDataBuffer.prototype.putSignedInt = function(n, bits) {\n  if (n < 0) {\n    n += 2 << (bits - 1);\n  }\n  return this.putInt(n, bits);\n};\n\nDataBuffer.prototype.putString = function(str) {\n  return this.putBytes(str, \"utf16\");\n};\n\nDataBuffer.isBuffer = function(test) {\n  return (test instanceof DataBuffer);\n};\nDataBuffer.asBuffer = function(orig) {\n  return DataBuffer.isBuffer(orig) ?\n         orig :\n         orig ?\n         new DataBuffer(orig) :\n         new DataBuffer();\n};\n\nmodule.exports = DataBuffer;\n","/*!\n * util/index.js - Utilities Entry Point\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar forge = require(\"../deps/forge.js\");\n\nvar util;\n\nfunction asBuffer(input, encoding) {\n  if (Buffer.isBuffer(input)) {\n    return input;\n  }\n\n  if (\"string\" === typeof input) {\n    encoding = encoding || \"binary\";\n    if (\"base64url\" === encoding) {\n      return util.base64url.decode(input);\n    }\n    return Buffer.from(input, encoding);\n  }\n\n  // assume input is an Array, ArrayBuffer, or ArrayBufferView\n  if (forge.util.isArrayBufferView(input)) {\n    input = (input instanceof Uint8Array) ?\n            input :\n            new Uint8Array(input.buffer, input.byteOffset, input.byteOffset + input.byteLength);\n  } else if (forge.util.isArrayBuffer(input)) {\n    input = new Uint8Array(input);\n  }\n\n  var output;\n  output = Buffer.from(input);\n\n  return output;\n}\n\nfunction randomBytes(len) {\n  return Buffer.from(forge.random.getBytes(len), \"binary\");\n}\n\nutil = {\n  base64url: require(\"./base64url.js\"),\n  utf8: require(\"./utf8.js\"),\n  asBuffer: asBuffer,\n  randomBytes: randomBytes\n};\nmodule.exports = util;\n","/*!\n * util/utf8.js - Implementation of UTF-8 Encoder/Decoder\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar partialRight = require(\"lodash/partialRight\");\nvar merge = require(\"lodash/merge\");\n\nvar typedArrayCtors = (function() {\n  var ctors = [];\n  if (\"undefined\" !== typeof Uint8ClampedArray) {\n    ctors.push(Uint8ClampedArray);\n  }\n  if (\"undefined\" !== typeof Uint8Array) {\n    ctors.push(Uint8Array);\n  }\n  if (\"undefined\" !== typeof Uint16Array) {\n    ctors.push(Uint16Array);\n  }\n  if (\"undefined\" !== typeof Uint32Array) {\n    ctors.push(Uint32Array);\n  }\n  if (\"undefined\" !== typeof Float32Array) {\n    ctors.push(Float32Array);\n  }\n  if (\"undefined\" !== typeof Float64Array) {\n    ctors.push(Float64Array);\n  }\n  return ctors;\n})();\n\nfunction findTypedArrayFor(ta) {\n  var ctor;\n  for (var idx = 0; !ctor && typedArrayCtors.length > idx; idx++) {\n    if (ta instanceof typedArrayCtors[idx]) {\n      ctor = typedArrayCtors[idx];\n    }\n  }\n  return ctor;\n}\n\nfunction mergeBuffer(a, b) {\n  // TODO: should this be a copy, or the reference itself?\n  if (Buffer.isBuffer(b)) {\n    b = Buffer.from(b);\n  } else {\n    var Ctor = findTypedArrayFor(b);\n    b = Ctor ?\n        new Ctor(b, b.byteOffset, b.byteLength) :\n        undefined;\n  }\n\n  // TODO: QUESTION: create a merged <whatever-a-is>??\n  // for now, a is b\n  a = b;\n\n  return b;\n}\n\nmodule.exports = partialRight(merge, mergeBuffer);\n","/*!\n * util/utf8.js - Implementation of UTF-8 Encoder/Decoder\n *\n * Copyright (c) 2015 Cisco Systems, Inc. See LICENSE file.\n */\n\"use strict\";\n\nvar utf8 = exports;\n\nutf8.encode = function(input) {\n  var output = encodeURIComponent(input || \"\");\n  output = output.replace(/%([0-9a-fA-F]{2})/g, function(m, code) {\n    code = parseInt(code, 16);\n    return String.fromCharCode(code);\n  });\n\n  return output;\n};\nutf8.decode = function(input) {\n  var output = (input || \"\").replace(/[\\u0080-\\u00ff]/g, function(m) {\n    var code = (0x100 | m.charCodeAt(0)).toString(16).substring(1);\n    return \"%\" + code;\n  });\n  output = decodeURIComponent(output);\n\n  return output;\n};\n","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nconst { Deflate, deflate, deflateRaw, gzip } = require('./lib/deflate');\n\nconst { Inflate, inflate, inflateRaw, ungzip } = require('./lib/inflate');\n\nconst constants = require('./lib/zlib/constants');\n\nmodule.exports.Deflate = Deflate;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateRaw = deflateRaw;\nmodule.exports.gzip = gzip;\nmodule.exports.Inflate = Inflate;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateRaw = inflateRaw;\nmodule.exports.ungzip = ungzip;\nmodule.exports.constants = constants;\n","'use strict';\n\n\nconst zlib_deflate = require('./zlib/deflate');\nconst utils        = require('./utils/common');\nconst strings      = require('./utils/strings');\nconst msg          = require('./zlib/messages');\nconst ZStream      = require('./zlib/zstream');\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED\n} = require('./zlib/constants');\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  let status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = zlib_deflate.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = zlib_deflate.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    this.result = utils.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  const deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nmodule.exports.Deflate = Deflate;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateRaw = deflateRaw;\nmodule.exports.gzip = gzip;\nmodule.exports.constants = require('./zlib/constants');\n","'use strict';\n\n\nconst zlib_inflate = require('./zlib/inflate');\nconst utils        = require('./utils/common');\nconst strings      = require('./utils/strings');\nconst msg          = require('./zlib/messages');\nconst ZStream      = require('./zlib/zstream');\nconst GZheader     = require('./zlib/gzheader');\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = require('./zlib/constants');\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  this.options = utils.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  let status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = zlib_inflate.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      zlib_inflate.inflateReset(strm);\n      status = zlib_inflate.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = zlib_inflate.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  const inflator = new Inflate(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || msg[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nmodule.exports.Inflate = Inflate;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateRaw = inflateRaw;\nmodule.exports.ungzip = inflate;\nmodule.exports.constants = require('./zlib/constants');\n","'use strict';\n\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nmodule.exports.assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nmodule.exports.flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n","// String encode/decode helpers\n'use strict';\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nmodule.exports.string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nmodule.exports.buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nmodule.exports.utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = require('./trees');\nconst adler32 = require('./adler32');\nconst crc32   = require('./crc32');\nconst msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_PARTIAL_FLUSH, Z_FULL_FLUSH, Z_FINISH, Z_BLOCK,\n  Z_OK, Z_STREAM_END, Z_STREAM_ERROR, Z_DATA_ERROR, Z_BUF_ERROR,\n  Z_DEFAULT_COMPRESSION,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY,\n  Z_UNKNOWN,\n  Z_DEFLATED\n} = require('./constants');\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = msg[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH) ||\n                        flush === Z_NO_FLUSH ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH && flush !== Z_FINISH &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH) && flush !== Z_NO_FLUSH &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR;\n  }\n  strm.state.gzhead = head;\n  return Z_OK;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n};\n\n\n/* ========================================================================= */\nconst deflate = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n};\n\n\nmodule.exports.deflateInit = deflateInit;\nmodule.exports.deflateInit2 = deflateInit2;\nmodule.exports.deflateReset = deflateReset;\nmodule.exports.deflateResetKeep = deflateResetKeep;\nmodule.exports.deflateSetHeader = deflateSetHeader;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateEnd = deflateEnd;\nmodule.exports.deflateSetDictionary = deflateSetDictionary;\nmodule.exports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD = 16209;       /* got a data error -- remain here until reset */\nconst TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32       = require('./adler32');\nconst crc32         = require('./crc32');\nconst inflate_fast  = require('./inffast');\nconst inflate_table = require('./inftrees');\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH, Z_BLOCK, Z_TREES,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR, Z_BUF_ERROR,\n  Z_DEFLATED\n} = require('./constants');\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n};\n\n\nmodule.exports.inflateReset = inflateReset;\nmodule.exports.inflateReset2 = inflateReset2;\nmodule.exports.inflateResetKeep = inflateResetKeep;\nmodule.exports.inflateInit = inflateInit;\nmodule.exports.inflateInit2 = inflateInit2;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateEnd = inflateEnd;\nmodule.exports.inflateGetHeader = inflateGetHeader;\nmodule.exports.inflateSetDictionary = inflateSetDictionary;\nmodule.exports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nmodule.exports = inflate_table;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH    = 3;\nconst MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES       = 30;\n/* number of distance codes */\n\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nconst MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nmodule.exports._tr_init  = _tr_init;\nmodule.exports._tr_stored_block = _tr_stored_block;\nmodule.exports._tr_flush_block  = _tr_flush_block;\nmodule.exports._tr_tally = _tr_tally;\nmodule.exports._tr_align = _tr_align;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/uuidjs/uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// GENERATED FILE. DO NOT EDIT.\nvar Long = (function(exports) {\n  \"use strict\";\n  \n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  \n  /**\n   * @license\n   * Copyright 2009 The Closure Library Authors\n   * Copyright 2020 Daniel Wirtz / The long.js Authors.\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *     http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   *\n   * SPDX-License-Identifier: Apache-2.0\n   */\n  // WebAssembly optimizations to do native i64 multiplication and divide\n  var wasm = null;\n  \n  try {\n    wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11])), {}).exports;\n  } catch (e) {// no wasm support :(\n  }\n  /**\n   * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\n   *  See the from* functions below for more convenient ways of constructing Longs.\n   * @exports Long\n   * @class A Long class for representing a 64 bit two's-complement integer value.\n   * @param {number} low The low (signed) 32 bits of the long\n   * @param {number} high The high (signed) 32 bits of the long\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @constructor\n   */\n  \n  \n  function Long(low, high, unsigned) {\n    /**\n     * The low 32 bits as a signed value.\n     * @type {number}\n     */\n    this.low = low | 0;\n    /**\n     * The high 32 bits as a signed value.\n     * @type {number}\n     */\n  \n    this.high = high | 0;\n    /**\n     * Whether unsigned or not.\n     * @type {boolean}\n     */\n  \n    this.unsigned = !!unsigned;\n  } // The internal representation of a long is the two given signed, 32-bit values.\n  // We use 32-bit pieces because these are the size of integers on which\n  // Javascript performs bit-operations.  For operations like addition and\n  // multiplication, we split each number into 16 bit pieces, which can easily be\n  // multiplied within Javascript's floating-point representation without overflow\n  // or change in sign.\n  //\n  // In the algorithms below, we frequently reduce the negative case to the\n  // positive case by negating the input(s) and then post-processing the result.\n  // Note that we must ALWAYS check specially whether those values are MIN_VALUE\n  // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\n  // a positive number, it overflows back into a negative).  Not handling this\n  // case would often result in infinite recursion.\n  //\n  // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\n  // methods on which they depend.\n  \n  /**\n   * An indicator used to reliably determine if an object is a Long or not.\n   * @type {boolean}\n   * @const\n   * @private\n   */\n  \n  \n  Long.prototype.__isLong__;\n  Object.defineProperty(Long.prototype, \"__isLong__\", {\n    value: true\n  });\n  /**\n   * @function\n   * @param {*} obj Object\n   * @returns {boolean}\n   * @inner\n   */\n  \n  function isLong(obj) {\n    return (obj && obj[\"__isLong__\"]) === true;\n  }\n  /**\n   * @function\n   * @param {*} value number\n   * @returns {number}\n   * @inner\n   */\n  \n  \n  function ctz32(value) {\n    var c = Math.clz32(value & -value);\n    return value ? 31 - c : c;\n  }\n  /**\n   * Tests if the specified object is a Long.\n   * @function\n   * @param {*} obj Object\n   * @returns {boolean}\n   */\n  \n  \n  Long.isLong = isLong;\n  /**\n   * A cache of the Long representations of small integer values.\n   * @type {!Object}\n   * @inner\n   */\n  \n  var INT_CACHE = {};\n  /**\n   * A cache of the Long representations of small unsigned integer values.\n   * @type {!Object}\n   * @inner\n   */\n  \n  var UINT_CACHE = {};\n  /**\n   * @param {number} value\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromInt(value, unsigned) {\n    var obj, cachedObj, cache;\n  \n    if (unsigned) {\n      value >>>= 0;\n  \n      if (cache = 0 <= value && value < 256) {\n        cachedObj = UINT_CACHE[value];\n        if (cachedObj) return cachedObj;\n      }\n  \n      obj = fromBits(value, 0, true);\n      if (cache) UINT_CACHE[value] = obj;\n      return obj;\n    } else {\n      value |= 0;\n  \n      if (cache = -128 <= value && value < 128) {\n        cachedObj = INT_CACHE[value];\n        if (cachedObj) return cachedObj;\n      }\n  \n      obj = fromBits(value, value < 0 ? -1 : 0, false);\n      if (cache) INT_CACHE[value] = obj;\n      return obj;\n    }\n  }\n  /**\n   * Returns a Long representing the given 32 bit integer value.\n   * @function\n   * @param {number} value The 32 bit integer in question\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long} The corresponding Long value\n   */\n  \n  \n  Long.fromInt = fromInt;\n  /**\n   * @param {number} value\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromNumber(value, unsigned) {\n    if (isNaN(value)) return unsigned ? UZERO : ZERO;\n  \n    if (unsigned) {\n      if (value < 0) return UZERO;\n      if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;\n    } else {\n      if (value <= -TWO_PWR_63_DBL) return MIN_VALUE;\n      if (value + 1 >= TWO_PWR_63_DBL) return MAX_VALUE;\n    }\n  \n    if (value < 0) return fromNumber(-value, unsigned).neg();\n    return fromBits(value % TWO_PWR_32_DBL | 0, value / TWO_PWR_32_DBL | 0, unsigned);\n  }\n  /**\n   * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\n   * @function\n   * @param {number} value The number in question\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long} The corresponding Long value\n   */\n  \n  \n  Long.fromNumber = fromNumber;\n  /**\n   * @param {number} lowBits\n   * @param {number} highBits\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromBits(lowBits, highBits, unsigned) {\n    return new Long(lowBits, highBits, unsigned);\n  }\n  /**\n   * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\n   *  assumed to use 32 bits.\n   * @function\n   * @param {number} lowBits The low 32 bits\n   * @param {number} highBits The high 32 bits\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long} The corresponding Long value\n   */\n  \n  \n  Long.fromBits = fromBits;\n  /**\n   * @function\n   * @param {number} base\n   * @param {number} exponent\n   * @returns {number}\n   * @inner\n   */\n  \n  var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\n  \n  /**\n   * @param {string} str\n   * @param {(boolean|number)=} unsigned\n   * @param {number=} radix\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromString(str, unsigned, radix) {\n    if (str.length === 0) throw Error('empty string');\n  \n    if (typeof unsigned === 'number') {\n      // For goog.math.long compatibility\n      radix = unsigned;\n      unsigned = false;\n    } else {\n      unsigned = !!unsigned;\n    }\n  \n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\") return unsigned ? UZERO : ZERO;\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix) throw RangeError('radix');\n    var p;\n    if ((p = str.indexOf('-')) > 0) throw Error('interior hyphen');else if (p === 0) {\n      return fromString(str.substring(1), unsigned, radix).neg();\n    } // Do several (8) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n  \n    var radixToPower = fromNumber(pow_dbl(radix, 8));\n    var result = ZERO;\n  \n    for (var i = 0; i < str.length; i += 8) {\n      var size = Math.min(8, str.length - i),\n          value = parseInt(str.substring(i, i + size), radix);\n  \n      if (size < 8) {\n        var power = fromNumber(pow_dbl(radix, size));\n        result = result.mul(power).add(fromNumber(value));\n      } else {\n        result = result.mul(radixToPower);\n        result = result.add(fromNumber(value));\n      }\n    }\n  \n    result.unsigned = unsigned;\n    return result;\n  }\n  /**\n   * Returns a Long representation of the given string, written using the specified radix.\n   * @function\n   * @param {string} str The textual representation of the Long\n   * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\n   * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\n   * @returns {!Long} The corresponding Long value\n   */\n  \n  \n  Long.fromString = fromString;\n  /**\n   * @function\n   * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\n   * @param {boolean=} unsigned\n   * @returns {!Long}\n   * @inner\n   */\n  \n  function fromValue(val, unsigned) {\n    if (typeof val === 'number') return fromNumber(val, unsigned);\n    if (typeof val === 'string') return fromString(val, unsigned); // Throws for non-objects, converts non-instanceof Long:\n  \n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\n  }\n  /**\n   * Converts the specified value to a Long using the appropriate from* function for its type.\n   * @function\n   * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {!Long}\n   */\n  \n  \n  Long.fromValue = fromValue; // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\n  // no runtime penalty for these.\n  \n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_16_DBL = 1 << 16;\n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_24_DBL = 1 << 24;\n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\n  /**\n   * @type {number}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\n  /**\n   * @type {!Long}\n   * @const\n   * @inner\n   */\n  \n  var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var ZERO = fromInt(0);\n  /**\n   * Signed zero.\n   * @type {!Long}\n   */\n  \n  Long.ZERO = ZERO;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var UZERO = fromInt(0, true);\n  /**\n   * Unsigned zero.\n   * @type {!Long}\n   */\n  \n  Long.UZERO = UZERO;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var ONE = fromInt(1);\n  /**\n   * Signed one.\n   * @type {!Long}\n   */\n  \n  Long.ONE = ONE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var UONE = fromInt(1, true);\n  /**\n   * Unsigned one.\n   * @type {!Long}\n   */\n  \n  Long.UONE = UONE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var NEG_ONE = fromInt(-1);\n  /**\n   * Signed negative one.\n   * @type {!Long}\n   */\n  \n  Long.NEG_ONE = NEG_ONE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var MAX_VALUE = fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0, false);\n  /**\n   * Maximum signed value.\n   * @type {!Long}\n   */\n  \n  Long.MAX_VALUE = MAX_VALUE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF | 0, 0xFFFFFFFF | 0, true);\n  /**\n   * Maximum unsigned value.\n   * @type {!Long}\n   */\n  \n  Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\n  /**\n   * @type {!Long}\n   * @inner\n   */\n  \n  var MIN_VALUE = fromBits(0, 0x80000000 | 0, false);\n  /**\n   * Minimum signed value.\n   * @type {!Long}\n   */\n  \n  Long.MIN_VALUE = MIN_VALUE;\n  /**\n   * @alias Long.prototype\n   * @inner\n   */\n  \n  var LongPrototype = Long.prototype;\n  /**\n   * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\n   * @this {!Long}\n   * @returns {number}\n   */\n  \n  LongPrototype.toInt = function toInt() {\n    return this.unsigned ? this.low >>> 0 : this.low;\n  };\n  /**\n   * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\n   * @this {!Long}\n   * @returns {number}\n   */\n  \n  \n  LongPrototype.toNumber = function toNumber() {\n    if (this.unsigned) return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\n  };\n  /**\n   * Converts the Long to a string written in the specified radix.\n   * @this {!Long}\n   * @param {number=} radix Radix (2-36), defaults to 10\n   * @returns {string}\n   * @override\n   * @throws {RangeError} If `radix` is out of range\n   */\n  \n  \n  LongPrototype.toString = function toString(radix) {\n    radix = radix || 10;\n    if (radix < 2 || 36 < radix) throw RangeError('radix');\n    if (this.isZero()) return '0';\n  \n    if (this.isNegative()) {\n      // Unsigned Longs are never negative\n      if (this.eq(MIN_VALUE)) {\n        // We need to change the Long value before it can be negated, so we remove\n        // the bottom-most digit in this base and then recurse to do the rest.\n        var radixLong = fromNumber(radix),\n            div = this.div(radixLong),\n            rem1 = div.mul(radixLong).sub(this);\n        return div.toString(radix) + rem1.toInt().toString(radix);\n      } else return '-' + this.neg().toString(radix);\n    } // Do several (6) digits each time through the loop, so as to\n    // minimize the calls to the very expensive emulated div.\n  \n  \n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\n        rem = this;\n    var result = '';\n  \n    while (true) {\n      var remDiv = rem.div(radixToPower),\n          intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\n          digits = intval.toString(radix);\n      rem = remDiv;\n      if (rem.isZero()) return digits + result;else {\n        while (digits.length < 6) digits = '0' + digits;\n  \n        result = '' + digits + result;\n      }\n    }\n  };\n  /**\n   * Gets the high 32 bits as a signed integer.\n   * @this {!Long}\n   * @returns {number} Signed high bits\n   */\n  \n  \n  LongPrototype.getHighBits = function getHighBits() {\n    return this.high;\n  };\n  /**\n   * Gets the high 32 bits as an unsigned integer.\n   * @this {!Long}\n   * @returns {number} Unsigned high bits\n   */\n  \n  \n  LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\n    return this.high >>> 0;\n  };\n  /**\n   * Gets the low 32 bits as a signed integer.\n   * @this {!Long}\n   * @returns {number} Signed low bits\n   */\n  \n  \n  LongPrototype.getLowBits = function getLowBits() {\n    return this.low;\n  };\n  /**\n   * Gets the low 32 bits as an unsigned integer.\n   * @this {!Long}\n   * @returns {number} Unsigned low bits\n   */\n  \n  \n  LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\n    return this.low >>> 0;\n  };\n  /**\n   * Gets the number of bits needed to represent the absolute value of this Long.\n   * @this {!Long}\n   * @returns {number}\n   */\n  \n  \n  LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\n    if (this.isNegative()) // Unsigned Longs are never negative\n      return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\n    var val = this.high != 0 ? this.high : this.low;\n  \n    for (var bit = 31; bit > 0; bit--) if ((val & 1 << bit) != 0) break;\n  \n    return this.high != 0 ? bit + 33 : bit + 1;\n  };\n  /**\n   * Tests if this Long's value equals zero.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.isZero = function isZero() {\n    return this.high === 0 && this.low === 0;\n  };\n  /**\n   * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.eqz = LongPrototype.isZero;\n  /**\n   * Tests if this Long's value is negative.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  LongPrototype.isNegative = function isNegative() {\n    return !this.unsigned && this.high < 0;\n  };\n  /**\n   * Tests if this Long's value is positive or zero.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.isPositive = function isPositive() {\n    return this.unsigned || this.high >= 0;\n  };\n  /**\n   * Tests if this Long's value is odd.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.isOdd = function isOdd() {\n    return (this.low & 1) === 1;\n  };\n  /**\n   * Tests if this Long's value is even.\n   * @this {!Long}\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.isEven = function isEven() {\n    return (this.low & 1) === 0;\n  };\n  /**\n   * Tests if this Long's value equals the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.equals = function equals(other) {\n    if (!isLong(other)) other = fromValue(other);\n    if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1) return false;\n    return this.high === other.high && this.low === other.low;\n  };\n  /**\n   * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.eq = LongPrototype.equals;\n  /**\n   * Tests if this Long's value differs from the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.notEquals = function notEquals(other) {\n    return !this.eq(\n    /* validates */\n    other);\n  };\n  /**\n   * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.neq = LongPrototype.notEquals;\n  /**\n   * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.ne = LongPrototype.notEquals;\n  /**\n   * Tests if this Long's value is less than the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.lessThan = function lessThan(other) {\n    return this.comp(\n    /* validates */\n    other) < 0;\n  };\n  /**\n   * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.lt = LongPrototype.lessThan;\n  /**\n   * Tests if this Long's value is less than or equal the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\n    return this.comp(\n    /* validates */\n    other) <= 0;\n  };\n  /**\n   * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.lte = LongPrototype.lessThanOrEqual;\n  /**\n   * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.le = LongPrototype.lessThanOrEqual;\n  /**\n   * Tests if this Long's value is greater than the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.greaterThan = function greaterThan(other) {\n    return this.comp(\n    /* validates */\n    other) > 0;\n  };\n  /**\n   * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.gt = LongPrototype.greaterThan;\n  /**\n   * Tests if this Long's value is greater than or equal the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\n    return this.comp(\n    /* validates */\n    other) >= 0;\n  };\n  /**\n   * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  \n  LongPrototype.gte = LongPrototype.greaterThanOrEqual;\n  /**\n   * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {boolean}\n   */\n  \n  LongPrototype.ge = LongPrototype.greaterThanOrEqual;\n  /**\n   * Compares this Long's value with the specified's.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other value\n   * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n   *  if the given one is greater\n   */\n  \n  LongPrototype.compare = function compare(other) {\n    if (!isLong(other)) other = fromValue(other);\n    if (this.eq(other)) return 0;\n    var thisNeg = this.isNegative(),\n        otherNeg = other.isNegative();\n    if (thisNeg && !otherNeg) return -1;\n    if (!thisNeg && otherNeg) return 1; // At this point the sign bits are the same\n  \n    if (!this.unsigned) return this.sub(other).isNegative() ? -1 : 1; // Both are positive if at least one is unsigned\n  \n    return other.high >>> 0 > this.high >>> 0 || other.high === this.high && other.low >>> 0 > this.low >>> 0 ? -1 : 1;\n  };\n  /**\n   * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\n   * @function\n   * @param {!Long|number|string} other Other value\n   * @returns {number} 0 if they are the same, 1 if the this is greater and -1\n   *  if the given one is greater\n   */\n  \n  \n  LongPrototype.comp = LongPrototype.compare;\n  /**\n   * Negates this Long's value.\n   * @this {!Long}\n   * @returns {!Long} Negated Long\n   */\n  \n  LongPrototype.negate = function negate() {\n    if (!this.unsigned && this.eq(MIN_VALUE)) return MIN_VALUE;\n    return this.not().add(ONE);\n  };\n  /**\n   * Negates this Long's value. This is an alias of {@link Long#negate}.\n   * @function\n   * @returns {!Long} Negated Long\n   */\n  \n  \n  LongPrototype.neg = LongPrototype.negate;\n  /**\n   * Returns the sum of this and the specified Long.\n   * @this {!Long}\n   * @param {!Long|number|string} addend Addend\n   * @returns {!Long} Sum\n   */\n  \n  LongPrototype.add = function add(addend) {\n    if (!isLong(addend)) addend = fromValue(addend); // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\n  \n    var a48 = this.high >>> 16;\n    var a32 = this.high & 0xFFFF;\n    var a16 = this.low >>> 16;\n    var a00 = this.low & 0xFFFF;\n    var b48 = addend.high >>> 16;\n    var b32 = addend.high & 0xFFFF;\n    var b16 = addend.low >>> 16;\n    var b00 = addend.low & 0xFFFF;\n    var c48 = 0,\n        c32 = 0,\n        c16 = 0,\n        c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 + b48;\n    c48 &= 0xFFFF;\n    return fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);\n  };\n  /**\n   * Returns the difference of this and the specified Long.\n   * @this {!Long}\n   * @param {!Long|number|string} subtrahend Subtrahend\n   * @returns {!Long} Difference\n   */\n  \n  \n  LongPrototype.subtract = function subtract(subtrahend) {\n    if (!isLong(subtrahend)) subtrahend = fromValue(subtrahend);\n    return this.add(subtrahend.neg());\n  };\n  /**\n   * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\n   * @function\n   * @param {!Long|number|string} subtrahend Subtrahend\n   * @returns {!Long} Difference\n   */\n  \n  \n  LongPrototype.sub = LongPrototype.subtract;\n  /**\n   * Returns the product of this and the specified Long.\n   * @this {!Long}\n   * @param {!Long|number|string} multiplier Multiplier\n   * @returns {!Long} Product\n   */\n  \n  LongPrototype.multiply = function multiply(multiplier) {\n    if (this.isZero()) return this;\n    if (!isLong(multiplier)) multiplier = fromValue(multiplier); // use wasm support if present\n  \n    if (wasm) {\n      var low = wasm[\"mul\"](this.low, this.high, multiplier.low, multiplier.high);\n      return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n    }\n  \n    if (multiplier.isZero()) return this.unsigned ? UZERO : ZERO;\n    if (this.eq(MIN_VALUE)) return multiplier.isOdd() ? MIN_VALUE : ZERO;\n    if (multiplier.eq(MIN_VALUE)) return this.isOdd() ? MIN_VALUE : ZERO;\n  \n    if (this.isNegative()) {\n      if (multiplier.isNegative()) return this.neg().mul(multiplier.neg());else return this.neg().mul(multiplier).neg();\n    } else if (multiplier.isNegative()) return this.mul(multiplier.neg()).neg(); // If both longs are small, use float multiplication\n  \n  \n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24)) return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned); // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\n    // We can skip products that would overflow.\n  \n    var a48 = this.high >>> 16;\n    var a32 = this.high & 0xFFFF;\n    var a16 = this.low >>> 16;\n    var a00 = this.low & 0xFFFF;\n    var b48 = multiplier.high >>> 16;\n    var b32 = multiplier.high & 0xFFFF;\n    var b16 = multiplier.low >>> 16;\n    var b00 = multiplier.low & 0xFFFF;\n    var c48 = 0,\n        c32 = 0,\n        c16 = 0,\n        c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xFFFF;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xFFFF;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xFFFF;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xFFFF;\n    return fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);\n  };\n  /**\n   * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\n   * @function\n   * @param {!Long|number|string} multiplier Multiplier\n   * @returns {!Long} Product\n   */\n  \n  \n  LongPrototype.mul = LongPrototype.multiply;\n  /**\n   * Returns this Long divided by the specified. The result is signed if this Long is signed or\n   *  unsigned if this Long is unsigned.\n   * @this {!Long}\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Quotient\n   */\n  \n  LongPrototype.divide = function divide(divisor) {\n    if (!isLong(divisor)) divisor = fromValue(divisor);\n    if (divisor.isZero()) throw Error('division by zero'); // use wasm support if present\n  \n    if (wasm) {\n      // guard against signed division overflow: the largest\n      // negative number / -1 would be 1 larger than the largest\n      // positive number, due to two's complement.\n      if (!this.unsigned && this.high === -0x80000000 && divisor.low === -1 && divisor.high === -1) {\n        // be consistent with non-wasm code path\n        return this;\n      }\n  \n      var low = (this.unsigned ? wasm[\"div_u\"] : wasm[\"div_s\"])(this.low, this.high, divisor.low, divisor.high);\n      return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n    }\n  \n    if (this.isZero()) return this.unsigned ? UZERO : ZERO;\n    var approx, rem, res;\n  \n    if (!this.unsigned) {\n      // This section is only relevant for signed longs and is derived from the\n      // closure library as a whole.\n      if (this.eq(MIN_VALUE)) {\n        if (divisor.eq(ONE) || divisor.eq(NEG_ONE)) return MIN_VALUE; // recall that -MIN_VALUE == MIN_VALUE\n        else if (divisor.eq(MIN_VALUE)) return ONE;else {\n          // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\n          var halfThis = this.shr(1);\n          approx = halfThis.div(divisor).shl(1);\n  \n          if (approx.eq(ZERO)) {\n            return divisor.isNegative() ? ONE : NEG_ONE;\n          } else {\n            rem = this.sub(divisor.mul(approx));\n            res = approx.add(rem.div(divisor));\n            return res;\n          }\n        }\n      } else if (divisor.eq(MIN_VALUE)) return this.unsigned ? UZERO : ZERO;\n  \n      if (this.isNegative()) {\n        if (divisor.isNegative()) return this.neg().div(divisor.neg());\n        return this.neg().div(divisor).neg();\n      } else if (divisor.isNegative()) return this.div(divisor.neg()).neg();\n  \n      res = ZERO;\n    } else {\n      // The algorithm below has not been made for unsigned longs. It's therefore\n      // required to take special care of the MSB prior to running it.\n      if (!divisor.unsigned) divisor = divisor.toUnsigned();\n      if (divisor.gt(this)) return UZERO;\n      if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\n        return UONE;\n      res = UZERO;\n    } // Repeat the following until the remainder is less than other:  find a\n    // floating-point that approximates remainder / other *from below*, add this\n    // into the result, and subtract it from the remainder.  It is critical that\n    // the approximate value is less than or equal to the real value so that the\n    // remainder never becomes negative.\n  \n  \n    rem = this;\n  \n    while (rem.gte(divisor)) {\n      // Approximate the result of division. This may be a little greater or\n      // smaller than the actual value.\n      approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber())); // We will tweak the approximate result by changing it in the 48-th digit or\n      // the smallest non-fractional digit, whichever is larger.\n  \n      var log2 = Math.ceil(Math.log(approx) / Math.LN2),\n          delta = log2 <= 48 ? 1 : pow_dbl(2, log2 - 48),\n          // Decrease the approximation until it is smaller than the remainder.  Note\n      // that if it is too large, the product overflows and is negative.\n      approxRes = fromNumber(approx),\n          approxRem = approxRes.mul(divisor);\n  \n      while (approxRem.isNegative() || approxRem.gt(rem)) {\n        approx -= delta;\n        approxRes = fromNumber(approx, this.unsigned);\n        approxRem = approxRes.mul(divisor);\n      } // We know the answer can't be zero... and actually, zero would cause\n      // infinite recursion since we would make no progress.\n  \n  \n      if (approxRes.isZero()) approxRes = ONE;\n      res = res.add(approxRes);\n      rem = rem.sub(approxRem);\n    }\n  \n    return res;\n  };\n  /**\n   * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\n   * @function\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Quotient\n   */\n  \n  \n  LongPrototype.div = LongPrototype.divide;\n  /**\n   * Returns this Long modulo the specified.\n   * @this {!Long}\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Remainder\n   */\n  \n  LongPrototype.modulo = function modulo(divisor) {\n    if (!isLong(divisor)) divisor = fromValue(divisor); // use wasm support if present\n  \n    if (wasm) {\n      var low = (this.unsigned ? wasm[\"rem_u\"] : wasm[\"rem_s\"])(this.low, this.high, divisor.low, divisor.high);\n      return fromBits(low, wasm[\"get_high\"](), this.unsigned);\n    }\n  \n    return this.sub(this.div(divisor).mul(divisor));\n  };\n  /**\n   * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n   * @function\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Remainder\n   */\n  \n  \n  LongPrototype.mod = LongPrototype.modulo;\n  /**\n   * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\n   * @function\n   * @param {!Long|number|string} divisor Divisor\n   * @returns {!Long} Remainder\n   */\n  \n  LongPrototype.rem = LongPrototype.modulo;\n  /**\n   * Returns the bitwise NOT of this Long.\n   * @this {!Long}\n   * @returns {!Long}\n   */\n  \n  LongPrototype.not = function not() {\n    return fromBits(~this.low, ~this.high, this.unsigned);\n  };\n  /**\n   * Returns count leading zeros of this Long.\n   * @this {!Long}\n   * @returns {!number}\n   */\n  \n  \n  LongPrototype.countLeadingZeros = function countLeadingZeros() {\n    return this.high ? Math.clz32(this.high) : Math.clz32(this.low) + 32;\n  };\n  /**\n   * Returns count leading zeros. This is an alias of {@link Long#countLeadingZeros}.\n   * @function\n   * @param {!Long}\n   * @returns {!number}\n   */\n  \n  \n  LongPrototype.clz = LongPrototype.countLeadingZeros;\n  /**\n   * Returns count trailing zeros of this Long.\n   * @this {!Long}\n   * @returns {!number}\n   */\n  \n  LongPrototype.countTrailingZeros = function countTrailingZeros() {\n    return this.low ? ctz32(this.low) : ctz32(this.high) + 32;\n  };\n  /**\n   * Returns count trailing zeros. This is an alias of {@link Long#countTrailingZeros}.\n   * @function\n   * @param {!Long}\n   * @returns {!number}\n   */\n  \n  \n  LongPrototype.ctz = LongPrototype.countTrailingZeros;\n  /**\n   * Returns the bitwise AND of this Long and the specified.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other Long\n   * @returns {!Long}\n   */\n  \n  LongPrototype.and = function and(other) {\n    if (!isLong(other)) other = fromValue(other);\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\n  };\n  /**\n   * Returns the bitwise OR of this Long and the specified.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other Long\n   * @returns {!Long}\n   */\n  \n  \n  LongPrototype.or = function or(other) {\n    if (!isLong(other)) other = fromValue(other);\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\n  };\n  /**\n   * Returns the bitwise XOR of this Long and the given one.\n   * @this {!Long}\n   * @param {!Long|number|string} other Other Long\n   * @returns {!Long}\n   */\n  \n  \n  LongPrototype.xor = function xor(other) {\n    if (!isLong(other)) other = fromValue(other);\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits shifted to the left by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  \n  LongPrototype.shiftLeft = function shiftLeft(numBits) {\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;else if (numBits < 32) return fromBits(this.low << numBits, this.high << numBits | this.low >>> 32 - numBits, this.unsigned);else return fromBits(0, this.low << numBits - 32, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  \n  LongPrototype.shl = LongPrototype.shiftLeft;\n  /**\n   * Returns this Long with bits arithmetically shifted to the right by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  LongPrototype.shiftRight = function shiftRight(numBits) {\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;else if (numBits < 32) return fromBits(this.low >>> numBits | this.high << 32 - numBits, this.high >> numBits, this.unsigned);else return fromBits(this.high >> numBits - 32, this.high >= 0 ? 0 : -1, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  \n  LongPrototype.shr = LongPrototype.shiftRight;\n  /**\n   * Returns this Long with bits logically shifted to the right by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    if (numBits < 32) return fromBits(this.low >>> numBits | this.high << 32 - numBits, this.high >>> numBits, this.unsigned);\n    if (numBits === 32) return fromBits(this.high, 0, this.unsigned);\n    return fromBits(this.high >>> numBits - 32, 0, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  \n  LongPrototype.shru = LongPrototype.shiftRightUnsigned;\n  /**\n   * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Shifted Long\n   */\n  \n  LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\n  /**\n   * Returns this Long with bits rotated to the left by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  \n  LongPrototype.rotateLeft = function rotateLeft(numBits) {\n    var b;\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n  \n    if (numBits < 32) {\n      b = 32 - numBits;\n      return fromBits(this.low << numBits | this.high >>> b, this.high << numBits | this.low >>> b, this.unsigned);\n    }\n  \n    numBits -= 32;\n    b = 32 - numBits;\n    return fromBits(this.high << numBits | this.low >>> b, this.low << numBits | this.high >>> b, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits rotated to the left by the given amount. This is an alias of {@link Long#rotateLeft}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  \n  \n  LongPrototype.rotl = LongPrototype.rotateLeft;\n  /**\n   * Returns this Long with bits rotated to the right by the given amount.\n   * @this {!Long}\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  \n  LongPrototype.rotateRight = function rotateRight(numBits) {\n    var b;\n    if (isLong(numBits)) numBits = numBits.toInt();\n    if ((numBits &= 63) === 0) return this;\n    if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);\n  \n    if (numBits < 32) {\n      b = 32 - numBits;\n      return fromBits(this.high << b | this.low >>> numBits, this.low << b | this.high >>> numBits, this.unsigned);\n    }\n  \n    numBits -= 32;\n    b = 32 - numBits;\n    return fromBits(this.low << b | this.high >>> numBits, this.high << b | this.low >>> numBits, this.unsigned);\n  };\n  /**\n   * Returns this Long with bits rotated to the right by the given amount. This is an alias of {@link Long#rotateRight}.\n   * @function\n   * @param {number|!Long} numBits Number of bits\n   * @returns {!Long} Rotated Long\n   */\n  \n  \n  LongPrototype.rotr = LongPrototype.rotateRight;\n  /**\n   * Converts this Long to signed.\n   * @this {!Long}\n   * @returns {!Long} Signed long\n   */\n  \n  LongPrototype.toSigned = function toSigned() {\n    if (!this.unsigned) return this;\n    return fromBits(this.low, this.high, false);\n  };\n  /**\n   * Converts this Long to unsigned.\n   * @this {!Long}\n   * @returns {!Long} Unsigned long\n   */\n  \n  \n  LongPrototype.toUnsigned = function toUnsigned() {\n    if (this.unsigned) return this;\n    return fromBits(this.low, this.high, true);\n  };\n  /**\n   * Converts this Long to its byte representation.\n   * @param {boolean=} le Whether little or big endian, defaults to big endian\n   * @this {!Long}\n   * @returns {!Array.<number>} Byte representation\n   */\n  \n  \n  LongPrototype.toBytes = function toBytes(le) {\n    return le ? this.toBytesLE() : this.toBytesBE();\n  };\n  /**\n   * Converts this Long to its little endian byte representation.\n   * @this {!Long}\n   * @returns {!Array.<number>} Little endian byte representation\n   */\n  \n  \n  LongPrototype.toBytesLE = function toBytesLE() {\n    var hi = this.high,\n        lo = this.low;\n    return [lo & 0xff, lo >>> 8 & 0xff, lo >>> 16 & 0xff, lo >>> 24, hi & 0xff, hi >>> 8 & 0xff, hi >>> 16 & 0xff, hi >>> 24];\n  };\n  /**\n   * Converts this Long to its big endian byte representation.\n   * @this {!Long}\n   * @returns {!Array.<number>} Big endian byte representation\n   */\n  \n  \n  LongPrototype.toBytesBE = function toBytesBE() {\n    var hi = this.high,\n        lo = this.low;\n    return [hi >>> 24, hi >>> 16 & 0xff, hi >>> 8 & 0xff, hi & 0xff, lo >>> 24, lo >>> 16 & 0xff, lo >>> 8 & 0xff, lo & 0xff];\n  };\n  /**\n   * Creates a Long from its byte representation.\n   * @param {!Array.<number>} bytes Byte representation\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @param {boolean=} le Whether little or big endian, defaults to big endian\n   * @returns {Long} The corresponding Long value\n   */\n  \n  \n  Long.fromBytes = function fromBytes(bytes, unsigned, le) {\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\n  };\n  /**\n   * Creates a Long from its little endian byte representation.\n   * @param {!Array.<number>} bytes Little endian byte representation\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {Long} The corresponding Long value\n   */\n  \n  \n  Long.fromBytesLE = function fromBytesLE(bytes, unsigned) {\n    return new Long(bytes[0] | bytes[1] << 8 | bytes[2] << 16 | bytes[3] << 24, bytes[4] | bytes[5] << 8 | bytes[6] << 16 | bytes[7] << 24, unsigned);\n  };\n  /**\n   * Creates a Long from its big endian byte representation.\n   * @param {!Array.<number>} bytes Big endian byte representation\n   * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\n   * @returns {Long} The corresponding Long value\n   */\n  \n  \n  Long.fromBytesBE = function fromBytesBE(bytes, unsigned) {\n    return new Long(bytes[4] << 24 | bytes[5] << 16 | bytes[6] << 8 | bytes[7], bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3], unsigned);\n  };\n  \n  var _default = Long;\n  exports.default = _default;\n  return \"default\" in exports ? exports.default : exports;\n})({});\nif (typeof define === 'function' && define.amd) define([], function() { return Long; });\nelse if (typeof module === 'object' && typeof exports==='object') module.exports = Long;\n"],"names":["exports","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","pad_string_1","encode","input","encoding","Buffer","isBuffer","fromBase64","toString","from","toBase64","base64url","default","replace","base64","decode","toBuffer","Object","defineProperty","value","stringLength","diff","position","padLength","paddedStringLength","buffer","alloc","write","module","ieee754","customInspectSymbol","Symbol","K_MAX_LENGTH","createBuffer","RangeError","buf","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","string","isEncoding","actual","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","objectOrFunction","isFunction","vertxNext","customSchedulerFn","asap","callback","queue","flush","scheduleFlush","setScheduler","scheduleFn","setAsap","asapFn","browserWindow","window","browserGlobal","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","isNode","self","process","isWorker","Uint8ClampedArray","importScripts","MessageChannel","useNextTick","nextTick","useVertxTimer","useSetTimeout","useMutationObserver","iterations","observer","node","document","createTextNode","observe","characterData","useMessageChannel","channel","port1","onmessage","port2","postMessage","globalSetTimeout","setTimeout","attemptVertx","vertx","Function","require","runOnLoop","runOnContext","then","onFulfillment","onRejection","parent","child","noop","PROMISE_ID","makePromise","_state","invokeCallback","_result","subscribe","resolve$1","object","Constructor","promise","resolve","random","substring","PENDING","FULFILLED","REJECTED","selfFulfillment","cannotReturnOwn","tryThen","then$$1","fulfillmentHandler","rejectionHandler","handleForeignThenable","thenable","sealed","fulfill","reason","reject","_label","handleOwnThenable","handleMaybeThenable","maybeThenable","publishRejection","_onerror","publish","_subscribers","subscribers","settled","detail","hasCallback","succeeded","initializePromise","resolver","id","nextId","validationError","Enumerator","_instanceConstructor","_remaining","_enumerate","_eachEntry","entry","resolve$$1","_then","didError","_settledAt","Promise$1","_willSettleAt","state","enumerator","all","entries","race","_","reject$1","needsResolver","needsNew","Promise","catch","finally","polyfill","local","g","P","promiseToString","cast","_setScheduler","_setAsap","_asap","factory","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","d","s","NaN","rt","isNaN","log","LN2","DataView","getNative","hashClear","hashDelete","hashGet","hashHas","hashSet","Hash","index","clear","has","baseCreate","baseLodash","LazyWrapper","__wrapped__","__actions__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","LodashWrapper","chainAll","__chain__","__index__","__values__","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","Set","setCacheAdd","setCacheHas","SetCache","values","__data__","add","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","WeakMap","func","thisArg","args","iteratee","predicate","resIndex","result","baseIndexOf","comparator","baseTimes","isArguments","isIndex","isTypedArray","hasOwnProperty","inherited","isArr","isArg","isBuff","isType","skipIndexes","key","baseAssignValue","eq","objValue","copyObject","keys","source","keysIn","number","lower","upper","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isMap","isObject","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","bitmask","customizer","isDeep","isFlat","isFull","tag","isFunc","stacked","forEach","subValue","props","objectCreate","create","toInteger","toLength","fromIndex","fromRight","arrayPush","isFlattenable","baseFlatten","depth","isStrict","baseFor","createBaseFor","castPath","toKey","path","keysFunc","symbolsFunc","getRawTag","objectToString","symToStringTag","toStringTag","baseFindIndex","baseIsNaN","strictIndexOf","arrayIncludes","arrayIncludesWith","arrayMap","baseUnary","cacheHas","nativeMin","arrays","othLength","othIndex","caches","maxLength","seen","outer","computed","cache","baseGetTag","isObjectLike","isMasked","toSource","reIsHostCtor","funcProto","objectProto","funcToString","reIsNative","RegExp","test","isLength","typedArrayTags","isPrototype","nativeKeys","nativeKeysIn","isProto","assignMergeValue","baseMergeDeep","safeGet","baseMerge","srcIndex","srcValue","newValue","cloneTypedArray","isArrayLikeObject","isPlainObject","toPlainObject","mergeFunc","isCommon","isTyped","basePickBy","hasIn","paths","baseGet","baseSet","identity","overRest","setToString","lastIndex","nested","metaMap","baseSetData","constant","baseSetToString","isSymbol","symbolProto","symbolToString","baseToString","trimmedEndIndex","reTrimStart","createSet","setToArray","seenIndex","isKey","stringToPath","arrayBuffer","root","freeExports","nodeType","freeModule","cloneArrayBuffer","dataView","reFlags","regexp","exec","symbolValueOf","symbol","typedArray","nativeMax","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","coreJsData","placeholder","baseRest","isIterateeCall","assigner","sources","guard","iterable","createCtor","isBind","Ctor","wrapper","thisBinding","createHybrid","createRecurry","getHolder","replaceHolders","arity","composeArgs","composeArgsRight","countHolders","reorder","partialsRight","holdersRight","argPos","ary","isAry","isBindKey","isFlip","holdersCount","newHolders","reverse","isLaziable","setData","setWrapToString","wrapFunc","isCurry","newData","createBind","createCurry","createPartial","getData","mergeData","flatten","freeGlobal","baseGetAllKeys","realNames","otherFunc","isKeyable","map","baseIsNative","getValue","getPrototype","overArg","getPrototypeOf","nativeObjectToString","isOwn","unmasked","arrayFilter","stubArray","propertyIsEnumerable","nativeGetSymbols","getOwnPropertySymbols","mapTag","promiseTag","setTag","weakMapTag","dataViewTag","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ctorString","reWrapDetails","reSplitDetails","match","hasFunc","nativeCreate","cloneDataView","cloneRegExp","cloneSymbol","reWrapComment","details","spreadableSymbol","isConcatSpreadable","reIsUint","isArrayLike","reIsDeepProp","reIsPlainProp","getFuncName","lodash","funcName","other","uid","maskSrcKey","IE_PROTO","assocIndexOf","splice","pop","getMapData","memoize","PLACEHOLDER","WRAP_ARY_FLAG","srcBitmask","newBitmask","isCombo","freeProcess","nodeUtil","types","binding","transform","otherArgs","baseSlice","indexes","oldArray","freeSelf","shortOut","getWrapDetails","insertWrapDetails","updateWrapDetails","reference","nativeNow","Date","now","count","lastCalled","stamp","pairs","LARGE_ARRAY_SIZE","memoizeCapped","rePropName","reEscapeChar","quote","subString","reWhitespace","charAt","wrapFlags","pair","sort","clone","createAssigner","assign","baseFill","baseHasIn","hasPath","baseIntersection","castArrayLikeObject","intersection","mapped","baseIsArguments","stubFalse","baseIsMap","nodeIsMap","objectCtorString","baseIsSet","nodeIsSet","baseIsTypedArray","nodeIsTypedArray","arrayLikeKeys","baseKeys","baseKeysIn","memoized","Cache","merge","baseUnset","customOmitClone","flatRest","omit","CLONE_DEEP_FLAG","createWrap","partialRight","basePick","pick","toNumber","INFINITY","toFinite","remainder","baseClamp","baseTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","isBinary","baseUniq","wrapperClone","forge","registerAlgorithm","mode","cipher","aes","Algorithm","startEncrypting","iv","_createCipher","decrypt","createEncryptionCipher","startDecrypting","createDecryptionCipher","init","initialize","blockSize","encrypt","inBlock","outBlock","_updateBlock","_w","_init","options","util","putByte","getInt32","encryptOp","_expandKey","modes","ecb","cbc","cfb","ofb","ctr","gcm","sbox","isbox","rcon","mix","imix","xtime","e2","e4","e8","sx","sx2","me","ime","ei","temp","w","iNk","Nk","m0","m1","m2","m3","wnew","wi","a2","b2","c2","Nr","round","algorithm","toUpperCase","createDecipher","createCipher","ByteBuffer","asn1","_checkBufferLength","available","requested","Class","UNIVERSAL","APPLICATION","CONTEXT_SPECIFIC","PRIVATE","Type","NONE","BOOLEAN","INTEGER","BITSTRING","OCTETSTRING","NULL","OID","ODESC","EXTERNAL","REAL","ENUMERATED","EMBEDDED","UTF8","ROID","SEQUENCE","SET","PRINTABLESTRING","IA5STRING","UTCTIME","GENERALIZEDTIME","BMPSTRING","tagClass","constructed","composed","bitStringContents","original","excludeBitStringContents","obj1","obj2","equal","includeBitStringContents","getBerValueLength","getByte","getInt","_fromDer","b1","longFormBytes","_getValueLength","strict","getBytes","decodeBitStrings","savedRead","savedRemaining","unused","used","tc","ex","getInt16","asn1Options","fromDer","parseAllBytes","byteCount","toDer","useBitStringContents","putBytes","putBuffer","putInt16","lenBytes","oidToDer","oid","valueBytes","derToOid","utcTimeToDate","utc","date","year","MM","DD","hh","mm","ss","setUTCFullYear","setUTCHours","setTime","generalizedTimeToDate","gentime","YYYY","fff","isUTC","parseFloat","setFullYear","setHours","dateToUtcTime","rval","format","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","dateToGeneralizedTime","integerToDer","putSignedInt","integer","derToInteger","getSignedInt","validate","v","capture","optional","captureAsn1","captureBitStringContents","captureBitStringValue","_nonLatinRegex","prettyPrint","level","indentation","indent","IA5String","subvalues","pki","oids","bytesToHex","decodeUtf8","api","_reverseAlphabets","maxline","base","digits","carry","at","_encodeWithByteBuffer","regex","k","algorithms","getAlgorithm","BlockCipher","_finish","_input","_op","_decrypt","opts","update","compact","finish","pad","unpad","overflow","afterFinish","transformIV","ints","blocks","inc32","block","from64To32","_ints","_inBlock","_outBlock","putInt32","padding","fillWithByte","truncate","_prev","_iv","_partialBlock","_partialOutput","_partialBytes","inputLength","partialBytes","_R","additionalData","_cipherLength","_tagLength","tagLength","_tag","_hashBlock","_hashSubkey","componentBits","_m","generateHashTable","ivLength","_j0","ghash","_aDataLength","_s","lengths","multiply","z_i","v_i","lsb","tableMultiply","z","x_i","ah","h","bits","multiplier","perInt","shft","generateSubHashTable","mid","half","m_i","m_j","des","_keys","pc2bytes0","pc2bytes1","pc2bytes2","pc2bytes3","pc2bytes4","pc2bytes5","pc2bytes6","pc2bytes7","pc2bytes8","pc2bytes9","pc2bytes10","pc2bytes11","pc2bytes12","pc2bytes13","shifts","left","right","lefttmp","righttmp","_createKeys","spfunction1","spfunction2","spfunction3","spfunction4","spfunction5","spfunction6","spfunction7","spfunction8","looping","endloop","loopinc","right1","right2","usePureJavaScript","hmac","_key","_md","_ipadding","_opadding","ctx","md","keylen","blockLength","digest","inner","getMac","dbits","jsbn","BigInteger","fromNumber","nbi","am3","xl","xh","l","am","navigator","appName","DB","DM","DV","FV","F1","F2","rr","vv","BI_RC","int2char","intAt","nbv","r","fromInt","nbits","t","Classic","Montgomery","mp","invDigit","mpl","mph","um","mt2","op_and","op_or","op_xor","op_andnot","lbit","cbit","NullExp","nNop","Barrett","r2","q3","ONE","dlShiftTo","mu","divide","convert","compareTo","mod","revert","reduce","divRemTo","mulTo","multiplyTo","sqrTo","squareTo","ZERO","subTo","copyTo","u0","clamp","drShiftTo","fromRadix","mi","sh","lShiftTo","bs","cbs","bm","ds","rShiftTo","q","pm","pt","ts","ms","nsh","ys","y0","yt","d1","d2","qd","isEven","exp","negate","toRadix","km","p","bitLength","modPowInt","multiplyUpperTo","multiplyLowerTo","dAddOffset","lowprimes","lplim","chunkSize","signum","cs","intValue","dMultiply","testBit","bitwiseTo","shiftLeft","isProbablePrime","nextBytes","op","f","changeBit","addTo","modInt","millerRabin","n1","subtract","getLowestSetBit","shiftRight","prng","modPow","byteValue","shortValue","and","or","xor","andNot","not","bitCount","setBit","clearBit","flipBit","divideAndRemainder","k1","g2","is1","modInverse","ac","u","gcd","mgf","mgf1","generate","seed","maskLen","ceil","digestLength","_IN","_I_","pbe","encryptedPrivateKeyValidator","PBES2AlgorithmsValidator","pkcs12PbeParamsValidator","hash","prfOidToMessageDigest","prfOid","prfAlgorithm","supported","prfAlgorithmToMessageDigest","sha512","encryptPrivateKeyInfo","password","saltSize","dkLen","encryptionAlgorithm","encryptedData","salt","getBytesSync","countBytes","ivLen","encOid","cipherFn","dk","pkcs5","pbkdf2","params","hexToBytes","createPbkdf2Params","saltBytes","generatePkcs12Key","decryptPrivateKeyInfo","encryptionOid","getCipher","encryptionParams","encrypted","encryptedPrivateKeyToPem","epki","body","pem","encryptedPrivateKeyFromPem","headerType","procType","encryptRsaPrivateKey","rsaKey","legacy","wrapRsaPrivateKey","privateKeyToAsn1","opensslDeriveBytes","version","dekInfo","parameters","decryptRsaPrivateKey","rc2","privateKeyFromAsn1","iter","sha1","passBuf","D","Slen","S","Plen","I","B","Inew","chunk","setAt","getCipherForPBES2","getCipherForPKCS12PBE","supportedOids","kdfOid","kdfSalt","kdfIterationCount","encIv","dIvLen","md5","digests","crypto","isNodejs","pbkdf2Sync","err","hLen","prf","u_c","u_c1","int32ToBytes","xorBytes","setImmediate","foldHeader","header","insertSpace","$1","candidate","insert","ltrim","contentDomain","headers","encode64","rMessage","rHeader","rCRLF","decode64","lines","li","line","nl","next","vi","pkcs1","rsa_mgf1","maskLength","encode_rsa_oaep","label","mgf1Md","keyLength","lHash","PS","PS_length","seedLength","dbMask","maskedDB","seedMask","maskedSeed","decode_rsa_oaep","em","expectedLength","db","lHashPrime","in_ps","is_0","error_mask","p12","pkcs12","contentInfoValidator","pfxValidator","safeBagValidator","attributeValidator","certBagValidator","_getBagsByAttribute","safeContents","attrName","attrValue","bagType","safeBags","bag","attributes","_decodePkcs7Data","_decryptSafeContents","pkcs7","encryptedDataValidator","contentType","encAlgorithm","encParameter","encryptedContentAsn1","_decodeSafeContents","safeBag","validator","decoder","bagId","_decodeBagAttributes","bagAttributes","bagAsn1","bagValue","pkcs8ShroudedKeyBag","keyBag","certBag","certId","x509Certificate","certAsn1","cert","certificateFromAsn1","decodedAttrs","pkcs12FromAsn1","pfx","getBags","filter","localKeyId","localKeyIdHex","friendlyName","getBagsByFriendlyName","getBagsByLocalKeyId","content","mac","macKeyBytes","macAlgorithm","sha256","sha384","macSalt","macIterations","macKey","generateKey","macDigest","authSafe","contentInfo","_decodeAuthenticatedSafe","toPkcs12Asn1","useMac","generateLocalKeyId","bagAttrs","pairedCert","certificateFromPem","certificateToAsn1","attrs","contents","chain","certSafeBags","certBagAttrs","certSafeBag","certSafeContents","certCI","pkAsn1","keySafeContents","keyCI","macData","safe","macValue","p7","_recipientFromAsn1","recipientInfoValidator","issuer","RDNAttributesAsArray","serialNumber","serial","toHex","encryptedContent","parameter","encKey","_recipientsToAsn1","recipients","distinguishedNameToAsn1","_signerToAsn1","digestAlgorithm","authenticatedAttributesAsn1","signatureAlgorithm","signature","unauthenticatedAttributes","attrsAsn1","attr","_attributeToAsn1","messageDigest","signingTime","jan_1_1950","jan_1_2050","timestamp","parse","_fromAsn1","rawCapture","_decryptContent","ciph","messageFromPem","messageFromAsn1","messageToPem","pemObj","toAsn1","envelopedData","createEnvelopedData","createEncryptedData","signedData","createSignedData","fromAsn1","certificates","crls","signers","digestAlgorithmIdentifiers","signerInfos","signedDataValidator","certs","sign","addSigner","signer","certificate","privateKeyFromPem","authenticatedAttributes","rsaEncryption","encodeUtf8","detached","detachedContent","mds","ai","_signersToAsn1","addSignerInfos","addDigestAlgorithmIds","verify","addCertificate","addCertificateRevokationList","crl","envelopedDataValidator","infos","_recipientsFromAsn1","recipientInfos","ec","findRecipient","sAttr","rAttr","recipient","privKey","desCBC","addRecipient","publicKey","keyLen","ciphFn","p7v","pkcs7asn1","encryptedContentInfoValidator","signerValidator","pemToDer","privateKeyToPem","privateKeyInfoToPem","prime","GCD_30_DELTA","THIRTY","generateProbablePrime","rng","Worker","primeincFindPrimeWithoutWorkers","generateRandom","numWorkers","workers","workLoad","workerScript","estimateCores","cores","addEventListener","workerMessage","terminate","hex","primeincFindPrimeWithWorkers","primeincFindPrime","mrTests","getMillerRabinTests","millerRabinTests","maxBlockTime","_primeinc","deltaIdx","bits1","_crypto","versions","plugin","time","reseeds","generated","keyBytes","pools","_reseedSync","messageLength","_seed","needed","collect","seedFileSync","_2powK","seedBytes","formatKey","formatSeed","defaultSeedFile","getRandomValues","globalScope","msCrypto","entropy","Uint32Array","QuotaExceededError","pool","generateSync","increment","seedFile","_reseed","randomBytes","collectInt","registerWorker","worker","listener","removeEventListener","pss","saltLength","sLen","salt_","pssobj","modBits","emBits","emLen","mHash","m_","ps","mask","checkLen","jQuery","prng_aes","_prng_aes_output","_prng_aes_buffer","spawnPrng","_ctx","_navBytes","mousemove","clientX","clientY","keypress","charCode","createInstance","piTable","rol","word","ror","expandKey","effKeyBits","L","T","T1","T8","TM","mixRound","mashRound","_output","K","getInt16Le","R","runPlan","plan","putInt16Le","ptr","rsa","privateKeyValidator","rsaPrivateKeyValidator","rsaPublicKeyValidator","publicKeyValidator","digestInfoValidator","emsaPkcs1v15encode","oidBytes","digestInfo","_modPow","pub","dP","dQ","qInv","xp","xq","_encodePkcs1_v1_5","bt","eb","padByte","padNum","numZeros","padBytes","_decodePkcs1_v1_5","ml","_generateKeyPair","getPrime","pBits","qBits","p1","q1","phi","privateKey","setPrivateKey","setPublicKey","_bnToBytes","_getMillerRabinTests","_detectNodeCrypto","_detectSubtleCrypto","subtle","_detectSubtleMsCrypto","_intToUint8Array","yhex","ed","zeros","expected","xhex","createKeyPairGenerationState","eInt","pqState","stepKeyPairGenerationState","t2","t1","total","generateKeyPair","modulusLength","publicExponent","publicKeyEncoding","privateKeyEncoding","priv","publicKeyFromPem","exportKey","pkcs8","setRsaPublicKey","genOp","oncomplete","exportOp","onerror","keypair","generateKeyPairSync","scheme","schemeOptions","_parseAllDigestBytes","algorithmIdentifier","md2","sha224","setRsaPrivateKey","privateKeyModulus","privateKeyPublicExponent","privateKeyPrivateExponent","privateKeyPrime1","privateKeyPrime2","privateKeyExponent1","privateKeyExponent2","privateKeyCoefficient","privateKeyToRSAPrivateKey","publicKeyFromAsn1","publicKeyOid","rsaPublicKey","publicKeyModulus","publicKeyExponent","publicKeyToAsn1","publicKeyToSubjectPublicKeyInfo","publicKeyToRSAPublicKey","_initialized","_padding","fillString","fullMessageLength","messageLengthSize","messageLength64","int32s","h0","h1","h2","h3","h4","_update","finalBlock","s2","_k","h5","h6","h7","s0","maj","_states","_h","messageLength128","hlen","t1_hi","t1_lo","t2_hi","t2_lo","s0_hi","s0_lo","s1_hi","ch_hi","maj_hi","maj_lo","a_hi","a_lo","b_hi","b_lo","c_hi","c_lo","d_hi","d_lo","e_hi","e_lo","f_hi","f_lo","g_hi","g_lo","h_hi","h_lo","w2","w7","w15","w16","baseN","_checkBitsParam","ByteStringBuffer","isArrayBuffer","isArrayBufferView","_constructedStringLength","browser","callbacks","event","stopPropagation","div","createElement","oldSetImmediate","setAttribute","_optimizeConstructedString","isEmpty","putString","putInt24","putInt24Le","putInt32Le","putInt","getInt24","getInt24Le","getInt32Le","DataBuffer","readOffset","growSize","writeOffset","accommodate","amount","setUint8","view","binary","raw","Uint16Array","text","utf16","setInt16","setInt8","setInt32","getInt8","getUint8","utf8","s1","s3","_base64","_base64Idx","_base58","chr1","chr2","chr3","enc1","enc2","enc3","enc4","unescape","encodeURIComponent","decodeURIComponent","escape","base58","deflate","inflate","_setStorageObject","removeItem","JSON","stringify","setItem","_getStorageObject","getItem","_setItem","_getItem","_removeItem","empty","prop","_clearItems","_callStorageFunction","location","done","exception","idx","localStorage","clearItems","part","re","argi","formatNumber","decimals","dec_point","thousands_sep","toFixed","formatSize","bytesFromIP","ip","bytesFromIPv4","bytesFromIPv6","blanks","bytesToIP","bytesToIPv4","bytesToIPv6","zeroGroups","zeroMaxGroup","group","unshift","hardwareConcurrency","Blob","blobUrl","URL","createObjectURL","st","et","sample","samples","avg","revokeObjectURL","results","overlaps","r1","overlap","_shortNames","x509CertificateValidator","rsassaPssParameterValidator","certificationRequestInfoValidator","certificationRequestValidator","_getAttribute","shortName","rdn","si","valueTagClass","CRIAttributesAsArray","seq","extensionRequest","extensions","certificateExtensionFromAsn1","_readSignatureParameters","fillDefaults","algorithmOid","hashOid","maskGenOid","maskGenHashOid","_createSignatureDigest","signatureOid","_verifySignature","sha1WithRSAEncryption","sha1WithRSASignature","signatureParameters","_dnToAsn1","_fillMissingFields","attribute","valueConstructed","certificateExtensionToAsn1","_fillMissingExtensionFields","extension","b3","digitalSignature","nonRepudiation","keyEncipherment","dataEncipherment","keyAgreement","keyCertSign","cRLSign","encipherOnly","decipherOnly","cA","pathLenConstraint","client","server","email","objsign","reserved","sslCA","emailCA","objCA","altNames","altName","comment","ski","generateSubjectKeyIdentifier","subjectKeyIdentifier","keyIdentifier","authorityCertIssuer","subSeq","fullNameGeneralNames","_signatureParametersToAsn1","_CRIAttributesToAsn1","csr","computeHash","certificateToPem","publicKeyToPem","publicKeyToRSAPublicKeyPem","getPublicKeyFingerprint","delimiter","certificationRequestFromPem","certificationRequestFromAsn1","certificationRequestToPem","certificationRequestToAsn1","createCertificate","siginfo","validity","notBefore","notAfter","getField","sn","addField","subject","setSubject","uniqueId","setIssuer","setExtensions","exts","getExtension","tbsCertificate","getTBSCertificate","issued","expectedIssuer","actualIssuer","isIssuer","iattr","sattr","verifySubjectKeyIdentifier","certVersion","certSerialNumber","certSignatureOid","certSignatureParams","certinfoSignatureOid","certinfoSignatureParams","certSignature","certValidity1UTCTime","certValidity2GeneralizedTime","certValidity3UTCTime","certValidity4GeneralizedTime","imd","ibytes","certIssuer","certIssuerUniqueId","smd","sbytes","certSubject","certSubjectUniqueId","certExtensions","certificateExtensionsFromAsn1","subjectPublicKeyInfo","extseq","critical","ev","gn","createCertificationRequest","csrVersion","csrSignatureOid","csrSignatureParams","csrSignature","certificationRequestInfo","certificationRequestInfoSubject","getAttribute","addAttribute","certificationRequestInfoAttributes","setAttributes","getCertificationRequestInfo","cri","_dateToAsn1","tbs","certificateExtensionsToAsn1","dn","createCaStore","caStore","getBySubject","ensureSubjectHasHash","getIssuer","hasCertificate","der1","listAllCertificates","certList","removeCertificate","certificateError","bad_certificate","unsupported_certificate","certificate_revoked","certificate_expired","certificate_unknown","unknown_ca","verifyCertificateChain","validityCheckDate","shift","selfSigned","parents","verified","se","keyUsage","basicConstraints","bcExt","keyUsageExt","vfd","helpers","HMAC","sha","checkIv","commonCbcEncryptFN","setupFallback","pdata","nodeCrypto","createCipheriv","final","subtleCrypto","importKey","alg","cdata","commonCbcDecryptFN","createDecipheriv","checkKey","cbcHmacEncryptFN","commonEncrypt","eKey","iKey","adata","aad","mdata","int64ToBuffer","cbcHmacDecryptFN","commonDecrypt","EncryptionLabel","IntegrityLabel","DotLabel","generateCek","masterKey","epu","epv","masterSize","cekSize","int32ToBuffer","generateCik","cikSize","concatKdfCbcHmacEncryptFN","cek","cik","kdata","promises","concatKdfCbcHmacDecryptFN","loose","aesCbcHmacSha2","CONSTANTS","GCM","gcmEncryptFN","wrap","commonChecks","prepareResults","setAAD","getAuthTag","tagStart","amt","CHUNK_SIZE","clen","poff","doChunk","plen","gcmDecryptFN","setAuthTag","coff","aesGcm","A0","longToBigEndian","kwEncryptFN","A","jdx","wrapKey","kwDecryptFN","unwrapKey","aesKw","concatDeriveFn","hashLen","HASHLENGTH","otherInfo","N","okm","step","derive","ENCLENGTH","KEYLENGTH","NONCELENGTH","direct","once","ecc","EC_KEYSIZES","convertToObj","isPublic","asBuffer","UNCOMPRESSED","EC_OID","ERR_MSG","countPadding","stop","convertToForge","crv","asPublicKey","asPrivateKey","convertToJWK","key_ops","use","convertToBuffer","curveSize","derToConcat","seqLength","rLength","rOffset","sLength","sOffset","rPadding","sPadding","rPad","o","sPad","concatToDer","rsBytes","shortLength","convertToPEM","isPrivate","curveNameToOid","ecUtil","hkdf","idealHash","curve","ecdh","doEcdhesCommonDerive","pubKey","prependLen","algId","apu","apv","public","validatePublic","kdf","ECDH","shared","pk","form","isValid","createECDH","secret","computeSecret","algParams","namedCurve","deriveBits","unwrap","kw","epk","ecrypt","enc","idealCurve","ecdsaSignFN","nodejs","nodeHash","getHashes","createSign","ecdsaVerifyFN","createVerify","valid","rs","ecdsa","MAX_INT32","getCryptoSubtle","getCryptoNodeJS","webcrypto","fallback","impl","check","DOMException","NOT_SUPPORTED_ERR","hkdfDeriveFn","info","expand","hmacSignFN","checkKeyLength","createHmac","sig","hmacVerifyFN","vrfy","implementations","ALGS_DIGEST","ALGS_DERIVE","ALGS_SIGN","ALGS_VRFY","ALGS_ENC","ALGS_DEC","KW","NULL_BUFFER","fixSalt","pbkdf2Fn","prepareProps","itrs","keyval","mainAlgo","pbes2EncryptFN","deriveAlg","p2s","p2c","pbes2","pbes2DecryptFN","dp","dq","qi","convertToPem","cacheKey","rsaUtil","nodeSupport","RSA1_5","nodeSupportCheck","constants","rsaesEncryptFn","publicEncrypt","native","rsaesDecryptFn","privateDecrypt","rsaes","nodePSSsupport","RSA_PSS_SALTLEN_DIGEST","rsassaV15SignFn","rsassaV15VerifyFn","rsassaPssSignFn","RSA_PKCS1_PSS_PADDING","rsassaPssVerifyFn","rsassa","createHash","Long","pack","E1","E1L","E1B","LOOKUP","generateLookup","arrayCopy","srcPos","dest","destPos","arrayEqual","a1","asBytes","intToBigEndian","asInts","bigEndianToInt","oneAsInts","shiftRightN","nInv","r0","multiplyP","multiplyP8","multipliers","cipherHelpers","Gcm","nonce","bufLength","bufBlock","H","zeroBlock","J0","gHASH","X","gHASHBlock","SAt","SAtPre","atBlock","atBlockPos","atLength","atLengthPre","counter","bufOff","totalLength","processAADBytes","inV","inOff","outOff","resultLen","inLen","outputBlock","isZero","initCipher","extra","gCTRPartial","greaterThan","gHASHPartial","gCTRBlock","getNextCounterBlock","outb","off","Y","multiplyH","Gcm8KMultiplier","M","inb","low","high","ns","bigEndianToLong","X9ECParameters","fromHex","getCurve","getG","getN","getH","G","CURVES","ECCurveFp","decodePointHex","secp384r1","secp521r1","secp256r1","hex2bn","bn2bin","bn","bin2bn","keySizeBytes","normalizeEcdsa","log2n","mdLen","ECPublicKey","ECPointFp","fromBigInteger","point","ECPrivateKey","contains","u1","u2","multiplyTwo","getX","toBigInteger","toPublicKey","getY","keysize","pubkey","privkey","ECFieldElementFp","zinv","infinity","reducer","square","isInfinity","twice","getInfinity","THREE","x1","y1","v2","v3","x1v2","zu2","x3","y3","z3","y1z1","y1sqz1","neg","hBit","both","getP","getA","getB","xHex","yHex","encodePointHex","oLen","modeRaw","_blocks","AlgConfig","JWK","pako","DEFAULT_OPTIONS","JWEDecrypter","ks","globalOpts","assumedKey","keystore","isKeyStore","extraHandlers","handlers","handlerKeys","algSpec","protected","encrypted_key","ciphertext","fields","protect","algKey","rcptList","crit","unprotected","asKey","toObject","jwe","processKey","rcpt","algPromise","prekey","kid","processing","prepare","enkKey","payload","plaintext","zip","inflateRaw","complete","decrypter","createDecrypt","contentAlg","generateCEK","DEFAULTS","JWEEncrypter","cfg","finalized","protectAll","encAlg","rcpts","single","one","tks","rpromise","algAlg","jwk","MODE_ENCRYPT","wrapped","rjwe","kty","procR","lenProtect","unprotect","lenUnprotect","deflateRaw","flattened","encrypter","createEncrypt","rcptStart","MODE_WRAP","ref","some","freeze","createKeyStore","JWE","v4","uuidv4","uniq","ALGORITHMS","HELPERS","UTIL","prints","excluded","json","INTERNALS","THUMBPRINT_KEY","included","COMMON_PROPS","private","THUMBPRINT_HASH","thumbprint","MODE_SIGN","MODE_VERIFY","MODE_DECRYPT","MODE_UNWRAP","algs","signKey","signProps","verifyKey","verifyProps","encryptKey","encryptProps","decryptKey","decryptProps","wrapProps","unwrapProps","ecutil","depsecc","BaseKey","SIG_ALGS","WRAP_ALGS","oidToCurveName","JWKEcCfg","unpackProps","validators","embeddedPrivateKey","JWKEcFactory","import","keyOid","keyParams","keyValue","config","register","X509CertificateValidator","allowed","JWKStore","KeyStore","JWKRegistry","GLOBAL_REGISTRY","importFrom","registry","der","field","processCert","commonName","x5t","keysets","keytype","extras","factors","fromPEM","candidates","matches","supports","items","remove","asKeyStore","store","createKey","KeyRegistry","ENC_ALGS","adjustDecryptProps","adjustEncryptProps","JWKOctetCfg","mins","JWKOctetFactory","rsau","JWKRsaCfg","JWKRsaFactory","incoming","outgoing","JWS","JWSSigner","signatories","sigs","signatures","jws","signs","signStart","signList","allFields","signatory","allowEmbeddedKey","JWSVerifier","sigList","processSig","x5c","verifier","jose","perform","prot","quoteRE","algspec","fmt","specAllowed","specDisallowed","ptnAllowed","ptnDisallowed","ptn","prefix","wildcard","suffix","makeRE","Boolean","DEFAULT_GROW_SIZE","delta","begin","getBuffer","orig","putNative","ctors","typedArrayCtors","Float32Array","Float64Array","ta","ctor","findTypedArrayFor","Deflate","gzip","Inflate","ungzip","zlib_deflate","utils","strings","ZStream","Z_NO_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_OK","Z_STREAM_END","Z_DEFAULT_COMPRESSION","Z_DEFAULT_STRATEGY","Z_DEFLATED","method","windowBits","memLevel","strategy","opt","ended","chunks","strm","avail_out","status","deflateInit2","deflateSetHeader","dictionary","dict","string2buf","deflateSetDictionary","_dict_set","deflator","flush_mode","_flush_mode","next_in","avail_in","next_out","onData","deflateEnd","onEnd","flattenChunks","zlib_inflate","GZheader","Z_NEED_DICT","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","to","inflateInit2","inflateGetHeader","inflateSetDictionary","inflator","last_avail_out","inflateReset","next_out_utf8","utf8border","tail","utf8str","buf2string","inflateEnd","_has","STR_APPLY_UIA_OK","__","_utf8len","TextEncoder","m_pos","str_len","buf_len","TextDecoder","utf16buf","c_len","buf2binstring","adler","Z_PARTIAL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_BINARY","Z_TEXT","Z_UNKNOWN","crcTable","makeTable","crc","_tr_init","_tr_stored_block","_tr_flush_block","_tr_tally","_tr_align","adler32","crc32","MAX_MATCH","MIN_LOOKAHEAD","INIT_STATE","BUSY_STATE","FINISH_STATE","errorCode","rank","zero","slide_hash","wsize","w_size","hash_size","head","prev","HASH","hash_shift","hash_mask","flush_pending","pending","pending_buf","pending_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","more","window_size","ins_h","deflate_stored","have","min_block","pending_buf_size","bi_valid","high_water","deflate_fast","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH","sym_next","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","configuration_table","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","HEAP_SIZE","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","MAX_BITS","heap","heap_len","heap_max","sym_buf","lit_bufsize","sym_end","opt_len","static_len","bi_buf","deflateStateCheck","deflateResetKeep","data_type","deflateReset","deflateInit","old_flush","level_flags","hcrc","os","beg","gzhead_extra","bstate","deflate_huff","deflate_rle","dictLength","tmpDict","avail","deflateInfo","xflags","extra_len","BAD","_in","_out","dmax","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","dist","from_source","lencode","distcode","lenbits","distbits","top","dolen","dodist","sane","inflate_fast","inflate_table","HEAD","DICT","TYPE","TYPEDO","COPY_","LEN_","LEN","CHECK","MEM","zswap32","InflateState","havedict","flags","wbits","ncode","nlen","ndist","work","lendyn","distdyn","back","was","inflateStateCheck","inflateResetKeep","Int32Array","inflateReset2","lenfix","distfix","virgin","fixedtables","updatewindow","inflateInit","put","here_bits","here_op","here_val","last_bits","last_op","last_val","hbuf","order","inf_leave","dictid","inflateInfo","MAXBITS","lbase","lext","dbase","dext","lens_index","codes","table_index","incr","curr","drop","huff","offs","LITERALS","L_CODES","D_CODES","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","_dist_code","_length_code","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","put_short","send_bits","send_code","tree","bi_reverse","gen_codes","next_code","init_block","END_BLOCK","bi_windup","smaller","_n2","_m2","pqdownheap","compress_block","ltree","dtree","lc","build_tree","desc","stree","xbits","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","stored_len","LENGTH_CODES","tr_static_init","opt_lenb","static_lenb","max_blindex","block_mask","detect_data_type","BL_CODES","build_bl_tree","lcodes","dcodes","blcodes","send_all_trees","STATIC_TREES","bi_flush","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","clearTimeout","currentQueue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","title","env","argv","on","addListener","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","cwd","chdir","umask","v1","uuid","byteToHex","bth","bind","rnds8","rnds","_nodeId","_clockseq","bytesToUuid","_lastMSecs","_lastNSecs","clockseq","msecs","getTime","nsecs","dt","tl","tmh","ii","wasm","WebAssembly","Instance","Module","unsigned","isLong","ctz32","clz32","__isLong__","INT_CACHE","UINT_CACHE","cachedObj","fromBits","UZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","radix","radixToPower","power","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","UONE","NEG_ONE","LongPrototype","toInt","isNegative","radixLong","rem1","rem","remDiv","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","notEquals","neq","ne","lessThan","comp","lt","lessThanOrEqual","lte","le","gt","greaterThanOrEqual","gte","ge","thisNeg","otherNeg","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtrahend","b00","divisor","approx","toUnsigned","shru","shr","shl","log2","approxRes","approxRem","modulo","countLeadingZeros","clz","countTrailingZeros","ctz","numBits","shiftRightUnsigned","shr_u","rotateLeft","rotl","rotateRight","rotr","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","_default"],"sourceRoot":""}